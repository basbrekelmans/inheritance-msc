direct?;source;from;to;from declaration
True;Parameter;cs+class://Castle/Facilities/Startable/StartableFacility/DeferredStartFlag;cs+class://Castle/Facilities/Startable/StartFlag;DeferredStart in Castle.Facilities.Startable.StartableFacility
False;Parameter;cs+class://Castle/Facilities/Startable/StartableFacility/DeferredTryStartFlag;cs+class://Castle/Facilities/Startable/StartableFacility/DeferredStartFlag;DeferredTryStart in Castle.Facilities.Startable.StartableFacility
True;Parameter;cs+class://Castle/Facilities/Startable/StartFlag;cs+interface://Castle/Facilities/Startable/IStartFlagInternal;Init in Castle.Facilities.Startable.StartableFacility
True;ThisChangingType;cs+class://Castle/MicroKernel/ComponentActivator/WebUserControlComponentActivator;cs+class://Castle/MicroKernel/ComponentActivator/DefaultComponentActivator;InternalCreate in Castle.MicroKernel.ComponentActivator.DefaultComponentActivator
True;Parameter;cs+class://Castle/Core/ComponentDependencyModel;cs+class://Castle/Core/DependencyModel;AddAnyServiceOverrides in Castle.MicroKernel.ModelBuilder.Inspectors.ConfigurationParametersInspector
True;ThisChangingType;cs+class://Castle/Core/ComponentDependencyModel;cs+class://Castle/Core/DependencyModel;Equals in Castle.Core.DependencyModel
True;Parameter;cs+class://Castle/Core/ComponentDependencyModel;cs+class://Castle/Core/DependencyModel;Attach in Castle.Core.InterceptorReference
True;Assignment;cs+class://Castle/Core/ComponentDependencyModel;cs+class://Castle/Core/DependencyModel;Attach in Castle.MicroKernel.ComponentReference
True;Parameter;cs+class://Castle/Core/ComponentDependencyModel;cs+class://Castle/Core/DependencyModel;AddSubscriberDependecyToModel in Castle.Facilities.EventWiring.EventWiringInspector
True;Parameter;cs+class://Castle/Core/ComponentDependencyModel;cs+class://Castle/Core/DependencyModel;AddExtensionDependency in Castle.Facilities.WcfIntegration.Internal.WcfUtils
True;Parameter;cs+class://Castle/Core/ConstructorDependencyModel;cs+class://Castle/Core/DependencyModel;CheckCtorCandidate in Castle.MicroKernel.ComponentActivator.DefaultComponentActivator
True;Parameter;cs+class://Castle/Core/ConstructorDependencyModel;cs+class://Castle/Core/DependencyModel;CreateConstructorArguments in Castle.MicroKernel.ComponentActivator.DefaultComponentActivator
True;Parameter;cs+class://Castle/Core/ConstructorDependencyModel;cs+class://Castle/Core/DependencyModel;AddConstructor in Castle.Core.ComponentModel
True;ThisChangingType;cs+class://Castle/Core/ConstructorDependencyModel;cs+class://Castle/Core/DependencyModel;Equals in Castle.Core.DependencyModel
True;Parameter;cs+class://Castle/Core/ConstructorDependencyModel;cs+class://Castle/Core/DependencyModel;CollectDuplicatesBetweenPropertiesAndConstructors in Castle.Windsor.Diagnostics.DuplicatedDependenciesDiagnostic
True;Parameter;cs+class://Castle/Core/ConstructorDependencyModel;cs+class://Castle/Core/DependencyModel;CollectDuplicatesBetweenPropertiesAndConstructors in Castle.Windsor.Diagnostics.DuplicatedDependenciesDiagnostic
True;Parameter;cs+class://Castle/Core/Internal/TypeByInheritanceDepthMostSpecificFirstComparer;cs+interface://System/Collections/Generic/IComparer[1];More_specific_type_goes_first in Castle.MicroKernel.Tests.TypeComparerTestCase
True;Parameter;cs+class://Castle/Core/Internal/TypeByInheritanceDepthMostSpecificFirstComparer;cs+interface://System/Collections/Generic/IComparer[1];More_specific_type_goes_first in Castle.MicroKernel.Tests.TypeComparerTestCase
True;Parameter;cs+class://Castle/Core/Internal/TypeByInheritanceDepthMostSpecificFirstComparer;cs+interface://System/Collections/Generic/IComparer[1];More_specific_type_goes_first_three_classes in Castle.MicroKernel.Tests.TypeComparerTestCase
True;Parameter;cs+class://Castle/Core/Internal/TypeByInheritanceDepthMostSpecificFirstComparer;cs+interface://System/Collections/Generic/IComparer[1];More_specific_type_goes_first_three_classes in Castle.MicroKernel.Tests.TypeComparerTestCase
True;Parameter;cs+class://Castle/Core/Internal/TypeByInheritanceDepthMostSpecificFirstComparer;cs+interface://System/Collections/Generic/IComparer[1];More_specific_type_goes_first_three_classes in Castle.MicroKernel.Tests.TypeComparerTestCase
True;Parameter;cs+class://Castle/Core/Internal/TypeByInheritanceDepthMostSpecificFirstComparer;cs+interface://System/Collections/Generic/IComparer[1];More_specific_type_goes_first_three_classes in Castle.MicroKernel.Tests.TypeComparerTestCase
True;Parameter;cs+class://Castle/Core/Internal/TypeByInheritanceDepthMostSpecificFirstComparer;cs+interface://System/Collections/Generic/IComparer[1];More_specific_type_goes_first_three_classes in Castle.MicroKernel.Tests.TypeComparerTestCase
True;Parameter;cs+class://Castle/Core/Internal/TypeByInheritanceDepthMostSpecificFirstComparer;cs+interface://System/Collections/Generic/IComparer[1];More_specific_type_goes_first_three_classes in Castle.MicroKernel.Tests.TypeComparerTestCase
True;Parameter;cs+class://Castle/Core/PropertyDependencyModel;cs+class://Castle/Core/DependencyModel;BuildDependency in Castle.MicroKernel.ModelBuilder.Inspectors.PropertiesDependenciesModelInspector
True;ThisChangingType;cs+class://Castle/Core/PropertyDependencyModel;cs+class://Castle/Core/DependencyModel;Equals in Castle.Core.DependencyModel
True;Parameter;cs+class://Castle/Facilities/Startable/StartableContributor;cs+interface://Castle/MicroKernel/ModelBuilder/IContributeComponentModelConstruction;Init in Castle.Facilities.Startable.StartableFacility
True;VariableInitializer;cs+class://Castle/Facilities/TypedFactory/Internal/DelegateProxyFactory;cs+interface://Castle/MicroKernel/IProxyFactoryExtension;(field initializer) in Castle.Facilities.TypedFactory.DelegateFactoryActivator
True;Parameter;cs+class://Castle/Facilities/TypedFactory/Internal/DelegateServiceStrategy;cs+interface://Castle/MicroKernel/Handlers/IGenericServiceStrategy;Load in Castle.Facilities.TypedFactory.Internal.DelegateFactory
True;Parameter;cs+class://Castle/Facilities/TypedFactory/TypedFactoryCachingInspector;cs+interface://Castle/MicroKernel/ModelBuilder/IContributeComponentModelConstruction;InitFacility in Castle.Facilities.TypedFactory.TypedFactoryFacility
False;Return;cs+class://Castle/MicroKernel/ComponentActivator/ComponentActivatorException;cs+class://Castle/MicroKernel/ComponentResolutionException;TrackInstanceCalledMultipleTimes in Castle.Core.Internal.HelpfulExceptionsUtil
True;ThisChangingType;cs+class://Castle/MicroKernel/ComponentActivator/ComponentActivatorException;cs+class://Castle/MicroKernel/ComponentResolutionException;ComponentResolutionException in Castle.MicroKernel.ComponentResolutionException
True;ThisChangingType;cs+class://Castle/MicroKernel/ComponentActivator/ComponentActivatorException;cs+class://Castle/MicroKernel/ComponentResolutionException;ComponentResolutionException in Castle.MicroKernel.ComponentResolutionException
True;ThisChangingType;cs+class://Castle/MicroKernel/ComponentActivator/ComponentActivatorException;cs+class://Castle/MicroKernel/ComponentResolutionException;ComponentResolutionException in Castle.MicroKernel.ComponentResolutionException
True;ThisChangingType;cs+class://Castle/MicroKernel/ComponentActivator/ComponentActivatorException;cs+class://Castle/MicroKernel/ComponentResolutionException;ComponentResolutionException in Castle.MicroKernel.ComponentResolutionException
True;ThisChangingType;cs+class://Castle/MicroKernel/ComponentActivator/ComponentActivatorException;cs+class://Castle/MicroKernel/ComponentResolutionException;ComponentResolutionException in Castle.MicroKernel.ComponentResolutionException
True;ThisChangingType;cs+class://Castle/MicroKernel/ComponentActivator/ComponentActivatorException;cs+class://Castle/MicroKernel/ComponentResolutionException;ComponentResolutionException in Castle.MicroKernel.ComponentResolutionException
False;VariableInitializer;cs+class://Castle/MicroKernel/ComponentActivator/ComponentActivatorException;cs+class://Castle/MicroKernel/ComponentResolutionException;When_attemting_to_resolve_component_with_internal_ctor_should_throw_meaningfull_exception in CastleTests.HelpfulExceptionsOnResolveTestCase
False;VariableInitializer;cs+class://Castle/MicroKernel/ComponentActivator/ComponentActivatorException;cs+class://Castle/MicroKernel/ComponentResolutionException;When_attemting_to_resolve_component_with_protected_ctor_should_throw_meaningfull_exception in CastleTests.HelpfulExceptionsOnResolveTestCase
True;Parameter;cs+class://Castle/MicroKernel/ComponentResolutionException;cs+class://System/Exception;ComponentResolutionException in Castle.MicroKernel.ComponentResolutionException
True;Parameter;cs+class://Castle/MicroKernel/ComponentResolutionException;cs+class://System/Exception;ComponentResolutionException in Castle.MicroKernel.ComponentResolutionException
True;Parameter;cs+class://Castle/MicroKernel/ComponentResolutionException;cs+class://System/Exception;ComponentResolutionException in Castle.MicroKernel.ComponentResolutionException
True;Parameter;cs+class://Castle/MicroKernel/ComponentResolutionException;cs+class://System/Exception;ComponentResolutionException in Castle.MicroKernel.ComponentResolutionException
True;Parameter;cs+class://Castle/MicroKernel/ComponentResolutionException;cs+class://System/Exception;ComponentResolutionException in Castle.MicroKernel.ComponentResolutionException
True;Parameter;cs+class://Castle/MicroKernel/ComponentResolutionException;cs+class://System/Exception;ComponentResolutionException in Castle.MicroKernel.ComponentResolutionException
False;Assignment;cs+class://Castle/MicroKernel/ComponentActivator/DefaultComponentActivator;cs+class://Castle/MicroKernel/ComponentActivator/AbstractComponentActivator;CreateComponentActivator in Castle.MicroKernel.DefaultKernel
True;ThisChangingType;cs+class://Castle/MicroKernel/ComponentActivator/FactoryMethodActivator[1];cs+class://Castle/MicroKernel/ComponentActivator/DefaultComponentActivator;InternalCreate in Castle.MicroKernel.ComponentActivator.DefaultComponentActivator
True;Return;cs+class://Castle/MicroKernel/Arguments;cs+interface://System/Collections/IDictionary;GetArguments in Castle.Facilities.TypedFactory.DefaultDelegateComponentSelector
True;Assignment;cs+class://Castle/MicroKernel/Arguments;cs+interface://System/Collections/IDictionary;CreationContext in Castle.MicroKernel.Context.CreationContext
True;Assignment;cs+class://Castle/MicroKernel/Arguments;cs+interface://System/Collections/IDictionary;CreationContext in Castle.MicroKernel.Context.CreationContext
True;Assignment;cs+class://Castle/MicroKernel/Arguments;cs+interface://System/Collections/IDictionary;AdditionalArguments in Castle.MicroKernel.Context.CreationContext
True;Assignment;cs+class://Castle/MicroKernel/Arguments;cs+interface://System/Collections/IDictionary;SetContextualProperty in Castle.MicroKernel.Context.CreationContext
True;Return;cs+class://Castle/MicroKernel/Arguments;cs+interface://System/Collections/IDictionary;EnsureAdditionalArgumentsWriteable in Castle.MicroKernel.Context.CreationContext
True;Assignment;cs+class://Castle/MicroKernel/Arguments;cs+interface://System/Collections/IDictionary;SetContextualProperty in Castle.MicroKernel.Context.CreationContext.ResolutionContext
True;Parameter;cs+class://Castle/MicroKernel/Arguments;cs+interface://System/Collections/IDictionary;AddComponentInstance in Castle.MicroKernel.DefaultKernel
True;Parameter;cs+class://Castle/MicroKernel/Arguments;cs+interface://System/Collections/IDictionary;AddComponentInstance in Castle.MicroKernel.DefaultKernel
True;Return;cs+class://Castle/MicroKernel/Arguments;cs+interface://System/Collections/IDictionary;GetArguments in Castle.Facilities.TypedFactory.DefaultTypedFactoryComponentSelector
True;Parameter;cs+class://Castle/MicroKernel/Arguments;cs+interface://System/Collections/IDictionary;AddTypedFactoryEntry in Castle.Facilities.TypedFactory.TypedFactoryFacility
True;Assignment;cs+class://Castle/MicroKernel/Arguments;cs+interface://System/Collections/IDictionary;GetExtendedProperties in Castle.MicroKernel.Handlers.DefaultGenericHandler
True;Assignment;cs+class://Castle/MicroKernel/Arguments;cs+interface://System/Collections/IDictionary;CustomDependencies in Castle.Core.ComponentModel
True;Assignment;cs+class://Castle/MicroKernel/Arguments;cs+interface://System/Collections/IDictionary;ExtendedProperties in Castle.Core.ComponentModel
True;Parameter;cs+class://Castle/MicroKernel/Arguments;cs+interface://System/Collections/IDictionary;No_resolvable_constructor_with_inline_arguments in CastleTests.HelpfulExceptionsOnResolveTestCase
True;Return;cs+class://Castle/MicroKernel/Arguments;cs+interface://System/Collections/IDictionary;GetArguments in CastleTests.Facilities.TypedFactory.Selectors.SelectorByClosedArgumentType
True;Return;cs+class://Castle/MicroKernel/Arguments;cs+interface://System/Collections/IDictionary;GetArguments in Castle.Windsor.Tests.Facilities.TypedFactory.Selectors.SelectorById
True;Parameter;cs+class://Castle/MicroKernel/Arguments;cs+interface://System/Collections/IDictionary;Typed_arguments_work_for_DynamicParameters_mixed2 in CastleTests.TypedParametersTestCase
True;Parameter;cs+class://Castle/MicroKernel/Arguments;cs+interface://System/Collections/IDictionary;Resolve_all_when_dependency_is_missing_throws_DependencyResolverException in CastleTests.MicroKernelTestCase
True;Parameter;cs+class://Castle/MicroKernel/Arguments;cs+interface://System/Collections/IDictionary;Parameter_takes_precedence_over_registered_service in Castle.MicroKernel.Tests.RuntimeParametersTestCase
True;Parameter;cs+class://Castle/MicroKernel/Arguments;cs+interface://System/Collections/IDictionary;Open_generic_component_with_generic_and_non_generic_service__generic_first_resolve_by_key_Object_throws_friendly_message in CastleTests.Windsor.Tests.MultiServiceGenericComponentsTestCase
True;Parameter;cs+class://Castle/MicroKernel/Arguments;cs+interface://System/Collections/IDictionary;ResolveExtension in Castle.Facilities.WcfIntegration.WcfServiceKeyExtension
True;Parameter;cs+class://Castle/MicroKernel/Arguments;cs+interface://System/Collections/IDictionary;GetInstance in Castle.Facilities.WcfIntegration.WindsorInstanceProvider
True;Cast;cs+class://Castle/MicroKernel/Arguments;cs+interface://System/ICloneable;Custom_stores_get_picked_over_default_ones_in_clone in Castle.Windsor.Tests.MicroKernel.ArgumentsTestCase
True;Parameter;cs+class://Castle/MicroKernel/Arguments/ArgumentsComparer;cs+interface://System/Collections/Generic/IEqualityComparer[1];Arguments in Castle.MicroKernel.Arguments
False;Parameter;cs+class://Castle/MicroKernel/Arguments/ArgumentsComparerExtended;cs+class://Castle/MicroKernel/Arguments/ArgumentsComparer;Arguments in Castle.MicroKernel.Arguments
False;ThisChangingType;cs+class://Castle/MicroKernel/ComponentActivator/NoResolvableConstructorFoundException;cs+class://Castle/MicroKernel/ComponentActivator/ComponentActivatorException;ComponentResolutionException in Castle.MicroKernel.ComponentResolutionException
False;ThisChangingType;cs+class://Castle/MicroKernel/ComponentActivator/NoResolvableConstructorFoundException;cs+class://Castle/MicroKernel/ComponentActivator/ComponentActivatorException;ComponentResolutionException in Castle.MicroKernel.ComponentResolutionException
False;ThisChangingType;cs+class://Castle/MicroKernel/ComponentActivator/NoResolvableConstructorFoundException;cs+class://Castle/MicroKernel/ComponentActivator/ComponentActivatorException;ComponentResolutionException in Castle.MicroKernel.ComponentResolutionException
False;ThisChangingType;cs+class://Castle/MicroKernel/ComponentActivator/NoResolvableConstructorFoundException;cs+class://Castle/MicroKernel/ComponentActivator/ComponentActivatorException;ComponentResolutionException in Castle.MicroKernel.ComponentResolutionException
False;ThisChangingType;cs+class://Castle/MicroKernel/ComponentActivator/NoResolvableConstructorFoundException;cs+class://Castle/MicroKernel/ComponentActivator/ComponentActivatorException;ComponentResolutionException in Castle.MicroKernel.ComponentResolutionException
False;ThisChangingType;cs+class://Castle/MicroKernel/ComponentActivator/NoResolvableConstructorFoundException;cs+class://Castle/MicroKernel/ComponentActivator/ComponentActivatorException;ComponentResolutionException in Castle.MicroKernel.ComponentResolutionException
True;Parameter;cs+class://Castle/MicroKernel/Handlers/ComponentLifecycleExtension;cs+interface://Castle/MicroKernel/Handlers/IResolveExtension;GetDynamicParametersExtension in Castle.MicroKernel.ModelBuilder.Descriptors.DynamicParametersDescriptor
True;Parameter;cs+class://Castle/MicroKernel/Handlers/DependencyInspector;cs+interface://Castle/MicroKernel/Handlers/IDependencyInspector;InspectServiceDependency in Castle.MicroKernel.Handlers.DependencyInspector
True;Parameter;cs+class://Castle/MicroKernel/Handlers/DependencyInspector;cs+interface://Castle/MicroKernel/Handlers/IDependencyInspector;InspectServiceDependency in Castle.MicroKernel.Handlers.DependencyInspector
True;Parameter;cs+class://Castle/MicroKernel/Handlers/DependencyInspector;cs+interface://Castle/MicroKernel/Handlers/IDependencyInspector;InspectServiceOverrideDependency in Castle.MicroKernel.Handlers.DependencyInspector
True;Parameter;cs+class://Castle/MicroKernel/Handlers/DependencyInspector;cs+interface://Castle/MicroKernel/Handlers/IDependencyInspector;UnresolvableHandlerException in Castle.MicroKernel.Handlers.DefaultHandler
True;Parameter;cs+class://Castle/MicroKernel/Handlers/DependencyInspector;cs+interface://Castle/MicroKernel/Handlers/IDependencyInspector;GetStatusDetails in Castle.Windsor.Diagnostics.Helpers.DefaultComponentViewBuilder
False;Parameter;cs+class://Castle/MicroKernel/Handlers/ExtendedHandler;cs+class://Castle/MicroKernel/Handlers/DefaultHandler;Init in Castle.MicroKernel.Handlers.ExtendedHandler
False;Parameter;cs+class://Castle/MicroKernel/Handlers/ExtendedHandler;cs+class://Castle/MicroKernel/Handlers/DefaultHandler;Init in Castle.MicroKernel.Handlers.ExtendedHandler
False;ThisChangingType;cs+class://Castle/MicroKernel/Handlers/ExtendedHandler;cs+class://Castle/MicroKernel/Handlers/DefaultHandler;ObtainDependencyDetails in Castle.MicroKernel.Handlers.AbstractHandler
False;ThisChangingType;cs+class://Castle/MicroKernel/Handlers/ExtendedHandler;cs+class://Castle/MicroKernel/Handlers/DefaultHandler;IsBeingResolvedInContext in Castle.MicroKernel.Handlers.AbstractHandler
False;ThisChangingType;cs+class://Castle/MicroKernel/Handlers/ExtendedHandler;cs+class://Castle/MicroKernel/Handlers/DefaultHandler;HasValidComponentFromResolver in Castle.MicroKernel.Handlers.AbstractHandler
False;ThisChangingType;cs+class://Castle/MicroKernel/Handlers/ExtendedHandler;cs+class://Castle/MicroKernel/Handlers/DefaultHandler;HasValidComponentFromResolver in Castle.MicroKernel.Handlers.AbstractHandler
True;ThisChangingType;cs+class://Castle/MicroKernel/Handlers/ExtendedHandler;cs+class://Castle/MicroKernel/Handlers/DefaultHandler;ResolveCore in Castle.MicroKernel.Handlers.DefaultHandler
True;ThisChangingType;cs+class://Castle/MicroKernel/Handlers/ExtendedHandler;cs+class://Castle/MicroKernel/Handlers/DefaultHandler;ResolveCore in Castle.MicroKernel.Handlers.DefaultHandler
False;Return;cs+class://Castle/MicroKernel/Handlers/ExtendedHandler;cs+class://Castle/MicroKernel/Handlers/DefaultHandler;CreateHandler in Castle.MicroKernel.Handlers.DefaultHandlerFactory
False;Parameter;cs+class://Castle/MicroKernel/Handlers/GenericHandlerTypeMismatchException;cs+class://Castle/MicroKernel/Handlers/HandlerException;Resolve in Castle.MicroKernel.Handlers.DefaultGenericHandler
True;ThisChangingType;cs+class://Castle/MicroKernel/Handlers/GenericHandlerTypeMismatchException;cs+class://Castle/MicroKernel/Handlers/HandlerException;HandlerException in Castle.MicroKernel.Handlers.HandlerException
True;ThisChangingType;cs+class://Castle/MicroKernel/Handlers/GenericHandlerTypeMismatchException;cs+class://Castle/MicroKernel/Handlers/HandlerException;HandlerException in Castle.MicroKernel.Handlers.HandlerException
True;ThisChangingType;cs+class://Castle/MicroKernel/Handlers/GenericHandlerTypeMismatchException;cs+class://Castle/MicroKernel/Handlers/HandlerException;HandlerException in Castle.MicroKernel.Handlers.HandlerException
True;Parameter;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernel;DefaultKernel in Castle.MicroKernel.DefaultKernel
True;Parameter;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernel;DefaultKernel in Castle.MicroKernel.DefaultKernel
True;Assignment;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernel;AddChildKernel in Castle.MicroKernel.DefaultKernel
True;Return;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernel;Register in Castle.MicroKernel.DefaultKernel
True;Parameter;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernel;CreateLifestyleManager in Castle.MicroKernel.DefaultKernel
True;Parameter;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernel;AddFacility in Castle.MicroKernel.DefaultKernel
True;Return;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernel;AddFacility in Castle.MicroKernel.DefaultKernel
True;Assignment;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernel;WindsorContainer in Castle.Windsor.WindsorContainer
True;VariableInitializer;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernel;ProperDeserialization in Castle.Windsor.Tests.Config.AppDomainConfigSourceTestCase
True;VariableInitializer;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernel;ComponentIdGetsLoadedFromTheParsedConfiguration in Castle.Windsor.Tests.ConfigXmlInterpreterTestCase
True;VariableInitializer;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernel;CorrectConfigurationMapping in Castle.Windsor.Tests.ConfigXmlInterpreterTestCase
True;VariableInitializer;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernel;MissingManifestResourceConfiguration in Castle.Windsor.Tests.ConfigXmlInterpreterTestCase
True;VariableInitializer;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernel;ProperDeserialization in Castle.Windsor.Tests.ConfigXmlInterpreterTestCase
True;VariableInitializer;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernel;ProperManifestDeserialization in Castle.Windsor.Tests.ConfigXmlInterpreterTestCase
True;Assignment;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernel;SetUp in Castle.Windsor.Tests.CustomActivatorTestCase
True;VariableInitializer;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernel;Public_property_with_Protected_setter_causes_Object_Reference_exception in Castle.MicroKernel.Tests.Bugs.IoC_117
True;VariableInitializer;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernel;AddingComponentToRootKernelWhenChildKernelHasStartableFacility in Castle.MicroKernel.Tests.Bugs.IoC_95
True;VariableInitializer;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernel;AddingComponentToRootKernelWhenChildKernelHasStartableFacility in Castle.MicroKernel.Tests.Bugs.IoC_95
True;Assignment;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernel;SetUp in CastleTests.Bugs.Ioc113.IoC_113_When_resolving_initializable_disposable_and_startable_component
True;Assignment;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernel;SetUp in Castle.Windsor.Tests.Facilities.Startable.StartableFacilityTestCase
True;Assignment;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernel;Init in CastleTests.Facilities.FacilityTestCase
True;Assignment;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernel;Init in Castle.MicroKernel.Tests.GraphTestCase
True;Assignment;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernel;Multithreaded in Castle.MicroKernel.Tests.Pools.MultithreadedPooledTestCase
True;VariableInitializer;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernel;KernelSerialization in Castle.MicroKernel.Tests.SerializationTestCase
True;VariableInitializer;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernel;AddChildKernelToTwoParentsThrowsException in CastleTests.SubContainers.SubContainersTestCase
True;VariableInitializer;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernel;AddChildKernelToTwoParentsThrowsException in CastleTests.SubContainers.SubContainersTestCase
True;Parameter;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernel;ChildDependenciesIsSatisfiedEvenWhenComponentTakesLongToBeAddedToParentContainer in CastleTests.SubContainers.SubContainersTestCase
True;VariableInitializer;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernel;ChildDependenciesSatisfiedAmongContainers in CastleTests.SubContainers.SubContainersTestCase
True;VariableInitializer;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernel;ChildKernelFindsAndCreateParentComponent in CastleTests.SubContainers.SubContainersTestCase
True;VariableInitializer;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernel;ChildKernelOverloadsParentKernel1 in CastleTests.SubContainers.SubContainersTestCase
True;VariableInitializer;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernel;ChildKernelOverloadsParentKernel2 in CastleTests.SubContainers.SubContainersTestCase
True;VariableInitializer;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernel;DependenciesSatisfiedAmongContainers in CastleTests.SubContainers.SubContainersTestCase
True;VariableInitializer;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernel;DependenciesSatisfiedAmongContainersUsingEvents in CastleTests.SubContainers.SubContainersTestCase
True;VariableInitializer;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernel;ParentKernelFindsAndCreateChildComponent in CastleTests.SubContainers.SubContainersTestCase
True;VariableInitializer;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernel;RemoveChildKernelCleansUp in CastleTests.SubContainers.SubContainersTestCase
True;VariableInitializer;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernel;RemovingChildKernelUnsubscribesFromParentEvents in CastleTests.SubContainers.SubContainersTestCase
True;Parameter;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernel;Requesting_parent_component_with_child_dependency_from_child_component in CastleTests.SubContainers.SubContainersTestCase
True;Parameter;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernel;Parent_component_will_NOT_have_dependencies_from_child in CastleTests.SubContainers.SubContainersTestCase
True;Parameter;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernel;Singleton_withNonSingletonDependencies_doesNotReResolveDependencies in CastleTests.SubContainers.SubContainersTestCase
True;Parameter;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernel;Singleton_withNonSingletonDependencies_doesNotReResolveDependencies in CastleTests.SubContainers.SubContainersTestCase
True;Parameter;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernel;Three_level_hierarchy in CastleTests.SubContainers.SubContainersTestCase
True;Parameter;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernel;Three_level_hierarchy in CastleTests.SubContainers.SubContainersTestCase
True;VariableInitializer;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernel;Do_NOT_UseChildComponentsForParentDependenciesWhenRequestedFromChild in CastleTests.SubContainers.SubContainersTestCase
True;Parameter;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernel;TryResolvingViaChildKernelShouldNotThrowException in CastleTests.SubContainers.SubContainersTestCase
True;VariableInitializer;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernel;WillAskResolverWhenTryingToResolveDependencyAfterAnotherHandlerWasRegistered in Castle.MicroKernel.Tests.SubResolverTestCase
True;Cast;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernel;TransientMultiConstructorTest in Castle.MicroKernel.Tests.TransientMultiConstructorTestCase
True;Cast;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernel;TransientMultipleConstructorNonValueTypeTest in Castle.MicroKernel.Tests.TransientMultiConstructorTestCase
True;Parameter;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernelInternal;DefaultKernel in Castle.MicroKernel.DefaultKernel
True;Parameter;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernelInternal;DefaultKernel in Castle.MicroKernel.DefaultKernel
True;Cast;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernelInternal;AddCustomComponent in Castle.MicroKernel.DefaultKernel
True;Cast;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernelInternal;AddCustomComponent in Castle.MicroKernel.DefaultKernel
True;Parameter;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernelInternal;AddSubSystem in Castle.MicroKernel.DefaultKernel
True;Parameter;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernelInternal;Register in Castle.MicroKernel.DefaultKernel
True;Parameter;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernelInternal;CreateComponentActivator in Castle.MicroKernel.DefaultKernel
True;Parameter;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernelInternal;WrapParentHandler in Castle.MicroKernel.DefaultKernel
True;Parameter;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernelInternal;LoadHandlerByName in Castle.MicroKernel.DefaultKernel
True;Parameter;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernelInternal;LoadHandlerByType in Castle.MicroKernel.DefaultKernel
True;Cast;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernelInternal;Resolve in Castle.MicroKernel.DefaultKernel
True;Cast;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernelInternal;Resolve in Castle.MicroKernel.DefaultKernel
True;Cast;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernelInternal;Resolve in Castle.MicroKernel.DefaultKernel
True;Cast;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernelInternal;Resolve in Castle.MicroKernel.DefaultKernel
True;Cast;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernelInternal;Resolve in Castle.MicroKernel.DefaultKernel
True;Cast;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernelInternal;Resolve in Castle.MicroKernel.DefaultKernel
True;Cast;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernelInternal;Resolve in Castle.MicroKernel.DefaultKernel
True;Cast;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernelInternal;Resolve in Castle.MicroKernel.DefaultKernel
True;Cast;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernelInternal;ResolveAll in Castle.MicroKernel.DefaultKernel
True;Cast;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernelInternal;ResolveAll in Castle.MicroKernel.DefaultKernel
True;Cast;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernelInternal;ResolveAll in Castle.MicroKernel.DefaultKernel
True;Cast;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernelInternal;ResolveAll in Castle.MicroKernel.DefaultKernel
True;Cast;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernelInternal;ResolveAll in Castle.MicroKernel.DefaultKernel
True;Cast;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernelInternal;ResolveAll in Castle.MicroKernel.DefaultKernel
True;Cast;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernelInternal;Resolve in Castle.MicroKernel.DefaultKernel
True;Cast;cs+class://Castle/MicroKernel/DefaultKernel;cs+interface://Castle/MicroKernel/IKernelInternal;Resolve in Castle.MicroKernel.DefaultKernel
True;Return;cs+class://Castle/MicroKernel/DefaultKernel/OptimizeDependencyResolutionDisposable;cs+interface://System/IDisposable;OptimizeDependencyResolution in Castle.MicroKernel.DefaultKernel
True;ThisChangingType;cs+class://Castle/MicroKernel/CircularDependencyException;cs+class://Castle/MicroKernel/ComponentResolutionException;ComponentResolutionException in Castle.MicroKernel.ComponentResolutionException
True;ThisChangingType;cs+class://Castle/MicroKernel/CircularDependencyException;cs+class://Castle/MicroKernel/ComponentResolutionException;ComponentResolutionException in Castle.MicroKernel.ComponentResolutionException
True;ThisChangingType;cs+class://Castle/MicroKernel/CircularDependencyException;cs+class://Castle/MicroKernel/ComponentResolutionException;ComponentResolutionException in Castle.MicroKernel.ComponentResolutionException
True;ThisChangingType;cs+class://Castle/MicroKernel/CircularDependencyException;cs+class://Castle/MicroKernel/ComponentResolutionException;ComponentResolutionException in Castle.MicroKernel.ComponentResolutionException
True;ThisChangingType;cs+class://Castle/MicroKernel/CircularDependencyException;cs+class://Castle/MicroKernel/ComponentResolutionException;ComponentResolutionException in Castle.MicroKernel.ComponentResolutionException
True;ThisChangingType;cs+class://Castle/MicroKernel/CircularDependencyException;cs+class://Castle/MicroKernel/ComponentResolutionException;ComponentResolutionException in Castle.MicroKernel.ComponentResolutionException
True;ThisChangingType;cs+class://Castle/MicroKernel/ComponentNotFoundException;cs+class://Castle/MicroKernel/ComponentResolutionException;ComponentResolutionException in Castle.MicroKernel.ComponentResolutionException
True;ThisChangingType;cs+class://Castle/MicroKernel/ComponentNotFoundException;cs+class://Castle/MicroKernel/ComponentResolutionException;ComponentResolutionException in Castle.MicroKernel.ComponentResolutionException
True;ThisChangingType;cs+class://Castle/MicroKernel/ComponentNotFoundException;cs+class://Castle/MicroKernel/ComponentResolutionException;ComponentResolutionException in Castle.MicroKernel.ComponentResolutionException
True;ThisChangingType;cs+class://Castle/MicroKernel/ComponentNotFoundException;cs+class://Castle/MicroKernel/ComponentResolutionException;ComponentResolutionException in Castle.MicroKernel.ComponentResolutionException
True;ThisChangingType;cs+class://Castle/MicroKernel/ComponentNotFoundException;cs+class://Castle/MicroKernel/ComponentResolutionException;ComponentResolutionException in Castle.MicroKernel.ComponentResolutionException
True;ThisChangingType;cs+class://Castle/MicroKernel/ComponentNotFoundException;cs+class://Castle/MicroKernel/ComponentResolutionException;ComponentResolutionException in Castle.MicroKernel.ComponentResolutionException
True;Parameter;cs+class://Castle/MicroKernel/ComponentRegistrationException;cs+class://System/Exception;ComponentRegistrationException in Castle.MicroKernel.ComponentRegistrationException
True;Parameter;cs+class://Castle/MicroKernel/ComponentRegistrationException;cs+class://System/Exception;ComponentRegistrationException in Castle.MicroKernel.ComponentRegistrationException
True;Parameter;cs+class://Castle/MicroKernel/ComponentRegistrationException;cs+class://System/Exception;ComponentRegistrationException in Castle.MicroKernel.ComponentRegistrationException
True;Parameter;cs+interface://Castle/MicroKernel/IKernelInternal;cs+interface://Castle/MicroKernel/IKernel;CreateInstance in Castle.MicroKernel.ComponentActivator.WebUserControlComponentActivator
True;Parameter;cs+interface://Castle/MicroKernel/IKernelInternal;cs+interface://Castle/MicroKernel/IKernel;CreateInstance in Castle.MicroKernel.ComponentActivator.WebUserControlComponentActivator
True;Parameter;cs+interface://Castle/MicroKernel/IKernelInternal;cs+interface://Castle/MicroKernel/IKernel;InternalCreate in Castle.Facilities.TypedFactory.DelegateFactoryActivator
True;Parameter;cs+interface://Castle/MicroKernel/IKernelInternal;cs+interface://Castle/MicroKernel/IKernel;CreateInstance in Castle.MicroKernel.ComponentActivator.DefaultComponentActivator
True;Parameter;cs+interface://Castle/MicroKernel/IKernelInternal;cs+interface://Castle/MicroKernel/IKernel;CreateInstance in Castle.MicroKernel.ComponentActivator.DefaultComponentActivator
True;Parameter;cs+interface://Castle/MicroKernel/IKernelInternal;cs+interface://Castle/MicroKernel/IKernel;Instantiate in Castle.MicroKernel.ComponentActivator.FactoryMethodActivator
True;Parameter;cs+interface://Castle/MicroKernel/IKernelInternal;cs+interface://Castle/MicroKernel/IKernel;Instantiate in Castle.MicroKernel.ComponentActivator.FactoryMethodActivator
True;Parameter;cs+interface://Castle/MicroKernel/IKernelInternal;cs+interface://Castle/MicroKernel/IKernel;Init in Castle.MicroKernel.Handlers.ExtendedHandler
True;Parameter;cs+interface://Castle/MicroKernel/IKernelInternal;cs+interface://Castle/MicroKernel/IKernel;Init in Castle.MicroKernel.Handlers.ExtendedHandler
True;Parameter;cs+interface://Castle/MicroKernel/IKernelInternal;cs+interface://Castle/MicroKernel/IKernel;ObtainDependencyDetails in Castle.MicroKernel.Handlers.AbstractHandler
True;Parameter;cs+interface://Castle/MicroKernel/IKernelInternal;cs+interface://Castle/MicroKernel/IKernel;CloneParentProperties in Castle.MicroKernel.Handlers.DefaultGenericHandler
True;Parameter;cs+interface://Castle/MicroKernel/IKernelInternal;cs+interface://Castle/MicroKernel/IKernel;Register in Castle.MicroKernel.Registration.ComponentRegistration
True;Parameter;cs+interface://Castle/MicroKernel/IKernelInternal;cs+interface://Castle/MicroKernel/IKernel;Register in Castle.MicroKernel.Registration.FromDescriptor
True;Parameter;cs+interface://Castle/MicroKernel/IKernelInternal;cs+interface://Castle/MicroKernel/IKernel;Register in Castle.MicroKernel.Registration.FromDescriptor
True;Parameter;cs+interface://Castle/MicroKernel/IKernelInternal;cs+interface://Castle/MicroKernel/IKernel;Add in Castle.Windsor.Diagnostics.DefaultDiagnosticsSubSystem
True;Assignment;cs+interface://Castle/MicroKernel/IKernelInternal;cs+interface://Castle/MicroKernel/IKernel;Initialize in Castle.Windsor.Tests.MicroKernel.NotImplementedDependencyResolver
True;Parameter;cs+interface://Castle/MicroKernel/IKernelInternal;cs+interface://Castle/MicroKernel/IKernel;CreateOnUIThreadActivator in Castle.Facilities.Synchronize.CreateOnUIThreadActivator
True;Parameter;cs+interface://Castle/MicroKernel/IKernelInternal;cs+interface://Castle/MicroKernel/IKernel;Create in Castle.Facilities.FactorySupport.FactoryActivator
True;Parameter;cs+interface://Castle/MicroKernel/IKernelInternal;cs+interface://Castle/MicroKernel/IKernel;Instantiate in Castle.Facilities.WcfIntegration.WcfBehaviorActivator
True;Parameter;cs+interface://Castle/MicroKernel/IKernelInternal;cs+interface://Castle/MicroKernel/IKernel;Instantiate in Castle.Facilities.WcfIntegration.WcfClientActivator
True;Parameter;cs+interface://Castle/MicroKernel/IKernelInternal;cs+interface://Castle/MicroKernel/IKernel;GetChannelCreator in Castle.Facilities.WcfIntegration.WcfClientActivator
True;Parameter;cs+interface://Castle/MicroKernel/IKernelInternal;cs+interface://Castle/MicroKernel/IKernel;GetChannelCreator in Castle.Facilities.WcfIntegration.WcfClientActivator
True;Parameter;cs+class://Castle/MicroKernel/Internal/LazyServiceStrategy;cs+interface://Castle/MicroKernel/Handlers/IGenericServiceStrategy;Load in Castle.MicroKernel.Resolvers.LazyOfTComponentLoader
True;Parameter;cs+class://Castle/MicroKernel/KernelException;cs+class://System/Exception;KernelException in Castle.MicroKernel.KernelException
True;Parameter;cs+class://Castle/MicroKernel/KernelException;cs+class://System/Exception;KernelException in Castle.MicroKernel.KernelException
True;Parameter;cs+class://Castle/MicroKernel/KernelException;cs+class://System/Exception;KernelException in Castle.MicroKernel.KernelException
True;Parameter;cs+class://Castle/MicroKernel/Facilities/FacilityException;cs+class://System/Exception;FacilityException in Castle.MicroKernel.Facilities.FacilityException
True;Parameter;cs+class://Castle/MicroKernel/Facilities/FacilityException;cs+class://System/Exception;FacilityException in Castle.MicroKernel.Facilities.FacilityException
True;Parameter;cs+class://Castle/MicroKernel/Facilities/FacilityException;cs+class://System/Exception;FacilityException in Castle.MicroKernel.Facilities.FacilityException
False;Parameter;cs+class://Castle/Facilities/Startable/StartableFacility;cs+class://Castle/MicroKernel/Facilities/AbstractFacility;AddingComponentToRootKernelWhenChildKernelHasStartableFacility in Castle.MicroKernel.Tests.Bugs.IoC_95
False;Parameter;cs+class://Castle/Facilities/Startable/StartableFacility;cs+class://Castle/MicroKernel/Facilities/AbstractFacility;BulkRegistrations_WhenRegistrationMatchesNoInstancesOfService_StopsStartableFacilityFromWorking in Castle.Windsor.Tests.Bugs.IoC_169.IoC_169
True;Parameter;cs+class://Castle/Facilities/Startable/StartConcern;cs+interface://Castle/Core/ICommissionConcern;AddStart in Castle.Facilities.Startable.StartableContributor
True;Parameter;cs+class://Castle/Facilities/Startable/StopConcern;cs+interface://Castle/Core/IDecommissionConcern;AddStop in Castle.Facilities.Startable.StartableContributor
False;Parameter;cs+class://Castle/Facilities/TypedFactory/TypedFactoryFacility;cs+class://Castle/MicroKernel/Facilities/AbstractFacility;AfterContainerCreated in CastleTests.Facilities.TypedFactory.TypedFactoryObsoleteApiTestCase
True;Parameter;cs+class://Castle/MicroKernel/Handlers/AbstractHandler;cs+interface://Castle/MicroKernel/IHandler;ObtainDependencyDetails in Castle.MicroKernel.Handlers.AbstractHandler
True;Parameter;cs+class://Castle/MicroKernel/Handlers/AbstractHandler;cs+interface://Castle/MicroKernel/IHandler;IsBeingResolvedInContext in Castle.MicroKernel.Handlers.AbstractHandler
True;Parameter;cs+class://Castle/MicroKernel/Handlers/AbstractHandler;cs+interface://Castle/MicroKernel/IHandler;HasValidComponentFromResolver in Castle.MicroKernel.Handlers.AbstractHandler
False;Parameter;cs+class://Castle/MicroKernel/Handlers/AbstractHandler;cs+interface://Castle/MicroKernel/IHandler;HasValidComponentFromResolver in Castle.MicroKernel.Handlers.AbstractHandler
True;Return;cs+class://Castle/MicroKernel/Handlers/ParentHandlerWrapper;cs+interface://Castle/MicroKernel/IHandler;WrapParentHandler in Castle.MicroKernel.DefaultKernel
True;Parameter;cs+class://Castle/MicroKernel/Handlers/ParentHandlerWrapper;cs+interface://Castle/MicroKernel/IHandler;IsBeingResolvedInContext in Castle.MicroKernel.Handlers.ParentHandlerWrapper
True;ThisChangingType;cs+class://Castle/MicroKernel/Handlers/DefaultGenericHandler;cs+class://Castle/MicroKernel/Handlers/AbstractHandler;ObtainDependencyDetails in Castle.MicroKernel.Handlers.AbstractHandler
True;ThisChangingType;cs+class://Castle/MicroKernel/Handlers/DefaultGenericHandler;cs+class://Castle/MicroKernel/Handlers/AbstractHandler;IsBeingResolvedInContext in Castle.MicroKernel.Handlers.AbstractHandler
True;ThisChangingType;cs+class://Castle/MicroKernel/Handlers/DefaultGenericHandler;cs+class://Castle/MicroKernel/Handlers/AbstractHandler;HasValidComponentFromResolver in Castle.MicroKernel.Handlers.AbstractHandler
True;ThisChangingType;cs+class://Castle/MicroKernel/Handlers/DefaultGenericHandler;cs+class://Castle/MicroKernel/Handlers/AbstractHandler;HasValidComponentFromResolver in Castle.MicroKernel.Handlers.AbstractHandler
False;Parameter;cs+class://Castle/MicroKernel/Handlers/DefaultGenericHandler;cs+class://Castle/MicroKernel/Handlers/AbstractHandler;Resolve in Castle.MicroKernel.Handlers.DefaultGenericHandler
False;Return;cs+class://Castle/MicroKernel/Handlers/DefaultGenericHandler;cs+class://Castle/MicroKernel/Handlers/AbstractHandler;CreateHandler in Castle.MicroKernel.Handlers.DefaultHandlerFactory
True;ThisChangingType;cs+class://Castle/MicroKernel/Handlers/DefaultHandler;cs+class://Castle/MicroKernel/Handlers/AbstractHandler;ObtainDependencyDetails in Castle.MicroKernel.Handlers.AbstractHandler
True;ThisChangingType;cs+class://Castle/MicroKernel/Handlers/DefaultHandler;cs+class://Castle/MicroKernel/Handlers/AbstractHandler;IsBeingResolvedInContext in Castle.MicroKernel.Handlers.AbstractHandler
True;ThisChangingType;cs+class://Castle/MicroKernel/Handlers/DefaultHandler;cs+class://Castle/MicroKernel/Handlers/AbstractHandler;HasValidComponentFromResolver in Castle.MicroKernel.Handlers.AbstractHandler
True;ThisChangingType;cs+class://Castle/MicroKernel/Handlers/DefaultHandler;cs+class://Castle/MicroKernel/Handlers/AbstractHandler;HasValidComponentFromResolver in Castle.MicroKernel.Handlers.AbstractHandler
False;Parameter;cs+class://Castle/MicroKernel/Handlers/DefaultHandler;cs+class://Castle/MicroKernel/Handlers/AbstractHandler;ResolveCore in Castle.MicroKernel.Handlers.DefaultHandler
False;Parameter;cs+class://Castle/MicroKernel/Handlers/DefaultHandler;cs+class://Castle/MicroKernel/Handlers/AbstractHandler;ResolveCore in Castle.MicroKernel.Handlers.DefaultHandler
False;Return;cs+class://Castle/MicroKernel/Handlers/DefaultHandler;cs+class://Castle/MicroKernel/Handlers/AbstractHandler;CreateHandler in Castle.MicroKernel.Handlers.DefaultHandlerFactory
True;Assignment;cs+class://Castle/MicroKernel/Handlers/DefaultHandlerFactory;cs+interface://Castle/MicroKernel/IHandlerFactory;DefaultKernel in Castle.MicroKernel.DefaultKernel
True;Parameter;cs+class://Castle/MicroKernel/Handlers/HandlerException;cs+class://System/Exception;TryResolve in Castle.MicroKernel.Handlers.AbstractHandler
True;Parameter;cs+class://Castle/MicroKernel/Handlers/HandlerException;cs+class://System/Exception;HandlerException in Castle.MicroKernel.Handlers.HandlerException
True;Parameter;cs+class://Castle/MicroKernel/Handlers/HandlerException;cs+class://System/Exception;HandlerException in Castle.MicroKernel.Handlers.HandlerException
True;Parameter;cs+class://Castle/MicroKernel/Handlers/HandlerException;cs+class://System/Exception;HandlerException in Castle.MicroKernel.Handlers.HandlerException
True;Parameter;cs+class://Castle/MicroKernel/Handlers/HandlerException;cs+class://System/Exception;ResolveFromKernelByType in Castle.MicroKernel.Resolvers.DefaultDependencyResolver
True;Parameter;cs+interface://Castle/MicroKernel/IHandler;cs+interface://Castle/MicroKernel/ISubDependencyResolver;CanSatisfyDependency in Castle.MicroKernel.ComponentActivator.DefaultComponentActivator
True;Parameter;cs+interface://Castle/MicroKernel/IHandler;cs+interface://Castle/MicroKernel/ISubDependencyResolver;CreateConstructorArguments in Castle.MicroKernel.ComponentActivator.DefaultComponentActivator
True;Parameter;cs+interface://Castle/MicroKernel/IHandler;cs+interface://Castle/MicroKernel/ISubDependencyResolver;ObtainPropertyValue in Castle.MicroKernel.ComponentActivator.DefaultComponentActivator
True;Parameter;cs+interface://Castle/MicroKernel/IHandler;cs+interface://Castle/MicroKernel/ISubDependencyResolver;ObtainPropertyValue in Castle.MicroKernel.ComponentActivator.DefaultComponentActivator
True;Parameter;cs+interface://Castle/MicroKernel/IKernel;cs+interface://Castle/MicroKernel/IKernelEvents;Init in Castle.Facilities.Startable.StartableFacility
True;Parameter;cs+class://Castle/MicroKernel/LifecycleConcerns/DisposalConcern;cs+interface://Castle/Core/IDecommissionConcern;ProcessLateBoundModel in Castle.MicroKernel.ModelBuilder.Inspectors.LifecycleModelInspector
True;Parameter;cs+class://Castle/MicroKernel/LifecycleConcerns/DisposalConcern;cs+interface://Castle/Core/IDecommissionConcern;ProcessLateBoundModel in Castle.MicroKernel.ModelBuilder.Inspectors.LifecycleModelInspector
True;Parameter;cs+class://Castle/MicroKernel/LifecycleConcerns/DisposalConcern;cs+interface://Castle/Core/IDecommissionConcern;ProcessModel in Castle.MicroKernel.ModelBuilder.Inspectors.LifecycleModelInspector
True;Parameter;cs+class://Castle/MicroKernel/LifecycleConcerns/DisposalConcern;cs+interface://Castle/Core/IDecommissionConcern;Kernel_ComponentModelCreated in Castle.Facilities.WcfIntegration.WcfClientExtension
True;Parameter;cs+class://Castle/MicroKernel/LifecycleConcerns/InitializationConcern;cs+interface://Castle/Core/ICommissionConcern;ProcessLateBoundModel in Castle.MicroKernel.ModelBuilder.Inspectors.LifecycleModelInspector
True;Parameter;cs+class://Castle/MicroKernel/LifecycleConcerns/InitializationConcern;cs+interface://Castle/Core/ICommissionConcern;ProcessLateBoundModel in Castle.MicroKernel.ModelBuilder.Inspectors.LifecycleModelInspector
True;Parameter;cs+class://Castle/MicroKernel/LifecycleConcerns/InitializationConcern;cs+interface://Castle/Core/ICommissionConcern;ProcessModel in Castle.MicroKernel.ModelBuilder.Inspectors.LifecycleModelInspector
True;Parameter;cs+class://Castle/MicroKernel/LifecycleConcerns/LateBoundCommissionConcerns;cs+interface://Castle/Core/ICommissionConcern;ProcessLateBoundModel in Castle.MicroKernel.ModelBuilder.Inspectors.LifecycleModelInspector
True;Parameter;cs+class://Castle/MicroKernel/LifecycleConcerns/LateBoundDecommissionConcerns;cs+interface://Castle/Core/IDecommissionConcern;ProcessLateBoundModel in Castle.MicroKernel.ModelBuilder.Inspectors.LifecycleModelInspector
True;Parameter;cs+class://Castle/MicroKernel/LifecycleConcerns/OnCreatedConcern[1];cs+interface://Castle/Core/ICommissionConcern;ConfigureComponentModel in Castle.MicroKernel.ModelBuilder.Descriptors.OnCreateComponentDescriptor
True;Parameter;cs+class://Castle/MicroKernel/LifecycleConcerns/OnDestroyConcern[1];cs+interface://Castle/Core/IDecommissionConcern;ConfigureComponentModel in Castle.MicroKernel.ModelBuilder.Descriptors.OnDestroyComponentDescriptor
True;Parameter;cs+class://Castle/MicroKernel/LifecycleConcerns/SupportInitializeConcern;cs+interface://Castle/Core/ICommissionConcern;ProcessLateBoundModel in Castle.MicroKernel.ModelBuilder.Inspectors.LifecycleModelInspector
True;Parameter;cs+class://Castle/MicroKernel/LifecycleConcerns/SupportInitializeConcern;cs+interface://Castle/Core/ICommissionConcern;ProcessLateBoundModel in Castle.MicroKernel.ModelBuilder.Inspectors.LifecycleModelInspector
True;Parameter;cs+class://Castle/MicroKernel/LifecycleConcerns/SupportInitializeConcern;cs+interface://Castle/Core/ICommissionConcern;ProcessModel in Castle.MicroKernel.ModelBuilder.Inspectors.LifecycleModelInspector
True;Parameter;cs+class://Castle/MicroKernel/Lifestyle/ThreadScopeAccessor;cs+interface://Castle/MicroKernel/Lifestyle/Scoped/IScopeAccessor;CreateLifestyleManager in Castle.MicroKernel.DefaultKernel
False;Assignment;cs+class://Castle/MicroKernel/Lifestyle/PoolableLifestyleManager;cs+class://Castle/MicroKernel/Lifestyle/AbstractLifestyleManager;CreateLifestyleManager in Castle.MicroKernel.DefaultKernel
True;Return;cs+class://Castle/MicroKernel/Lifestyle/Pool/DefaultPool;cs+interface://Castle/MicroKernel/Lifestyle/Pool/IPool;Create in Castle.MicroKernel.Lifestyle.Pool.DefaultPoolFactory
True;Parameter;cs+class://Castle/MicroKernel/Lifestyle/Pool/PoolException;cs+class://System/Exception;PoolException in Castle.MicroKernel.Lifestyle.Pool.PoolException
True;Parameter;cs+class://Castle/MicroKernel/Lifestyle/Pool/PoolException;cs+class://System/Exception;PoolException in Castle.MicroKernel.Lifestyle.Pool.PoolException
True;Assignment;cs+class://Castle/MicroKernel/Lifestyle/Scoped/DefaultLifetimeScope;cs+interface://Castle/MicroKernel/Lifestyle/Scoped/ILifetimeScope;GetScope in Castle.MicroKernel.Lifestyle.PerWebRequestLifestyleModule
True;Return;cs+class://Castle/MicroKernel/Lifestyle/Scoped/DefaultLifetimeScope;cs+interface://Castle/MicroKernel/Lifestyle/Scoped/ILifetimeScope;GetScope in Castle.MicroKernel.Lifestyle.Scoped.CreationContextScopeAccessor
True;Return;cs+class://Castle/MicroKernel/Lifestyle/Scoped/DefaultLifetimeScope;cs+interface://Castle/MicroKernel/Lifestyle/Scoped/ILifetimeScope;GetScope in CastleTests.TestInfrastructure.StaticScopeAccessor
True;Parameter;cs+class://Castle/MicroKernel/Lifestyle/Scoped/DefaultLifetimeScope;cs+interface://Castle/MicroKernel/Lifestyle/Scoped/ILifetimeScope;GetScope in Castle.Facilities.WcfIntegration.Lifestyles.WcfOperationScopeAccessor
True;Assignment;cs+class://Castle/MicroKernel/Lifestyle/Scoped/DefaultLifetimeScope;cs+interface://Castle/MicroKernel/Lifestyle/Scoped/ILifetimeScope;WcfSessionScopeHolder in Castle.Facilities.WcfIntegration.Lifestyles.WcfSessionScopeHolder
True;Return;cs+class://Castle/MicroKernel/Lifestyle/Scoped/CreationContextScopeAccessor;cs+interface://Castle/MicroKernel/Lifestyle/Scoped/IScopeAccessor;CreateScopeAccessorForBoundLifestyle in Castle.MicroKernel.DefaultKernel
False;Return;cs+class://Castle/MicroKernel/Lifestyle/Scoped/CallContextLifetimeScope;cs+interface://Castle/MicroKernel/Lifestyle/Scoped/ILifetimeScope;BeginScope in Castle.MicroKernel.Lifestyle.LifestyleExtensions
False;Return;cs+class://Castle/MicroKernel/Lifestyle/Scoped/CallContextLifetimeScope;cs+interface://Castle/MicroKernel/Lifestyle/Scoped/ILifetimeScope;BeginScope in Castle.MicroKernel.Lifestyle.LifestyleExtensions
True;Return;cs+class://Castle/MicroKernel/Lifestyle/Scoped/CallContextLifetimeScope;cs+interface://Castle/MicroKernel/Lifestyle/Scoped/ILifetimeScope;GetScope in Castle.MicroKernel.Lifestyle.LifetimeScopeAccessor
True;Return;cs+class://Castle/MicroKernel/Lifestyle/LifetimeScopeAccessor;cs+interface://Castle/MicroKernel/Lifestyle/Scoped/IScopeAccessor;CreateScopeAccessor in Castle.MicroKernel.DefaultKernel
True;Parameter;cs+class://Castle/MicroKernel/Lifestyle/Scoped/ScopeCache;cs+interface://Castle/MicroKernel/Lifestyle/Scoped/IScopeCache;GetScope in Castle.MicroKernel.Lifestyle.PerWebRequestLifestyleModule
True;Parameter;cs+class://Castle/MicroKernel/Lifestyle/Scoped/ScopeCache;cs+interface://Castle/MicroKernel/Lifestyle/Scoped/IScopeCache;GetScope in Castle.MicroKernel.Lifestyle.Scoped.CreationContextScopeAccessor
False;Assignment;cs+class://Castle/MicroKernel/Lifestyle/ScopedLifestyleManager;cs+class://Castle/MicroKernel/Lifestyle/AbstractLifestyleManager;CreateLifestyleManager in Castle.MicroKernel.DefaultKernel
False;Assignment;cs+class://Castle/MicroKernel/Lifestyle/ScopedLifestyleManager;cs+class://Castle/MicroKernel/Lifestyle/AbstractLifestyleManager;CreateLifestyleManager in Castle.MicroKernel.DefaultKernel
False;Assignment;cs+class://Castle/MicroKernel/Lifestyle/ScopedLifestyleManager;cs+class://Castle/MicroKernel/Lifestyle/AbstractLifestyleManager;CreateLifestyleManager in Castle.MicroKernel.DefaultKernel
False;Assignment;cs+class://Castle/MicroKernel/Lifestyle/ScopedLifestyleManager;cs+class://Castle/MicroKernel/Lifestyle/AbstractLifestyleManager;CreateLifestyleManager in Castle.MicroKernel.DefaultKernel
True;Parameter;cs+class://Castle/MicroKernel/Lifestyle/WebRequestScopeAccessor;cs+interface://Castle/MicroKernel/Lifestyle/Scoped/IScopeAccessor;CreateLifestyleManager in Castle.MicroKernel.DefaultKernel
True;Parameter;cs+class://Castle/MicroKernel/ModelBuilder/Descriptors/DelegatingModelDescriptor;cs+interface://Castle/MicroKernel/ModelBuilder/IComponentModelDescriptor;Properties in Castle.MicroKernel.Registration.ComponentRegistration
True;Parameter;cs+class://Castle/MicroKernel/ModelBuilder/Descriptors/DelegatingModelDescriptor;cs+interface://Castle/MicroKernel/ModelBuilder/IComponentModelDescriptor;PropertiesIgnore in Castle.MicroKernel.Registration.ComponentRegistration
True;Parameter;cs+class://Castle/MicroKernel/ModelBuilder/Descriptors/DelegatingModelDescriptor;cs+interface://Castle/MicroKernel/ModelBuilder/IComponentModelDescriptor;PropertiesRequire in Castle.MicroKernel.Registration.ComponentRegistration
True;Parameter;cs+class://Castle/MicroKernel/ModelBuilder/Descriptors/DelegatingModelDescriptor;cs+interface://Castle/MicroKernel/ModelBuilder/IComponentModelDescriptor;Properties in Castle.MicroKernel.Registration.ComponentRegistration
False;Assignment;cs+class://Castle/MicroKernel/Lifestyle/SingletonLifestyleManager;cs+class://Castle/MicroKernel/Lifestyle/AbstractLifestyleManager;CreateLifestyleManager in Castle.MicroKernel.DefaultKernel
False;Assignment;cs+class://Castle/MicroKernel/Lifestyle/TransientLifestyleManager;cs+class://Castle/MicroKernel/Lifestyle/AbstractLifestyleManager;CreateLifestyleManager in Castle.MicroKernel.DefaultKernel
True;Assignment;cs+class://Castle/MicroKernel/ModelBuilder/DefaultComponentModelBuilder;cs+interface://Castle/MicroKernel/IComponentModelBuilder;DefaultKernel in Castle.MicroKernel.DefaultKernel
True;Parameter;cs+class://Castle/MicroKernel/ModelBuilder/Descriptors/DynamicParametersDescriptor;cs+interface://Castle/MicroKernel/ModelBuilder/IComponentModelDescriptor;DependsOn in Castle.MicroKernel.Registration.ComponentRegistration
True;Parameter;cs+class://Castle/MicroKernel/ModelBuilder/Descriptors/DynamicParametersDescriptor;cs+interface://Castle/MicroKernel/ModelBuilder/IComponentModelDescriptor;DynamicParameters in Castle.MicroKernel.Registration.ComponentRegistration
True;Parameter;cs+class://Castle/MicroKernel/ModelBuilder/Inspectors/ComponentActivatorInspector;cs+interface://Castle/MicroKernel/ModelBuilder/IContributeComponentModelConstruction;InitializeContributors in Castle.MicroKernel.ModelBuilder.DefaultComponentModelBuilder
True;Parameter;cs+class://Castle/MicroKernel/ModelBuilder/Inspectors/ComponentProxyInspector;cs+interface://Castle/MicroKernel/ModelBuilder/IContributeComponentModelConstruction;InitializeContributors in Castle.MicroKernel.ModelBuilder.DefaultComponentModelBuilder
True;Parameter;cs+class://Castle/MicroKernel/ModelBuilder/Inspectors/ConfigurationModelInspector;cs+interface://Castle/MicroKernel/ModelBuilder/IContributeComponentModelConstruction;InitializeContributors in Castle.MicroKernel.ModelBuilder.DefaultComponentModelBuilder
True;Parameter;cs+class://Castle/MicroKernel/ModelBuilder/Inspectors/ConfigurationParametersInspector;cs+interface://Castle/MicroKernel/ModelBuilder/IContributeComponentModelConstruction;InitializeContributors in Castle.MicroKernel.ModelBuilder.DefaultComponentModelBuilder
True;Parameter;cs+class://Castle/MicroKernel/ModelBuilder/Inspectors/ConstructorDependenciesModelInspector;cs+interface://Castle/MicroKernel/ModelBuilder/IContributeComponentModelConstruction;InitializeContributors in Castle.MicroKernel.ModelBuilder.DefaultComponentModelBuilder
True;Parameter;cs+class://Castle/MicroKernel/ModelBuilder/Inspectors/GenericInspector;cs+interface://Castle/MicroKernel/ModelBuilder/IContributeComponentModelConstruction;InitializeContributors in Castle.MicroKernel.ModelBuilder.DefaultComponentModelBuilder
True;Parameter;cs+class://Castle/MicroKernel/ModelBuilder/Inspectors/InterceptorInspector;cs+interface://Castle/MicroKernel/ModelBuilder/IContributeComponentModelConstruction;InitializeContributors in Castle.MicroKernel.ModelBuilder.DefaultComponentModelBuilder
True;Parameter;cs+class://Castle/MicroKernel/ModelBuilder/Inspectors/LifecycleModelInspector;cs+interface://Castle/MicroKernel/ModelBuilder/IContributeComponentModelConstruction;InitializeContributors in Castle.MicroKernel.ModelBuilder.DefaultComponentModelBuilder
True;Parameter;cs+class://Castle/MicroKernel/ModelBuilder/Inspectors/LifestyleModelInspector;cs+interface://Castle/MicroKernel/ModelBuilder/IContributeComponentModelConstruction;InitializeContributors in Castle.MicroKernel.ModelBuilder.DefaultComponentModelBuilder
True;Parameter;cs+class://Castle/MicroKernel/ModelBuilder/Inspectors/MixinInspector;cs+interface://Castle/MicroKernel/ModelBuilder/IContributeComponentModelConstruction;InitializeContributors in Castle.MicroKernel.ModelBuilder.DefaultComponentModelBuilder
True;Parameter;cs+class://Castle/MicroKernel/ModelBuilder/Inspectors/PropertiesDependenciesModelInspector;cs+interface://Castle/MicroKernel/ModelBuilder/IContributeComponentModelConstruction;InitializeContributors in Castle.MicroKernel.ModelBuilder.DefaultComponentModelBuilder
True;Assignment;cs+class://Castle/Core/ComponentModel;cs+class://Castle/Core/Internal/GraphNode;GraphNodes in Castle.MicroKernel.DefaultKernel
True;Parameter;cs+class://Castle/Core/ComponentModel;cs+class://Castle/Core/Internal/GraphNode;AddGraphDependency in Castle.MicroKernel.Handlers.AbstractHandler
True;Cast;cs+class://Castle/Core/ConstructorCandidateCollection;cs+interface://Castle/Core/Internal/IMutableCollection[1];AddConstructor in Castle.Core.ComponentModel
True;Parameter;cs+class://Castle/Core/InterceptorReference;cs+interface://Castle/MicroKernel/IReference[1];AddLast in Castle.Core.InterceptorReferenceCollection
True;Parameter;cs+class://Castle/Core/InterceptorReference;cs+interface://Castle/MicroKernel/IReference[1];Insert in Castle.Core.InterceptorReferenceCollection
False;Parameter;cs+class://Castle/Core/InterceptorReferenceCollection;cs+interface://Castle/Core/Internal/IMutableCollection[1];AssertInterceptorReferencesAreEqual in Castle.MicroKernel.Tests.Registration.Interceptors.InterceptorsTestCase
True;Cast;cs+class://Castle/Core/PropertySetCollection;cs+interface://Castle/Core/Internal/IMutableCollection[1];AddProperty in Castle.Core.ComponentModel
True;Assignment;cs+class://Castle/MicroKernel/ComponentReference[1];cs+interface://Castle/MicroKernel/IReference[1];SelectedWith in Castle.Facilities.TypedFactory.TypedFactoryConfiguration
True;Assignment;cs+class://Castle/MicroKernel/ComponentReference[1];cs+interface://Castle/MicroKernel/IReference[1];SelectedWith in Castle.Facilities.TypedFactory.TypedFactoryConfiguration
True;Assignment;cs+class://Castle/MicroKernel/ComponentReference[1];cs+interface://Castle/MicroKernel/IReference[1];CollectHook in Castle.MicroKernel.ModelBuilder.Inspectors.InterceptorInspector
True;Assignment;cs+class://Castle/MicroKernel/ComponentReference[1];cs+interface://Castle/MicroKernel/IReference[1];CollectSelector in Castle.MicroKernel.ModelBuilder.Inspectors.InterceptorInspector
True;Assignment;cs+class://Castle/MicroKernel/ComponentReference[1];cs+interface://Castle/MicroKernel/IReference[1];Service in Castle.MicroKernel.Registration.Proxy.ItemRegistration
True;Assignment;cs+class://Castle/MicroKernel/ComponentReference[1];cs+interface://Castle/MicroKernel/IReference[1];Service in Castle.MicroKernel.Registration.Proxy.ItemRegistration
True;Parameter;cs+class://Castle/MicroKernel/ComponentReference[1];cs+interface://Castle/MicroKernel/IReference[1];Component in Castle.MicroKernel.Registration.Proxy.MixinRegistration
True;Parameter;cs+class://Castle/MicroKernel/ComponentReference[1];cs+interface://Castle/MicroKernel/IReference[1];Component in Castle.MicroKernel.Registration.Proxy.MixinRegistration
True;Return;cs+class://Castle/MicroKernel/ComponentReference[1];cs+interface://Castle/MicroKernel/IReference[1];ObtainProxyHook in Castle.Facilities.Synchronize.CreateOnUIThreadInspector
True;Assignment;cs+class://Castle/MicroKernel/InstanceReference[1];cs+interface://Castle/MicroKernel/IReference[1];SelectedWith in Castle.Facilities.TypedFactory.TypedFactoryConfiguration
True;Parameter;cs+class://Castle/MicroKernel/InstanceReference[1];cs+interface://Castle/MicroKernel/IReference[1];AddMixIns in Castle.MicroKernel.Proxy.ProxyOptions
True;Assignment;cs+class://Castle/MicroKernel/InstanceReference[1];cs+interface://Castle/MicroKernel/IReference[1];Instance in Castle.MicroKernel.Registration.Proxy.ItemRegistration
True;Parameter;cs+class://Castle/MicroKernel/InstanceReference[1];cs+interface://Castle/MicroKernel/IReference[1];Objects in Castle.MicroKernel.Registration.Proxy.MixinRegistration
True;Return;cs+class://Castle/MicroKernel/InstanceReference[1];cs+interface://Castle/MicroKernel/IReference[1];ObtainProxyHook in Castle.Facilities.Synchronize.CreateOnUIThreadInspector
True;Assignment;cs+class://Castle/MicroKernel/InstanceReference[1];cs+interface://Castle/MicroKernel/IReference[1];ApplySynchronization in Castle.Facilities.Synchronize.SynchronizeComponentInspector
True;Parameter;cs+class://Castle/MicroKernel/Registration/AssemblyFilter;cs+interface://Castle/Core/Internal/IAssemblyProvider;FromAssemblyInDirectory in Castle.MicroKernel.Registration.Classes
True;Parameter;cs+class://Castle/MicroKernel/Registration/AssemblyFilter;cs+interface://Castle/Core/Internal/IAssemblyProvider;FromAssemblyInDirectory in Castle.MicroKernel.Registration.Types
True;Parameter;cs+class://Castle/MicroKernel/Registration/AssemblyFilter;cs+interface://Castle/Core/Internal/IAssemblyProvider;AddInstaller in Castle.Windsor.Installer.DefaultComponentInstaller
True;Parameter;cs+class://Castle/MicroKernel/Registration/AssemblyFilter;cs+interface://Castle/Core/Internal/IAssemblyProvider;InDirectory in Castle.Windsor.Installer.FromAssembly
False;Parameter;cs+class://Castle/MicroKernel/ModelBuilder/Descriptors/AttributeDescriptor[1];cs+class://Castle/MicroKernel/ModelBuilder/Descriptors/AbstractOverwriteableDescriptor[1];AddAttributeDescriptor in Castle.MicroKernel.Registration.ComponentRegistration
False;Parameter;cs+class://Castle/MicroKernel/ModelBuilder/Descriptors/AttributeDescriptor[1];cs+class://Castle/MicroKernel/ModelBuilder/Descriptors/AbstractOverwriteableDescriptor[1];AddAttributeDescriptor in Castle.MicroKernel.Registration.RegistrationGroup
True;Return;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];cs+interface://Castle/MicroKernel/Registration/IRegistration;Load in Castle.Facilities.TypedFactory.Internal.DelegateFactory
True;Return;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];cs+interface://Castle/MicroKernel/Registration/IRegistration;Load in Castle.MicroKernel.Resolvers.LazyOfTComponentLoader
True;Return;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];cs+interface://Castle/MicroKernel/Registration/IRegistration;Load in Castle.MicroKernel.Tests.SlowLoader
True;Return;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];cs+interface://Castle/MicroKernel/Registration/IRegistration;Load in Castle.MicroKernel.Tests.LoaderForDefaultImplementations
True;Return;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];cs+interface://Castle/MicroKernel/Registration/IRegistration;Load in Castle.MicroKernel.Tests.LoaderUsingDependency
True;Return;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];cs+interface://Castle/MicroKernel/Registration/IRegistration;RegisterInterceptors in Castle.MicroKernel.Tests.Registration.Interceptors.Multiple.GenericInterceptorsInSingleCall
True;Return;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];cs+interface://Castle/MicroKernel/Registration/IRegistration;RegisterInterceptors in Castle.MicroKernel.Tests.Registration.Interceptors.Multiple.GenericInterceptorsMultipleCall
True;Return;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];cs+interface://Castle/MicroKernel/Registration/IRegistration;RegisterInterceptors in Castle.MicroKernel.Tests.Registration.Interceptors.Multiple.InterceptorKeyInSingleCall
True;Return;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];cs+interface://Castle/MicroKernel/Registration/IRegistration;RegisterInterceptors in Castle.MicroKernel.Tests.Registration.Interceptors.Multiple.InterceptorKeyMultipleCall
True;Return;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];cs+interface://Castle/MicroKernel/Registration/IRegistration;RegisterInterceptors in Castle.MicroKernel.Tests.Registration.Interceptors.Multiple.InterceptorReferenceAnywhereMultipleCall
True;Return;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];cs+interface://Castle/MicroKernel/Registration/IRegistration;RegisterInterceptors in Castle.MicroKernel.Tests.Registration.Interceptors.Multiple.InterceptorReferencesWithPositionInSingleCall3
True;Return;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];cs+interface://Castle/MicroKernel/Registration/IRegistration;RegisterInterceptors in Castle.MicroKernel.Tests.Registration.Interceptors.Multiple.InterceptorReferencesWithPositionInSingleCall
True;Return;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];cs+interface://Castle/MicroKernel/Registration/IRegistration;RegisterInterceptors in Castle.MicroKernel.Tests.Registration.Interceptors.Multiple.InterceptorReferencesWithPositionInSingleCall1
True;Return;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];cs+interface://Castle/MicroKernel/Registration/IRegistration;RegisterInterceptors in Castle.MicroKernel.Tests.Registration.Interceptors.Multiple.InterceptorReferencesWithPositionInSingleCall2
True;Return;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];cs+interface://Castle/MicroKernel/Registration/IRegistration;RegisterInterceptors in Castle.MicroKernel.Tests.Registration.Interceptors.Multiple.InterceptorReferenceWithPositionMultipleCall1
True;Return;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];cs+interface://Castle/MicroKernel/Registration/IRegistration;RegisterInterceptors in Castle.MicroKernel.Tests.Registration.Interceptors.Multiple.InterceptorReferenceWithPositionMultipleCall2
True;Return;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];cs+interface://Castle/MicroKernel/Registration/IRegistration;RegisterInterceptors in Castle.MicroKernel.Tests.Registration.Interceptors.Multiple.InterceptorReferenceWithPositionMultipleCall3
True;Return;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];cs+interface://Castle/MicroKernel/Registration/IRegistration;RegisterInterceptors in Castle.MicroKernel.Tests.Registration.Interceptors.Multiple.InterceptorTypeMultipleCall
True;Return;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];cs+interface://Castle/MicroKernel/Registration/IRegistration;RegisterInterceptors in Castle.MicroKernel.Tests.Registration.Interceptors.Multiple.InterceptorTypesInSingleCall
True;Return;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];cs+interface://Castle/MicroKernel/Registration/IRegistration;RegisterInterceptors in Castle.MicroKernel.Tests.Registration.Interceptors.Single.SingleGenericInterceptor
True;Return;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];cs+interface://Castle/MicroKernel/Registration/IRegistration;RegisterInterceptors in Castle.MicroKernel.Tests.Registration.Interceptors.Single.SingleInterceptorKey
True;Return;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];cs+interface://Castle/MicroKernel/Registration/IRegistration;RegisterInterceptors in Castle.MicroKernel.Tests.Registration.Interceptors.Single.SingleInterceptorReference
True;Return;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];cs+interface://Castle/MicroKernel/Registration/IRegistration;RegisterInterceptors in Castle.MicroKernel.Tests.Registration.Interceptors.Single.SingleInterceptorType
True;Return;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];cs+interface://Castle/MicroKernel/Registration/IRegistration;Load in Castle.Facilities.WcfIntegration.WcfClientComponentLoader
True;ThisChangingType;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];LifeStyle in Castle.MicroKernel.Registration.ComponentRegistration
True;ThisChangingType;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Proxy in Castle.MicroKernel.Registration.ComponentRegistration
True;ThisChangingType;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ActAs in Castle.MicroKernel.Registration.ComponentRegistration
True;ThisChangingType;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];AddAttributeDescriptor in Castle.MicroKernel.Registration.ComponentRegistration
True;ThisChangingType;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];AddDescriptor in Castle.MicroKernel.Registration.ComponentRegistration
True;ThisChangingType;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];AddDescriptor in Castle.MicroKernel.Registration.ComponentRegistration
True;ThisChangingType;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Attribute in Castle.MicroKernel.Registration.ComponentRegistration
True;ThisChangingType;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];DependsOn in Castle.MicroKernel.Registration.ComponentRegistration
True;ThisChangingType;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];DependsOn in Castle.MicroKernel.Registration.ComponentRegistration
True;ThisChangingType;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];DependsOn in Castle.MicroKernel.Registration.ComponentRegistration
True;ThisChangingType;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];DynamicParameters in Castle.MicroKernel.Registration.ComponentRegistration
True;ThisChangingType;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Forward in Castle.MicroKernel.Registration.ComponentRegistration
True;ThisChangingType;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy in Castle.MicroKernel.Registration.ComponentRegistration
True;ThisChangingType;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Interceptors in Castle.MicroKernel.Registration.ComponentRegistration
True;ThisChangingType;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named in Castle.MicroKernel.Registration.ComponentRegistration
True;ThisChangingType;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named in Castle.MicroKernel.Registration.ComponentRegistration
True;ThisChangingType;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];NamedAutomatically in Castle.MicroKernel.Registration.ComponentRegistration
True;ThisChangingType;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];OnCreate in Castle.MicroKernel.Registration.ComponentRegistration
True;ThisChangingType;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];OnCreate in Castle.MicroKernel.Registration.ComponentRegistration
True;ThisChangingType;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];OnDestroy in Castle.MicroKernel.Registration.ComponentRegistration
True;ThisChangingType;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];OnDestroy in Castle.MicroKernel.Registration.ComponentRegistration
True;ThisChangingType;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];OnlyNewServices in Castle.MicroKernel.Registration.ComponentRegistration
True;ThisChangingType;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];OverWrite in Castle.MicroKernel.Registration.ComponentRegistration
True;ThisChangingType;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];UsingFactoryMethod in Castle.MicroKernel.Registration.ComponentRegistration
False;Return;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Load in Castle.MicroKernel.Tests.ABLoaderWithGuardClause
False;Return;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Load in Castle.MicroKernel.Tests.ABLoader
True;Parameter;cs+class://Castle/MicroKernel/ModelBuilder/Descriptors/ConfigurationDescriptor;cs+interface://Castle/MicroKernel/ModelBuilder/IComponentModelDescriptor;Configuration in Castle.MicroKernel.Registration.ComponentRegistration
True;Parameter;cs+class://Castle/MicroKernel/ModelBuilder/Descriptors/ConfigurationDescriptor;cs+interface://Castle/MicroKernel/ModelBuilder/IComponentModelDescriptor;Configuration in Castle.MicroKernel.Registration.ComponentRegistration
True;Parameter;cs+class://Castle/MicroKernel/ModelBuilder/Descriptors/CustomDependencyDescriptor;cs+interface://Castle/MicroKernel/ModelBuilder/IComponentModelDescriptor;DependsOn in Castle.MicroKernel.Registration.ComponentRegistration
True;Parameter;cs+class://Castle/MicroKernel/ModelBuilder/Descriptors/CustomDependencyDescriptor;cs+interface://Castle/MicroKernel/ModelBuilder/IComponentModelDescriptor;DependsOn in Castle.MicroKernel.Registration.ComponentRegistration
True;Parameter;cs+class://Castle/MicroKernel/ModelBuilder/Descriptors/CustomDependencyDescriptor;cs+interface://Castle/MicroKernel/ModelBuilder/IComponentModelDescriptor;DependsOn in Castle.MicroKernel.Registration.ComponentRegistration
True;Parameter;cs+class://Castle/MicroKernel/ModelBuilder/Descriptors/ReferenceDependencyDescriptor;cs+interface://Castle/MicroKernel/ModelBuilder/IComponentModelDescriptor;AttachConfiguration in Castle.Facilities.TypedFactory.TypedFactoryRegistrationExtensions
True;Parameter;cs+class://Castle/MicroKernel/ModelBuilder/Descriptors/ExtendedPropertiesDescriptor;cs+interface://Castle/MicroKernel/ModelBuilder/IComponentModelDescriptor;ExtendedProperties in Castle.MicroKernel.Registration.ComponentRegistration
True;Parameter;cs+class://Castle/MicroKernel/ModelBuilder/Descriptors/ExtendedPropertiesDescriptor;cs+interface://Castle/MicroKernel/ModelBuilder/IComponentModelDescriptor;ExtendedProperties in Castle.MicroKernel.Registration.ComponentRegistration
True;Parameter;cs+class://Castle/MicroKernel/ModelBuilder/Descriptors/ExtendedPropertiesDescriptor;cs+interface://Castle/MicroKernel/ModelBuilder/IComponentModelDescriptor;Scoped in Castle.MicroKernel.Registration.Lifestyle.LifestyleGroup
True;Parameter;cs+class://Castle/MicroKernel/ModelBuilder/Descriptors/OnDestroyComponentDescriptor[1];cs+interface://Castle/MicroKernel/ModelBuilder/IComponentModelDescriptor;OnDestroy in Castle.MicroKernel.Registration.ComponentRegistration
True;Parameter;cs+class://Castle/MicroKernel/ModelBuilder/Descriptors/ProxyHookDescriptor;cs+interface://Castle/MicroKernel/ModelBuilder/IComponentModelDescriptor;Hook in Castle.MicroKernel.Registration.Proxy.ProxyGroup
True;Parameter;cs+class://Castle/MicroKernel/ModelBuilder/Descriptors/OnCreateComponentDescriptor[1];cs+interface://Castle/MicroKernel/ModelBuilder/IComponentModelDescriptor;OnCreate in Castle.MicroKernel.Registration.ComponentRegistration
True;Parameter;cs+class://Castle/MicroKernel/ModelBuilder/Descriptors/InterceptorSelectorDescriptor;cs+interface://Castle/MicroKernel/ModelBuilder/IComponentModelDescriptor;SelectInterceptorsWith in Castle.MicroKernel.Registration.ComponentRegistration
True;Parameter;cs+class://Castle/MicroKernel/ModelBuilder/Descriptors/InterceptorDescriptor;cs+interface://Castle/MicroKernel/ModelBuilder/IComponentModelDescriptor;Interceptors in Castle.MicroKernel.Registration.ComponentRegistration
True;Parameter;cs+class://Castle/MicroKernel/ModelBuilder/Descriptors/InterceptorDescriptor;cs+interface://Castle/MicroKernel/ModelBuilder/IComponentModelDescriptor;Interceptors in Castle.MicroKernel.Registration.ComponentRegistration
True;Parameter;cs+class://Castle/MicroKernel/ModelBuilder/Descriptors/InterceptorDescriptor;cs+interface://Castle/MicroKernel/ModelBuilder/IComponentModelDescriptor;Interceptors in Castle.MicroKernel.Registration.ComponentRegistration
True;Parameter;cs+class://Castle/MicroKernel/ModelBuilder/Descriptors/InterceptorDescriptor;cs+interface://Castle/MicroKernel/ModelBuilder/IComponentModelDescriptor;Anywhere in Castle.MicroKernel.Registration.Interceptor.InterceptorGroup
True;Parameter;cs+class://Castle/MicroKernel/ModelBuilder/Descriptors/InterceptorDescriptor;cs+interface://Castle/MicroKernel/ModelBuilder/IComponentModelDescriptor;First in Castle.MicroKernel.Registration.Interceptor.InterceptorGroup
True;Parameter;cs+class://Castle/MicroKernel/ModelBuilder/Descriptors/InterceptorDescriptor;cs+interface://Castle/MicroKernel/ModelBuilder/IComponentModelDescriptor;Last in Castle.MicroKernel.Registration.Interceptor.InterceptorGroup
True;Parameter;cs+class://Castle/MicroKernel/ModelBuilder/Descriptors/InterceptorDescriptor;cs+interface://Castle/MicroKernel/ModelBuilder/IComponentModelDescriptor;AtIndex in Castle.MicroKernel.Registration.Interceptor.InterceptorGroup
False;Parameter;cs+class://Castle/MicroKernel/ModelBuilder/Descriptors/LifestyleDescriptor[1];cs+class://Castle/MicroKernel/ModelBuilder/Descriptors/AbstractOverwriteableDescriptor[1];Is in Castle.MicroKernel.Registration.Lifestyle.LifestyleGroup
False;Parameter;cs+class://Castle/MicroKernel/ModelBuilder/Descriptors/LifestyleDescriptor[1];cs+class://Castle/MicroKernel/ModelBuilder/Descriptors/AbstractOverwriteableDescriptor[1];Transient in Castle.MicroKernel.Registration.Lifestyle.LifestyleGroup
False;Parameter;cs+class://Castle/MicroKernel/ModelBuilder/Descriptors/LifestyleDescriptor[1];cs+class://Castle/MicroKernel/ModelBuilder/Descriptors/AbstractOverwriteableDescriptor[1];Singleton in Castle.MicroKernel.Registration.Lifestyle.LifestyleGroup
False;Parameter;cs+class://Castle/MicroKernel/ModelBuilder/Descriptors/LifestyleDescriptor[1];cs+class://Castle/MicroKernel/ModelBuilder/Descriptors/AbstractOverwriteableDescriptor[1];PerThread in Castle.MicroKernel.Registration.Lifestyle.LifestyleGroup
False;Parameter;cs+class://Castle/MicroKernel/ModelBuilder/Descriptors/LifestyleDescriptor[1];cs+class://Castle/MicroKernel/ModelBuilder/Descriptors/AbstractOverwriteableDescriptor[1];PerWebRequest in Castle.MicroKernel.Registration.Lifestyle.LifestyleGroup
False;Parameter;cs+class://Castle/MicroKernel/ModelBuilder/Descriptors/LifestyleDescriptor[1];cs+class://Castle/MicroKernel/ModelBuilder/Descriptors/AbstractOverwriteableDescriptor[1];Pooled in Castle.MicroKernel.Registration.Lifestyle.LifestyleGroup
False;Parameter;cs+class://Castle/MicroKernel/ModelBuilder/Descriptors/LifestyleDescriptor[1];cs+class://Castle/MicroKernel/ModelBuilder/Descriptors/AbstractOverwriteableDescriptor[1];Scoped in Castle.MicroKernel.Registration.Lifestyle.LifestyleGroup
False;Parameter;cs+class://Castle/MicroKernel/ModelBuilder/Descriptors/LifestyleDescriptor[1];cs+class://Castle/MicroKernel/ModelBuilder/Descriptors/AbstractOverwriteableDescriptor[1];BoundTo in Castle.MicroKernel.Registration.Lifestyle.LifestyleGroup
False;Parameter;cs+class://Castle/MicroKernel/ModelBuilder/Descriptors/LifestyleDescriptor[1];cs+class://Castle/MicroKernel/ModelBuilder/Descriptors/AbstractOverwriteableDescriptor[1];Custom in Castle.MicroKernel.Registration.Lifestyle.LifestyleGroup
False;Parameter;cs+class://Castle/MicroKernel/ModelBuilder/Descriptors/ParametersDescriptor;cs+class://Castle/MicroKernel/ModelBuilder/Descriptors/AbstractPropertyDescriptor;DependsOn in Castle.MicroKernel.Registration.ComponentRegistration
False;Parameter;cs+class://Castle/MicroKernel/ModelBuilder/Descriptors/ParametersDescriptor;cs+class://Castle/MicroKernel/ModelBuilder/Descriptors/AbstractPropertyDescriptor;Parameters in Castle.MicroKernel.Registration.ComponentRegistration
True;Parameter;cs+class://Castle/MicroKernel/Registration/Proxy/MixinRegistration;cs+interface://System/Collections/Generic/IEnumerable[1];MixIns in Castle.MicroKernel.Registration.Proxy.ProxyGroup
True;Parameter;cs+class://Castle/MicroKernel/ModelBuilder/Descriptors/ProxyMixInsDescriptor;cs+interface://Castle/MicroKernel/ModelBuilder/IComponentModelDescriptor;MixIns in Castle.MicroKernel.Registration.Proxy.ProxyGroup
True;Parameter;cs+class://Castle/MicroKernel/ModelBuilder/Descriptors/ProxyInterfacesDescriptor;cs+interface://Castle/MicroKernel/ModelBuilder/IComponentModelDescriptor;AdditionalInterfaces in Castle.MicroKernel.Registration.Proxy.ProxyGroup
False;Parameter;cs+class://Castle/MicroKernel/ModelBuilder/Descriptors/ServiceOverrideDescriptor;cs+class://Castle/MicroKernel/ModelBuilder/Descriptors/AbstractPropertyDescriptor;DependsOn in Castle.MicroKernel.Registration.ComponentRegistration
False;Parameter;cs+class://Castle/MicroKernel/ModelBuilder/Descriptors/ServiceOverrideDescriptor;cs+class://Castle/MicroKernel/ModelBuilder/Descriptors/AbstractPropertyDescriptor;ServiceOverrides in Castle.MicroKernel.Registration.ComponentRegistration
False;Parameter;cs+class://Castle/MicroKernel/ModelBuilder/Descriptors/ServiceOverrideDescriptor;cs+class://Castle/MicroKernel/ModelBuilder/Descriptors/AbstractPropertyDescriptor;ServiceOverrides in Castle.MicroKernel.Registration.ComponentRegistration
False;Parameter;cs+class://Castle/MicroKernel/ModelBuilder/Descriptors/ServiceOverrideDescriptor;cs+class://Castle/MicroKernel/ModelBuilder/Descriptors/AbstractPropertyDescriptor;ServiceOverrides in Castle.MicroKernel.Registration.ComponentRegistration
True;ThisChangingType;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;AllowMultipleMatches in Castle.MicroKernel.Registration.FromDescriptor
True;ThisChangingType;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;BasedOn in Castle.MicroKernel.Registration.FromDescriptor
True;ThisChangingType;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;Where in Castle.MicroKernel.Registration.FromDescriptor
True;ThisChangingType;cs+class://Castle/MicroKernel/Registration/FromTypesDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;AllowMultipleMatches in Castle.MicroKernel.Registration.FromDescriptor
True;ThisChangingType;cs+class://Castle/MicroKernel/Registration/FromTypesDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;BasedOn in Castle.MicroKernel.Registration.FromDescriptor
True;ThisChangingType;cs+class://Castle/MicroKernel/Registration/FromTypesDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;Where in Castle.MicroKernel.Registration.FromDescriptor
True;Cast;cs+class://Castle/MicroKernel/Registration/FromDescriptor;cs+interface://Castle/MicroKernel/Registration/IRegistration;Register in Castle.MicroKernel.Registration.BasedOnDescriptor
True;Assignment;cs+class://Castle/MicroKernel/Releasers/LifecycledComponentsReleasePolicy;cs+interface://Castle/MicroKernel/IReleasePolicy;DefaultKernel in Castle.MicroKernel.DefaultKernel
True;Return;cs+class://Castle/MicroKernel/Releasers/LifecycledComponentsReleasePolicy;cs+interface://Castle/MicroKernel/IReleasePolicy;CreateSubPolicy in Castle.MicroKernel.Releasers.LifecycledComponentsReleasePolicy
True;Assignment;cs+class://Castle/MicroKernel/Releasers/NoTrackingReleasePolicy;cs+interface://Castle/MicroKernel/IReleasePolicy;CreationContext in Castle.MicroKernel.Context.CreationContext
True;Return;cs+class://Castle/MicroKernel/Releasers/NoTrackingReleasePolicy;cs+interface://Castle/MicroKernel/IReleasePolicy;CreateSubPolicy in Castle.MicroKernel.Releasers.NoTrackingReleasePolicy
True;Assignment;cs+class://Castle/MicroKernel/Releasers/NoTrackingReleasePolicy;cs+interface://Castle/MicroKernel/IReleasePolicy;NoTrackingReleasePolicy_does_not_appear in CastleTests.Diagnostics.ReleasePolicyTrackedObjectsTestCase
True;Assignment;cs+class://Castle/MicroKernel/Releasers/NoTrackingReleasePolicy;cs+interface://Castle/MicroKernel/IReleasePolicy;Factory_obeys_release_policy_non_tracking in CastleTests.Facilities.TypedFactory.TypedFactoryDelegatesTestCase
True;Assignment;cs+class://Castle/MicroKernel/Releasers/NoTrackingReleasePolicy;cs+interface://Castle/MicroKernel/IReleasePolicy;Typed_factory_obeys_release_policy_non_tracking in CastleTests.Facilities.TypedFactory.TypedFactoryFacilityTake2TestCase
True;Parameter;cs+class://Castle/MicroKernel/Resolvers/DependencyResolverException;cs+class://System/Exception;TryResolve in Castle.MicroKernel.Handlers.AbstractHandler
True;Parameter;cs+class://Castle/MicroKernel/Resolvers/DependencyResolverException;cs+class://System/Exception;DependencyResolverException in Castle.MicroKernel.Resolvers.DependencyResolverException
True;Parameter;cs+class://Castle/MicroKernel/Resolvers/DependencyResolverException;cs+class://System/Exception;DependencyResolverException in Castle.MicroKernel.Resolvers.DependencyResolverException
True;Parameter;cs+class://Castle/MicroKernel/Resolvers/DependencyResolverException;cs+class://System/Exception;DependencyResolverException in Castle.MicroKernel.Resolvers.DependencyResolverException
True;Parameter;cs+interface://Castle/MicroKernel/IDependencyResolver;cs+interface://Castle/MicroKernel/ISubDependencyResolver;WrapParentHandler in Castle.MicroKernel.DefaultKernel
False;Parameter;cs+class://Castle/MicroKernel/Resolvers/SpecializedResolvers/ArrayResolver;cs+class://Castle/MicroKernel/Resolvers/SpecializedResolvers/CollectionResolver;ArrayResolution_UnresolvableDependencyCausesResolutionFailure in CastleTests.SpecializedResolvers.ArrayResolverTestCase
False;Parameter;cs+class://Castle/MicroKernel/Resolvers/SpecializedResolvers/ArrayResolver;cs+class://Castle/MicroKernel/Resolvers/SpecializedResolvers/CollectionResolver;ArrayResolution_UnresolvableDependencyCausesResolutionFailure_ServiceConstructor in CastleTests.SpecializedResolvers.ArrayResolverTestCase
False;Parameter;cs+class://Castle/MicroKernel/Resolvers/SpecializedResolvers/ArrayResolver;cs+class://Castle/MicroKernel/Resolvers/SpecializedResolvers/CollectionResolver;ArrayResolution_UnresolvableDependencyIsNotIncluded in CastleTests.SpecializedResolvers.ArrayResolverTestCase
False;Parameter;cs+class://Castle/MicroKernel/Resolvers/SpecializedResolvers/ArrayResolver;cs+class://Castle/MicroKernel/Resolvers/SpecializedResolvers/CollectionResolver;Composite_service_can_be_resolved_without_triggering_circular_dependency_detection_fuse in CastleTests.SpecializedResolvers.ArrayResolverTestCase
False;Parameter;cs+class://Castle/MicroKernel/Resolvers/SpecializedResolvers/ArrayResolver;cs+class://Castle/MicroKernel/Resolvers/SpecializedResolvers/CollectionResolver;Composite_service_can_be_resolved_without_triggering_circular_dependency_detection_fuse_composite_registered_first in CastleTests.SpecializedResolvers.ArrayResolverTestCase
False;Parameter;cs+class://Castle/MicroKernel/Resolvers/SpecializedResolvers/ArrayResolver;cs+class://Castle/MicroKernel/Resolvers/SpecializedResolvers/CollectionResolver;DependencyOnArrayOfServices_OnConstructor in CastleTests.SpecializedResolvers.ArrayResolverTestCase
False;Parameter;cs+class://Castle/MicroKernel/Resolvers/SpecializedResolvers/ArrayResolver;cs+class://Castle/MicroKernel/Resolvers/SpecializedResolvers/CollectionResolver;DependencyOnArrayOfServices_OnProperty in CastleTests.SpecializedResolvers.ArrayResolverTestCase
False;Parameter;cs+class://Castle/MicroKernel/Resolvers/SpecializedResolvers/ArrayResolver;cs+class://Castle/MicroKernel/Resolvers/SpecializedResolvers/CollectionResolver;DependencyOnArrayWhenEmpty in CastleTests.SpecializedResolvers.ArrayResolverTestCase
False;Parameter;cs+class://Castle/MicroKernel/Resolvers/SpecializedResolvers/ArrayResolver;cs+class://Castle/MicroKernel/Resolvers/SpecializedResolvers/CollectionResolver;DependencyOn_ref_ArrayOfServices_OnConstructor in CastleTests.SpecializedResolvers.ArrayResolverTestCase
False;Parameter;cs+class://Castle/MicroKernel/Resolvers/SpecializedResolvers/ArrayResolver;cs+class://Castle/MicroKernel/Resolvers/SpecializedResolvers/CollectionResolver;InjectAll in CastleTests.SpecializedResolvers.ArrayResolverTestCase
False;Parameter;cs+class://Castle/MicroKernel/Resolvers/SpecializedResolvers/ArrayResolver;cs+class://Castle/MicroKernel/Resolvers/SpecializedResolvers/CollectionResolver;InjectFooAndBarOnly_WithArrayResolver in CastleTests.SpecializedResolvers.ArrayResolverTestCase
False;Parameter;cs+class://Castle/MicroKernel/Resolvers/SpecializedResolvers/ArrayResolver;cs+class://Castle/MicroKernel/Resolvers/SpecializedResolvers/CollectionResolver;InjectFooOnly_WithArrayResolver in CastleTests.SpecializedResolvers.ArrayResolverTestCase
True;Parameter;cs+class://Castle/MicroKernel/Resolvers/SpecializedResolvers/CollectionResolver;cs+interface://Castle/MicroKernel/ISubDependencyResolver;Can_resolve_composite_based_solely_on_conventions in Castle.CompositePatternTestCase
True;Parameter;cs+class://Castle/MicroKernel/Resolvers/SpecializedResolvers/CollectionResolver;cs+interface://Castle/MicroKernel/ISubDependencyResolver;AfterContainerCreated in CastleTests.ConventionRegistrationConfigureTestCase
True;Parameter;cs+class://Castle/MicroKernel/Resolvers/SpecializedResolvers/CollectionResolver;cs+interface://Castle/MicroKernel/ISubDependencyResolver;Scoped_component_properly_release_when_roots_collection_is_involved in CastleTests.Lifestyle.BoundLifestyleImplicitGraphScopingTestCase
True;Parameter;cs+class://Castle/MicroKernel/Resolvers/SpecializedResolvers/CollectionResolver;cs+interface://Castle/MicroKernel/ISubDependencyResolver;Scoped_component_properly_scoped_when_roots_collection_is_involved in CastleTests.Lifestyle.BoundLifestyleImplicitGraphScopingTestCase
True;Parameter;cs+class://Castle/MicroKernel/Resolvers/SpecializedResolvers/CollectionResolver;cs+interface://Castle/MicroKernel/ISubDependencyResolver;AfterContainerCreated in Castle.MicroKernel.Tests.SpecializedResolvers.CollectionResolverTestCase
True;Parameter;cs+class://Castle/MicroKernel/Resolvers/SpecializedResolvers/CollectionResolver;cs+interface://Castle/MicroKernel/ISubDependencyResolver;DependencyOnArrayOfServices_OnConstructor_empty_allowed_empty_provided in Castle.MicroKernel.Tests.SpecializedResolvers.CollectionResolverTestCase
True;Parameter;cs+class://Castle/MicroKernel/Resolvers/SpecializedResolvers/CollectionResolver;cs+interface://Castle/MicroKernel/ISubDependencyResolver;DependencyOnArrayOfServices_OnProperty_empty in Castle.MicroKernel.Tests.SpecializedResolvers.CollectionResolverTestCase
True;Parameter;cs+class://Castle/MicroKernel/Resolvers/SpecializedResolvers/CollectionResolver;cs+interface://Castle/MicroKernel/ISubDependencyResolver;DependencyOnCollectionOfServices_OnConstructor_empty in Castle.MicroKernel.Tests.SpecializedResolvers.CollectionResolverTestCase
True;Parameter;cs+class://Castle/MicroKernel/Resolvers/SpecializedResolvers/CollectionResolver;cs+interface://Castle/MicroKernel/ISubDependencyResolver;DependencyOnCollectionOfServices_OnProperty_empty in Castle.MicroKernel.Tests.SpecializedResolvers.CollectionResolverTestCase
True;Parameter;cs+class://Castle/MicroKernel/Resolvers/SpecializedResolvers/CollectionResolver;cs+interface://Castle/MicroKernel/ISubDependencyResolver;DependencyOnEnumerableOfServices_OnConstructor_empty in Castle.MicroKernel.Tests.SpecializedResolvers.CollectionResolverTestCase
True;Parameter;cs+class://Castle/MicroKernel/Resolvers/SpecializedResolvers/CollectionResolver;cs+interface://Castle/MicroKernel/ISubDependencyResolver;DependencyOnEnumerableOfServices_OnProperty_empty in Castle.MicroKernel.Tests.SpecializedResolvers.CollectionResolverTestCase
True;Parameter;cs+class://Castle/MicroKernel/Resolvers/SpecializedResolvers/CollectionResolver;cs+interface://Castle/MicroKernel/ISubDependencyResolver;DependencyOnListOfServices_OnConstructor_empty in Castle.MicroKernel.Tests.SpecializedResolvers.CollectionResolverTestCase
True;Parameter;cs+class://Castle/MicroKernel/Resolvers/SpecializedResolvers/CollectionResolver;cs+interface://Castle/MicroKernel/ISubDependencyResolver;DependencyOnListOfServices_OnProperty_empty in Castle.MicroKernel.Tests.SpecializedResolvers.CollectionResolverTestCase
True;Parameter;cs+class://Castle/MicroKernel/Resolvers/SpecializedResolvers/CollectionResolver;cs+interface://Castle/MicroKernel/ISubDependencyResolver;Can_create_generic_with_ctor_dependency_on_array_of_generics in CastleTests.ContainerAndGenericsInCodeTestCase
False;Parameter;cs+class://Castle/MicroKernel/Resolvers/SpecializedResolvers/ListResolver;cs+class://Castle/MicroKernel/Resolvers/SpecializedResolvers/CollectionResolver;BuildContainer in Castle.MicroKernel.Tests.SpecializedResolvers.ListResolverTestCase
False;Parameter;cs+class://Castle/MicroKernel/Resolvers/SpecializedResolvers/ListResolver;cs+class://Castle/MicroKernel/Resolvers/SpecializedResolvers/CollectionResolver;DependencyOnListWhenEmpty in Castle.MicroKernel.Tests.SpecializedResolvers.ListResolverTestCase
False;Parameter;cs+class://Castle/MicroKernel/SubSystems/Configuration/DefaultConfigurationStore;cs+class://Castle/MicroKernel/AbstractSubSystem;RegisterSubSystems in Castle.MicroKernel.DefaultKernel
True;Assignment;cs+class://Castle/MicroKernel/SubSystems/Configuration/DefaultConfigurationStore;cs+interface://Castle/MicroKernel/SubSystems/Configuration/IConfigurationStore;PartialConfigurationStore in Castle.Windsor.Installer.PartialConfigurationStore
True;Parameter;cs+class://Castle/MicroKernel/SubSystems/Configuration/DefaultConfigurationStore;cs+interface://Castle/MicroKernel/SubSystems/Configuration/IConfigurationStore;CreateConfiguredContainer in Castle.Facilities.Logging.Tests.BaseTest
True;Parameter;cs+class://Castle/MicroKernel/SubSystems/Configuration/DefaultConfigurationStore;cs+interface://Castle/MicroKernel/SubSystems/Configuration/IConfigurationStore;CreateConfiguredContainer in Castle.Facilities.Logging.Tests.OverrideLoggerTest
True;Parameter;cs+class://Castle/MicroKernel/SubSystems/Configuration/DefaultConfigurationStore;cs+interface://Castle/MicroKernel/SubSystems/Configuration/IConfigurationStore;ProperDeserialization in Castle.Windsor.Tests.Config.AppDomainConfigSourceTestCase
True;Parameter;cs+class://Castle/MicroKernel/SubSystems/Configuration/DefaultConfigurationStore;cs+interface://Castle/MicroKernel/SubSystems/Configuration/IConfigurationStore;ComponentIdGetsLoadedFromTheParsedConfiguration in Castle.Windsor.Tests.ConfigXmlInterpreterTestCase
True;Parameter;cs+class://Castle/MicroKernel/SubSystems/Configuration/DefaultConfigurationStore;cs+interface://Castle/MicroKernel/SubSystems/Configuration/IConfigurationStore;ComponentIdGetsLoadedFromTheParsedConfiguration in Castle.Windsor.Tests.ConfigXmlInterpreterTestCase
True;Parameter;cs+class://Castle/MicroKernel/SubSystems/Configuration/DefaultConfigurationStore;cs+interface://Castle/MicroKernel/SubSystems/Configuration/IConfigurationStore;CorrectConfigurationMapping in Castle.Windsor.Tests.ConfigXmlInterpreterTestCase
True;Parameter;cs+class://Castle/MicroKernel/SubSystems/Configuration/DefaultConfigurationStore;cs+interface://Castle/MicroKernel/SubSystems/Configuration/IConfigurationStore;CorrectConfigurationMapping in Castle.Windsor.Tests.ConfigXmlInterpreterTestCase
True;Parameter;cs+class://Castle/MicroKernel/SubSystems/Configuration/DefaultConfigurationStore;cs+interface://Castle/MicroKernel/SubSystems/Configuration/IConfigurationStore;MissingManifestResourceConfiguration in Castle.Windsor.Tests.ConfigXmlInterpreterTestCase
True;Parameter;cs+class://Castle/MicroKernel/SubSystems/Configuration/DefaultConfigurationStore;cs+interface://Castle/MicroKernel/SubSystems/Configuration/IConfigurationStore;ProperDeserialization in Castle.Windsor.Tests.ConfigXmlInterpreterTestCase
True;Parameter;cs+class://Castle/MicroKernel/SubSystems/Configuration/DefaultConfigurationStore;cs+interface://Castle/MicroKernel/SubSystems/Configuration/IConfigurationStore;ProperManifestDeserialization in Castle.Windsor.Tests.ConfigXmlInterpreterTestCase
True;Assignment;cs+class://Castle/MicroKernel/SubSystems/Configuration/DefaultConfigurationStore;cs+interface://Castle/MicroKernel/SubSystems/Configuration/IConfigurationStore;ParametersAndServicesBestCase in CastleTests.Activators.BestConstructorTestCase
True;Assignment;cs+class://Castle/MicroKernel/SubSystems/Configuration/DefaultConfigurationStore;cs+interface://Castle/MicroKernel/SubSystems/Configuration/IConfigurationStore;ParametersAndServicesBestCase2 in CastleTests.Activators.BestConstructorTestCase
True;Parameter;cs+interface://Castle/MicroKernel/SubSystems/Configuration/IConfigurationStore;cs+interface://Castle/MicroKernel/ISubSystem;ConfigurationStore in Castle.MicroKernel.DefaultKernel
True;Parameter;cs+class://Castle/MicroKernel/SubSystems/Conversion/ConverterException;cs+class://System/Exception;ResolveFromParameter in Castle.MicroKernel.Resolvers.DefaultDependencyResolver
True;Parameter;cs+class://Castle/MicroKernel/SubSystems/Conversion/ConverterException;cs+class://System/Exception;ConverterException in Castle.MicroKernel.SubSystems.Conversion.ConverterException
True;Parameter;cs+class://Castle/MicroKernel/SubSystems/Conversion/ConverterException;cs+class://System/Exception;ConverterException in Castle.MicroKernel.SubSystems.Conversion.ConverterException
True;Parameter;cs+class://Castle/MicroKernel/SubSystems/Conversion/ConverterException;cs+class://System/Exception;ConverterException in Castle.MicroKernel.SubSystems.Conversion.ConverterException
True;Parameter;cs+class://Castle/MicroKernel/SubSystems/Conversion/ConverterException;cs+class://System/Exception;CollectAdditionalServices in Castle.Windsor.Installer.DefaultComponentInstaller
False;Parameter;cs+class://Castle/MicroKernel/SubSystems/Conversion/ArrayConverter;cs+class://Castle/MicroKernel/SubSystems/Conversion/AbstractTypeConverter;InitDefaultConverters in Castle.MicroKernel.SubSystems.Conversion.DefaultConversionManager
False;Parameter;cs+class://Castle/MicroKernel/SubSystems/Conversion/AttributeAwareConverter;cs+class://Castle/MicroKernel/SubSystems/Conversion/AbstractTypeConverter;InitDefaultConverters in Castle.MicroKernel.SubSystems.Conversion.DefaultConversionManager
False;Parameter;cs+class://Castle/MicroKernel/SubSystems/Conversion/ComponentConverter;cs+class://Castle/MicroKernel/SubSystems/Conversion/AbstractTypeConverter;InitDefaultConverters in Castle.MicroKernel.SubSystems.Conversion.DefaultConversionManager
False;Parameter;cs+class://Castle/MicroKernel/SubSystems/Conversion/ComponentModelConverter;cs+class://Castle/MicroKernel/SubSystems/Conversion/AbstractTypeConverter;InitDefaultConverters in Castle.MicroKernel.SubSystems.Conversion.DefaultConversionManager
False;Parameter;cs+class://Castle/MicroKernel/SubSystems/Conversion/DictionaryConverter;cs+class://Castle/MicroKernel/SubSystems/Conversion/AbstractTypeConverter;InitDefaultConverters in Castle.MicroKernel.SubSystems.Conversion.DefaultConversionManager
False;Parameter;cs+class://Castle/MicroKernel/SubSystems/Conversion/EnumConverter;cs+class://Castle/MicroKernel/SubSystems/Conversion/AbstractTypeConverter;InitDefaultConverters in Castle.MicroKernel.SubSystems.Conversion.DefaultConversionManager
False;Parameter;cs+class://Castle/MicroKernel/SubSystems/Conversion/GenericDictionaryConverter;cs+class://Castle/MicroKernel/SubSystems/Conversion/AbstractTypeConverter;InitDefaultConverters in Castle.MicroKernel.SubSystems.Conversion.DefaultConversionManager
False;Parameter;cs+class://Castle/MicroKernel/SubSystems/Conversion/GenericListConverter;cs+class://Castle/MicroKernel/SubSystems/Conversion/AbstractTypeConverter;InitDefaultConverters in Castle.MicroKernel.SubSystems.Conversion.DefaultConversionManager
False;Parameter;cs+class://Castle/MicroKernel/SubSystems/Conversion/ListConverter;cs+class://Castle/MicroKernel/SubSystems/Conversion/AbstractTypeConverter;InitDefaultConverters in Castle.MicroKernel.SubSystems.Conversion.DefaultConversionManager
False;Parameter;cs+class://Castle/MicroKernel/SubSystems/Conversion/PrimitiveConverter;cs+class://Castle/MicroKernel/SubSystems/Conversion/AbstractTypeConverter;InitDefaultConverters in Castle.MicroKernel.SubSystems.Conversion.DefaultConversionManager
False;Parameter;cs+class://Castle/MicroKernel/SubSystems/Conversion/TimeSpanConverter;cs+class://Castle/MicroKernel/SubSystems/Conversion/AbstractTypeConverter;InitDefaultConverters in Castle.MicroKernel.SubSystems.Conversion.DefaultConversionManager
False;Parameter;cs+class://Castle/MicroKernel/SubSystems/Conversion/TypeNameConverter;cs+class://Castle/MicroKernel/SubSystems/Conversion/AbstractTypeConverter;InitDefaultConverters in Castle.MicroKernel.SubSystems.Conversion.DefaultConversionManager
False;Parameter;cs+class://Castle/MicroKernel/SubSystems/Conversion/DefaultConversionManager;cs+class://Castle/MicroKernel/AbstractSubSystem;RegisterSubSystems in Castle.MicroKernel.DefaultKernel
True;Assignment;cs+class://Castle/MicroKernel/SubSystems/Conversion/DefaultConversionManager;cs+interface://Castle/MicroKernel/SubSystems/Conversion/ITypeConverterContext;Add in Castle.MicroKernel.SubSystems.Conversion.DefaultConversionManager
True;Parameter;cs+interface://Castle/MicroKernel/SubSystems/Conversion/IConversionManager;cs+interface://Castle/MicroKernel/SubSystems/Conversion/ITypeConverter;CreateCreationContext in Castle.MicroKernel.DefaultKernel
True;Assignment;cs+interface://Castle/MicroKernel/SubSystems/Conversion/IConversionManager;cs+interface://Castle/MicroKernel/SubSystems/Conversion/ITypeConverter;Init in Castle.Facilities.Startable.StartableFacility
True;Parameter;cs+interface://Castle/MicroKernel/SubSystems/Conversion/IConversionManager;cs+interface://Castle/MicroKernel/SubSystems/Conversion/ITypeConverter;LegacyInit in Castle.Facilities.TypedFactory.TypedFactoryFacility
True;Assignment;cs+interface://Castle/MicroKernel/SubSystems/Conversion/IConversionManager;cs+interface://Castle/MicroKernel/SubSystems/Conversion/ITypeConverter;Initialize in Castle.MicroKernel.Resolvers.DefaultDependencyResolver
True;Assignment;cs+interface://Castle/MicroKernel/SubSystems/Conversion/IConversionManager;cs+interface://Castle/MicroKernel/SubSystems/Conversion/ITypeConverter;SetUpTypeConverter in Castle.Facilities.Logging.LoggingFacility
True;Parameter;cs+class://Castle/MicroKernel/SubSystems/Conversion/TypeNameParser;cs+interface://Castle/MicroKernel/SubSystems/Conversion/ITypeNameParser;InitDefaultConverters in Castle.MicroKernel.SubSystems.Conversion.DefaultConversionManager
True;Parameter;cs+class://Castle/MicroKernel/SubSystems/Conversion/TypeNameParser;cs+interface://Castle/MicroKernel/SubSystems/Conversion/ITypeNameParser;SetUpTests in CastleTests.TypeNameConverterTestCase
False;Parameter;cs+class://Castle/MicroKernel/SubSystems/Naming/DefaultNamingSubSystem;cs+class://Castle/MicroKernel/AbstractSubSystem;RegisterSubSystems in Castle.MicroKernel.DefaultKernel
False;Parameter;cs+class://Castle/MicroKernel/SubSystems/Resource/DefaultResourceSubSystem;cs+class://Castle/MicroKernel/AbstractSubSystem;RegisterSubSystems in Castle.MicroKernel.DefaultKernel
True;Parameter;cs+class://Castle/MicroKernel/Util/SimpleMethodEqualityComparer;cs+interface://System/Collections/Generic/IEqualityComparer[1];BuildCache in Castle.Facilities.TypedFactory.TypedFactoryCachingInspector
True;Parameter;cs+class://Castle/MicroKernel/Util/SimpleTypeEqualityComparer;cs+interface://System/Collections/Generic/IEqualityComparer[1];(field initializer) in Castle.MicroKernel.SubSystems.Naming.DefaultNamingSubSystem
True;Parameter;cs+class://Castle/MicroKernel/Util/SimpleTypeEqualityComparer;cs+interface://System/Collections/Generic/IEqualityComparer[1];(field initializer) in Castle.MicroKernel.SubSystems.Naming.DefaultNamingSubSystem
True;Parameter;cs+class://Castle/MicroKernel/Util/SimpleTypeEqualityComparer;cs+interface://System/Collections/Generic/IEqualityComparer[1];(field initializer) in Castle.MicroKernel.SubSystems.Naming.DefaultNamingSubSystem
False;Parameter;cs+class://Castle/Windsor/Configuration/Interpreters/XmlInterpreter;cs+class://Castle/Windsor/Configuration/Interpreters/AbstractInterpreter;FromAppConfig in Castle.Windsor.Installer.Configuration
False;Parameter;cs+class://Castle/Windsor/Configuration/Interpreters/XmlInterpreter;cs+class://Castle/Windsor/Configuration/Interpreters/AbstractInterpreter;FromXml in Castle.Windsor.Installer.Configuration
False;Parameter;cs+class://Castle/Windsor/Configuration/Interpreters/XmlInterpreter;cs+class://Castle/Windsor/Configuration/Interpreters/AbstractInterpreter;FromXmlFile in Castle.Windsor.Installer.Configuration
False;Parameter;cs+class://Castle/Windsor/Configuration/Interpreters/XmlInterpreter;cs+class://Castle/Windsor/Configuration/Interpreters/AbstractInterpreter;SetUpChildContainers in Castle.Windsor.Installer.DefaultComponentInstaller
False;Parameter;cs+class://Castle/Windsor/Configuration/Interpreters/XmlInterpreter;cs+class://Castle/Windsor/Configuration/Interpreters/AbstractInterpreter;Registering_IStartable_Out_Of_Order_On_Array_Should_Not_Throw_Exception in Castle.Windsor.Tests.Bugs.FACILITIES_ISSUE_111.FACILITIES_ISSUE_111
False;Parameter;cs+class://Castle/Windsor/Configuration/Interpreters/XmlInterpreter;cs+class://Castle/Windsor/Configuration/Interpreters/AbstractInterpreter;StartWithParentContainer in CastleTests.ChildContainerSupportTestCase
False;Parameter;cs+class://Castle/Windsor/Configuration/Interpreters/XmlInterpreter;cs+class://Castle/Windsor/Configuration/Interpreters/AbstractInterpreter;ShouldNotGetCircularDepencyExceptionWhenResolvingTypeOnItselfWithDifferentModels in Castle.Windsor.Tests.CircularDependencyTestCase
False;Parameter;cs+class://Castle/Windsor/Configuration/Interpreters/XmlInterpreter;cs+class://Castle/Windsor/Configuration/Interpreters/AbstractInterpreter;AssertDefineIsSetBasedOnEnvironmentInformation in Castle.Windsor.Tests.Configuration2.ConfigurationEnvTestCase
False;Parameter;cs+class://Castle/Windsor/Configuration/Interpreters/XmlInterpreter;cs+class://Castle/Windsor/Configuration/Interpreters/AbstractInterpreter;AssertDefineIsSetBasedOnEnvironmentInformation in Castle.Windsor.Tests.Configuration2.ConfigurationEnvTestCase
False;Parameter;cs+class://Castle/Windsor/Configuration/Interpreters/XmlInterpreter;cs+class://Castle/Windsor/Configuration/Interpreters/AbstractInterpreter;AssertBaseDirectoryIsCorrectlyEvaluated in Castle.Windsor.Tests.Configuration2.EvalSupportTestCase
False;Parameter;cs+class://Castle/Windsor/Configuration/Interpreters/XmlInterpreter;cs+class://Castle/Windsor/Configuration/Interpreters/AbstractInterpreter;AssemblyResourceAndIncludes in CastleTests.Configuration2.IncludesTestCase
False;Parameter;cs+class://Castle/Windsor/Configuration/Interpreters/XmlInterpreter;cs+class://Castle/Windsor/Configuration/Interpreters/AbstractInterpreter;FileResourceAndIncludes in CastleTests.Configuration2.IncludesTestCase
False;Parameter;cs+class://Castle/Windsor/Configuration/Interpreters/XmlInterpreter;cs+class://Castle/Windsor/Configuration/Interpreters/AbstractInterpreter;Init in Castle.Windsor.Tests.Configuration2.SynchronizationProblemTestCase
False;Parameter;cs+class://Castle/Windsor/Configuration/Interpreters/XmlInterpreter;cs+class://Castle/Windsor/Configuration/Interpreters/AbstractInterpreter;InstallCalcService in CastleTests.Installer.InstallerTestCase
False;Parameter;cs+class://Castle/Windsor/Configuration/Interpreters/XmlInterpreter;cs+class://Castle/Windsor/Configuration/Interpreters/AbstractInterpreter;InstallChildContainer in CastleTests.Installer.InstallerTestCase
False;Parameter;cs+class://Castle/Windsor/Configuration/Interpreters/XmlInterpreter;cs+class://Castle/Windsor/Configuration/Interpreters/AbstractInterpreter;InvalidOption in CastleTests.PropertiesInspectionBehaviorTestCase
False;Parameter;cs+class://Castle/Windsor/Configuration/Interpreters/XmlInterpreter;cs+class://Castle/Windsor/Configuration/Interpreters/AbstractInterpreter;PropertiesInspectionTestCase in CastleTests.PropertiesInspectionBehaviorTestCase
False;Parameter;cs+class://Castle/Windsor/Configuration/Interpreters/XmlInterpreter;cs+class://Castle/Windsor/Configuration/Interpreters/AbstractInterpreter;TypedFactory_CreateMethodHasNoId_WorksFine in CastleTests.Proxies.TypedFactoryFacilityTestCase
False;Parameter;cs+class://Castle/Windsor/Configuration/Interpreters/XmlInterpreter;cs+class://Castle/Windsor/Configuration/Interpreters/AbstractInterpreter;TypedFactory_WithProxies_WorksFine in CastleTests.Proxies.TypedFactoryFacilityTestCase
True;Parameter;cs+class://Castle/Windsor/Configuration/Interpreters/ConfigurationProcessingException;cs+class://System/Exception;ConfigurationProcessingException in Castle.Windsor.Configuration.Interpreters.ConfigurationProcessingException
True;Parameter;cs+class://Castle/Windsor/Configuration/Interpreters/ConfigurationProcessingException;cs+class://System/Exception;ConfigurationProcessingException in Castle.Windsor.Configuration.Interpreters.ConfigurationProcessingException
True;Parameter;cs+class://Castle/Windsor/Configuration/Interpreters/ConfigurationProcessingException;cs+class://System/Exception;ConfigurationProcessingException in Castle.Windsor.Configuration.Interpreters.ConfigurationProcessingException
True;Parameter;cs+class://Castle/Windsor/Configuration/Interpreters/XmlProcessor/DefaultXmlProcessorEngine;cs+interface://Castle/Windsor/Configuration/Interpreters/XmlProcessor/IXmlProcessorEngine;DispatchProcessCurrent in Castle.Windsor.Configuration.Interpreters.XmlProcessor.DefaultXmlProcessorEngine
True;Assignment;cs+class://Castle/Windsor/Configuration/Interpreters/XmlProcessor/DefaultXmlProcessorEngine;cs+interface://Castle/Windsor/Configuration/Interpreters/XmlProcessor/IXmlProcessorEngine;XmlProcessor in Castle.Windsor.Configuration.Interpreters.XmlProcessor.XmlProcessor
True;Assignment;cs+class://Castle/Windsor/Configuration/Interpreters/XmlProcessor/DefaultXmlProcessorEngine;cs+interface://Castle/Windsor/Configuration/Interpreters/XmlProcessor/IXmlProcessorEngine;XmlProcessor in Castle.Windsor.Configuration.Interpreters.XmlProcessor.XmlProcessor
True;Parameter;cs+class://Castle/Windsor/Configuration/Interpreters/XmlProcessor/DefaultXmlProcessorNodeList;cs+interface://Castle/Windsor/Configuration/Interpreters/XmlProcessor/IXmlProcessorNodeList;Process in Castle.Windsor.Configuration.Interpreters.XmlProcessor.ElementProcessors.AttributesElementProcessor
True;Parameter;cs+class://Castle/Windsor/Configuration/Interpreters/XmlProcessor/DefaultXmlProcessorNodeList;cs+interface://Castle/Windsor/Configuration/Interpreters/XmlProcessor/IXmlProcessorNodeList;Process in Castle.Windsor.Configuration.Interpreters.XmlProcessor.ElementProcessors.ChooseElementProcessor
True;Parameter;cs+class://Castle/Windsor/Configuration/Interpreters/XmlProcessor/DefaultXmlProcessorNodeList;cs+interface://Castle/Windsor/Configuration/Interpreters/XmlProcessor/IXmlProcessorNodeList;Process in Castle.Windsor.Configuration.Interpreters.XmlProcessor.ElementProcessors.DefaultElementProcessor
True;Parameter;cs+class://Castle/Windsor/Configuration/Interpreters/XmlProcessor/DefaultXmlProcessorNodeList;cs+interface://Castle/Windsor/Configuration/Interpreters/XmlProcessor/IXmlProcessorNodeList;Process in Castle.Windsor.Configuration.Interpreters.XmlProcessor.ElementProcessors.IfElementProcessor
True;Parameter;cs+class://Castle/Windsor/Configuration/Interpreters/XmlProcessor/DefaultXmlProcessorNodeList;cs+interface://Castle/Windsor/Configuration/Interpreters/XmlProcessor/IXmlProcessorNodeList;Process in Castle.Windsor.Configuration.Interpreters.XmlProcessor.ElementProcessors.IfProcessingInstructionProcessor
True;Parameter;cs+class://Castle/Windsor/Configuration/Interpreters/XmlProcessor/DefaultXmlProcessorNodeList;cs+interface://Castle/Windsor/Configuration/Interpreters/XmlProcessor/IXmlProcessorNodeList;ProcessInclude in Castle.Windsor.Configuration.Interpreters.XmlProcessor.ElementProcessors.IncludeElementProcessor
True;VariableInitializer;cs+class://Castle/Windsor/Configuration/Interpreters/XmlProcessor/DefaultXmlProcessorNodeList;cs+interface://Castle/Windsor/Configuration/Interpreters/XmlProcessor/IXmlProcessorNodeList;Process in Castle.Windsor.Configuration.Interpreters.XmlProcessor.ElementProcessors.PropertiesElementProcessor
True;Assignment;cs+class://Castle/Windsor/Configuration/Interpreters/XmlProcessor/DefaultXmlProcessorNodeList;cs+interface://Castle/Windsor/Configuration/Interpreters/XmlProcessor/IXmlProcessorNodeList;Process in Castle.Windsor.Configuration.Interpreters.XmlProcessor.ElementProcessors.PropertiesElementProcessor
True;Parameter;cs+class://Castle/Windsor/Configuration/Interpreters/XmlProcessor/DefaultXmlProcessorNodeList;cs+interface://Castle/Windsor/Configuration/Interpreters/XmlProcessor/IXmlProcessorNodeList;Process in Castle.Windsor.Configuration.Interpreters.XmlProcessor.XmlProcessor
False;Assignment;cs+class://Castle/Windsor/Configuration/Interpreters/XmlProcessor/ElementProcessors/DefaultElementProcessor;cs+class://Castle/Windsor/Configuration/Interpreters/XmlProcessor/ElementProcessors/AbstractXmlNodeProcessor;DefaultXmlProcessorEngine in Castle.Windsor.Configuration.Interpreters.XmlProcessor.DefaultXmlProcessorEngine
True;Parameter;cs+class://Castle/Windsor/Configuration/Interpreters/XmlProcessor/XmlProcessorException;cs+class://System/Exception;ProcessResource in Castle.Windsor.Configuration.Interpreters.XmlInterpreter
True;Assignment;cs+class://Castle/Windsor/Diagnostics/AllComponentsDiagnostic;cs+interface://Castle/Windsor/Diagnostics/IAllComponentsDiagnostic;Init in Castle.Windsor.Diagnostics.Extensions.AllComponents
True;Assignment;cs+class://Castle/Windsor/Diagnostics/AllServicesDiagnostic;cs+interface://Castle/Windsor/Diagnostics/IAllServicesDiagnostic;Init in Castle.Windsor.Diagnostics.Extensions.AllServices
True;Parameter;cs+class://Castle/Windsor/Diagnostics/DefaultDiagnosticsSubSystem;cs+interface://Castle/Windsor/Diagnostics/IDiagnosticsHost;Add in Castle.Windsor.Diagnostics.DefaultDiagnosticsSubSystem
True;Parameter;cs+class://Castle/Windsor/Diagnostics/DuplicatedDependenciesDiagnostic;cs+interface://Castle/Windsor/Diagnostics/IDuplicatedDependenciesDiagnostic;Init in Castle.Windsor.Diagnostics.Extensions.DuplicatedDependenciesDebuggerExtension
False;Parameter;cs+class://Castle/Windsor/Diagnostics/Extensions/DuplicatedDependenciesDebuggerExtension;cs+class://Castle/Windsor/Diagnostics/Extensions/AbstractContainerDebuggerExtension;InitStandardExtensions in Castle.Windsor.Diagnostics.DefaultDiagnosticsSubSystem
False;Parameter;cs+class://Castle/Windsor/Diagnostics/Extensions/UsingContainerAsServiceLocator;cs+class://Castle/Windsor/Diagnostics/Extensions/AbstractContainerDebuggerExtension;InitStandardExtensions in Castle.Windsor.Diagnostics.DefaultDiagnosticsSubSystem
False;Parameter;cs+class://Castle/Windsor/Diagnostics/Extensions/AllServices;cs+class://Castle/Windsor/Diagnostics/Extensions/AbstractContainerDebuggerExtension;InitStandardExtensions in Castle.Windsor.Diagnostics.DefaultDiagnosticsSubSystem
True;VariableInitializer;cs+class://Castle/Windsor/Diagnostics/NullPerformanceCounter;cs+interface://Castle/Windsor/Diagnostics/ITrackedComponentsPerformanceCounter;(field initializer) in Castle.Windsor.Diagnostics.NullPerformanceCounter
True;Return;cs+class://Castle/Windsor/Diagnostics/TrackedComponentsPerformanceCounterWrapper;cs+interface://Castle/Windsor/Diagnostics/ITrackedComponentsPerformanceCounter;CreateInstancesTrackedByReleasePolicyCounter in Castle.Windsor.Diagnostics.PerformanceMetricsFactory
True;Assignment;cs+class://Castle/Windsor/Diagnostics/UsingContainerAsServiceLocatorDiagnostic;cs+interface://Castle/Windsor/Diagnostics/IUsingContainerAsServiceLocatorDiagnostic;Init in Castle.Windsor.Diagnostics.Extensions.UsingContainerAsServiceLocator
False;Parameter;cs+class://Castle/Windsor/Diagnostics/Extensions/ReleasePolicyTrackedObjects;cs+class://Castle/Windsor/Diagnostics/Extensions/AbstractContainerDebuggerExtension;InitStandardExtensions in Castle.Windsor.Diagnostics.DefaultDiagnosticsSubSystem
False;Parameter;cs+class://Castle/Windsor/Diagnostics/Extensions/AllComponents;cs+class://Castle/Windsor/Diagnostics/Extensions/AbstractContainerDebuggerExtension;InitStandardExtensions in Castle.Windsor.Diagnostics.DefaultDiagnosticsSubSystem
False;Parameter;cs+class://Castle/Windsor/Diagnostics/DefaultDiagnosticsSubSystem;cs+class://Castle/MicroKernel/AbstractSubSystem;RegisterSubSystems in Castle.MicroKernel.DefaultKernel
True;Parameter;cs+class://Castle/Windsor/Diagnostics/Extensions/Facilities;cs+interface://Castle/Windsor/Diagnostics/IContainerDebuggerExtension;InitStandardExtensions in Castle.Windsor.Diagnostics.DefaultDiagnosticsSubSystem
False;Parameter;cs+class://Castle/Windsor/Diagnostics/Extensions/PotentialLifestyleMismatches;cs+class://Castle/Windsor/Diagnostics/Extensions/AbstractContainerDebuggerExtension;InitStandardExtensions in Castle.Windsor.Diagnostics.DefaultDiagnosticsSubSystem
True;Cast;cs+interface://Castle/Windsor/Diagnostics/IContainerDebuggerExtensionHost;cs+interface://System/Collections/Generic/IEnumerable[1];KernelDebuggerProxy in Castle.Windsor.Diagnostics.KernelDebuggerProxy
False;Parameter;cs+class://Castle/Windsor/Diagnostics/Extensions/PotentiallyMisconfiguredComponents;cs+class://Castle/Windsor/Diagnostics/Extensions/AbstractContainerDebuggerExtension;InitStandardExtensions in Castle.Windsor.Diagnostics.DefaultDiagnosticsSubSystem
True;Assignment;cs+class://Castle/Windsor/Diagnostics/PotentialLifestyleMismatchesDiagnostic;cs+interface://Castle/Windsor/Diagnostics/IPotentialLifestyleMismatchesDiagnostic;Init in Castle.Windsor.Diagnostics.Extensions.PotentialLifestyleMismatches
True;Assignment;cs+class://Castle/Windsor/Diagnostics/PotentiallyMisconfiguredComponentsDiagnostic;cs+interface://Castle/Windsor/Diagnostics/IPotentiallyMisconfiguredComponentsDiagnostic;Init in Castle.Windsor.Diagnostics.Extensions.PotentiallyMisconfiguredComponents
True;Parameter;cs+class://Castle/Windsor/Diagnostics/TrackedComponentsDiagnostic;cs+interface://Castle/Windsor/Diagnostics/ITrackedComponentsDiagnostic;Init in Castle.Windsor.Diagnostics.Extensions.ReleasePolicyTrackedObjects
True;Return;cs+class://Castle/Windsor/Installer/AssemblyInstaller;cs+interface://Castle/MicroKernel/Registration/IWindsorInstaller;Instance in Castle.Windsor.Installer.FromAssembly
True;Return;cs+class://Castle/Windsor/Installer/CompositeInstaller;cs+interface://Castle/MicroKernel/Registration/IWindsorInstaller;InDirectory in Castle.Windsor.Installer.FromAssembly
True;Return;cs+class://Castle/Windsor/Installer/CompositeInstaller;cs+interface://Castle/MicroKernel/Registration/IWindsorInstaller;ApplicationAssemblies in Castle.Windsor.Installer.FromAssembly
True;Return;cs+class://Castle/Windsor/Installer/ConfigurationInstaller;cs+interface://Castle/MicroKernel/Registration/IWindsorInstaller;FromFile in Castle.Windsor.Tests.ContainerAndGenericsInConfigTestCase
True;Return;cs+class://Castle/Windsor/Installer/ConfigurationInstaller;cs+interface://Castle/MicroKernel/Registration/IWindsorInstaller;FromFile in Castle.Windsor.Tests.XmlConfigStructureTestCase
True;Assignment;cs+class://Castle/Windsor/Installer/DefaultComponentInstaller;cs+interface://Castle/Windsor/IComponentsInstaller;WindsorContainer in Castle.Windsor.WindsorContainer
True;Parameter;cs+class://Castle/Windsor/Installer/PartialConfigurationStore;cs+interface://Castle/MicroKernel/SubSystems/Configuration/IConfigurationStore;Install in Castle.Windsor.WindsorContainer
True;Parameter;cs+class://Castle/Windsor/Installer/PartialConfigurationStore;cs+interface://Castle/MicroKernel/SubSystems/Configuration/IConfigurationStore;Install in Castle.Windsor.WindsorContainer
False;Assignment;cs+class://Castle/Windsor/Proxy/DefaultProxyFactory;cs+class://Castle/Windsor/Proxy/AbstractProxyFactory;WindsorContainer in Castle.Windsor.WindsorContainer
False;Parameter;cs+class://Castle/Windsor/Proxy/DefaultProxyFactory;cs+class://Castle/Windsor/Proxy/AbstractProxyFactory;Can_use_custom_dependencyResolver in CastleTests.MicroKernelTestCase
True;Parameter;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;WindsorContainer in Castle.Windsor.WindsorContainer
True;Parameter;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;WindsorContainer in Castle.Windsor.WindsorContainer
True;Parameter;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;Parent in Castle.Windsor.WindsorContainer
True;Parameter;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;Parent in Castle.Windsor.WindsorContainer
True;Parameter;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;RunInstaller in Castle.Windsor.WindsorContainer
True;Parameter;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;Install in Castle.Windsor.WindsorContainer
True;Parameter;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;Install in Castle.Windsor.WindsorContainer
True;Assignment;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;AddChildContainer in Castle.Windsor.WindsorContainer
True;Return;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;AddFacility in Castle.Windsor.WindsorContainer
True;Return;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;AddFacility in Castle.Windsor.WindsorContainer
True;Return;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;AddFacility in Castle.Windsor.WindsorContainer
True;Return;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;Install in Castle.Windsor.WindsorContainer
True;Return;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;Install in Castle.Windsor.WindsorContainer
True;Return;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;Register in Castle.Windsor.WindsorContainer
True;Return;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;AddComponent in Castle.Windsor.WindsorContainer
True;Return;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;AddComponent in Castle.Windsor.WindsorContainer
True;Return;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;AddComponent in Castle.Windsor.WindsorContainer
True;Return;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;AddComponent in Castle.Windsor.WindsorContainer
True;Return;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;AddComponent in Castle.Windsor.WindsorContainer
True;Return;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;AddComponent in Castle.Windsor.WindsorContainer
True;Return;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;AddComponentLifeStyle in Castle.Windsor.WindsorContainer
True;Return;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;AddComponentLifeStyle in Castle.Windsor.WindsorContainer
True;Return;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;AddComponentLifeStyle in Castle.Windsor.WindsorContainer
True;Return;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;AddComponentLifeStyle in Castle.Windsor.WindsorContainer
True;Return;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;AddComponentLifeStyle in Castle.Windsor.WindsorContainer
True;Return;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;AddComponentLifeStyle in Castle.Windsor.WindsorContainer
True;Return;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;AddComponentProperties in Castle.Windsor.WindsorContainer
True;Return;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;AddComponentProperties in Castle.Windsor.WindsorContainer
True;Return;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;AddComponentWithProperties in Castle.Windsor.WindsorContainer
True;Return;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;AddComponentWithProperties in Castle.Windsor.WindsorContainer
True;Return;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;AddComponentWithProperties in Castle.Windsor.WindsorContainer
True;Return;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;AddComponentWithProperties in Castle.Windsor.WindsorContainer
True;Return;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;AddFacility in Castle.Windsor.WindsorContainer
True;Return;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;AddFacility in Castle.Windsor.WindsorContainer
True;Return;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;AddFacility in Castle.Windsor.WindsorContainer
True;Assignment;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;SetUp in Castle.Windsor.Tests.LifecycledComponentsReleasePolicyTestCase
True;Parameter;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;Facility_When_added_to_a_child_container_wher_parent_has_facility_pulls_from_child in Castle.Windsor.Tests.Facilities.TypedFactory.Components.TypedFactoryAndSubContainersTestCase
True;Parameter;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;Resolve_SingletonAndDisposeChildContainer_ShouldNotDisposeSingleton in Castle.Windsor.Tests.Facilities.TypedFactory.Components.TypedFactoryAndSubContainersTestCase
True;Parameter;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;Resolve_SingletonAndDisposeChildContainer_ShouldNotDisposeSingleton in Castle.Windsor.Tests.Facilities.TypedFactory.Components.TypedFactoryAndSubContainersTestCase
True;Assignment;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;Init in Castle.Windsor.Tests.FailureCleanUpTestCase
True;Parameter;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;TestForSerivces in CastleTests.LifestyleTests
True;Parameter;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;TestForTypedFactories in CastleTests.LifestyleTests
True;VariableInitializer;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;CreateConfiguredContainer in Castle.Facilities.Logging.Tests.BaseTest
True;VariableInitializer;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;CreateConfiguredContainer in Castle.Facilities.Logging.Tests.OverrideLoggerTest
True;Assignment;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;SetUp in CastleTests.Facilities.EventWiring.FluentRegistrationTestCase
True;Assignment;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;SetUp in CastleTests.Facilities.Synchronize.DispatcherObjectTestCase
True;Parameter;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;Instances_created_on_the_same_thread_are_reused_in_child_container in CastleTests.Lifestyle.LitestylePerThreadTestCase
True;Parameter;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;Can_resolve_from_child_with_dependency_with_dependency_on_parent_component in Castle.Windsor.Tests.Bugs.IoC_115
True;Parameter;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;Parent_component_resolved_via_child_container_can_only_depend_on_components_from_parent in Castle.Windsor.Tests.Bugs.IoC_115
True;Assignment;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;TestResolveSubComponentInConstructorWithParameters in Castle.Windsor.Tests.Bugs.IoC_138
True;Parameter;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;AddComponentInstanceAndChildContainers in CastleTests.ChildContainerSupportTestCase
True;VariableInitializer;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;AddAndRemoveChildContainer in CastleTests.ChildContainerSupportTestCase
True;VariableInitializer;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;AddAndRemoveChildContainerWithProperty in CastleTests.ChildContainerSupportTestCase
True;VariableInitializer;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;AddingToTwoParentContainsThrowsKernelException in CastleTests.ChildContainerSupportTestCase
True;VariableInitializer;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;AddingToTwoParentContainsThrowsKernelException in CastleTests.ChildContainerSupportTestCase
True;VariableInitializer;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;AddingToTwoParentWithPropertyContainsThrowsKernelException in CastleTests.ChildContainerSupportTestCase
True;VariableInitializer;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;AddingToTwoParentWithPropertyContainsThrowsKernelException in CastleTests.ChildContainerSupportTestCase
True;VariableInitializer;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;ResolveAgainstParentContainer in CastleTests.ChildContainerSupportTestCase
True;VariableInitializer;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;ResolveAgainstParentContainerWithProperty in CastleTests.ChildContainerSupportTestCase
True;VariableInitializer;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;StartWithParentContainer in CastleTests.ChildContainerSupportTestCase
True;Assignment;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;SetUp in Castle.Windsor.Tests.Configuration2.ConfigurationForwardedTypesTestCase
True;Assignment;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;SimpleChoose in Castle.Windsor.Tests.Configuration2.ConfigWithStatementsTestCase
True;Assignment;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;SimpleIf in Castle.Windsor.Tests.Configuration2.ConfigWithStatementsTestCase
True;Assignment;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;AssemblyResourceAndIncludes in CastleTests.Configuration2.IncludesTestCase
True;Assignment;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;FileResourceAndIncludes in CastleTests.Configuration2.IncludesTestCase
True;Assignment;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;FileResourceAndRelativeIncludes in CastleTests.Configuration2.IncludesTestCase
True;Assignment;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;FileResourceAndRelativeIncludes2 in CastleTests.Configuration2.IncludesTestCase
True;Assignment;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;CorrectEval in Castle.Windsor.Tests.Configuration2.Properties.PropertiesTestCase
True;Assignment;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;MissingProperties in Castle.Windsor.Tests.Configuration2.Properties.PropertiesTestCase
True;Assignment;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;PropertiesAndDefines in Castle.Windsor.Tests.Configuration2.Properties.PropertiesTestCase
True;Assignment;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;PropertiesAndDefines2 in Castle.Windsor.Tests.Configuration2.Properties.PropertiesTestCase
True;Assignment;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;PropertiesAndIncludes in Castle.Windsor.Tests.Configuration2.Properties.PropertiesTestCase
True;Assignment;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;PropertiesWithinProperties in Castle.Windsor.Tests.Configuration2.Properties.PropertiesTestCase
True;Assignment;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;SilentProperties in Castle.Windsor.Tests.Configuration2.Properties.PropertiesTestCase
True;Parameter;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;ShouldResolveComponentFromParent in Castle.Windsor.Tests.ConfigureDecoratorsTestCase
True;Parameter;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;ShouldResolveDecoratedComponentFromGrandParent in Castle.Windsor.Tests.ConfigureDecoratorsTestCase
True;Parameter;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;ShouldResolveDecoratedComponentFromGrandParent in Castle.Windsor.Tests.ConfigureDecoratorsTestCase
True;Parameter;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;ShouldResolveDecoratedComponentFromParent in Castle.Windsor.Tests.ConfigureDecoratorsTestCase
True;VariableInitializer;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;CausesStackOverflow in Castle.Windsor.Tests.ContainerProblem
True;VariableInitializer;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;CausesStackOverflow in Castle.Windsor.Tests.ContainerProblem2
True;VariableInitializer;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;CanApplyInterceptorsToSelectedMethods in Castle.Windsor.Tests.InterceptorsSelectorTestCase
True;VariableInitializer;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;ResolvingComponentIsDoneOnFirstComeBasis in Castle.Windsor.Tests.RegisteringTwoServicesForSameType
True;VariableInitializer;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;ResolvingComponentIsDoneOnFirstComeBasisWhenNamesAreNotOrdered in Castle.Windsor.Tests.RegisteringTwoServicesForSameType
True;VariableInitializer;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;CanAddInterceptor_DirectSelection in Castle.Windsor.Tests.ModelInterceptorsSelectorTestCase
True;VariableInitializer;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;InterceptorSelectors_Are_Cumulative in Castle.Windsor.Tests.ModelInterceptorsSelectorTestCase
True;VariableInitializer;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;TurnProxyOnAndOff_DirectSelection in Castle.Windsor.Tests.ModelInterceptorsSelectorTestCase
True;VariableInitializer;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;TurnProxyOnAndOff_SubDependency in Castle.Windsor.Tests.ModelInterceptorsSelectorTestCase
True;VariableInitializer;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;SelectUsingBusinessLogic_DirectSelection in Castle.Windsor.Tests.HandlerSelectorsTestCase
True;VariableInitializer;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;SelectUsingBusinessLogic_SubDependency in Castle.Windsor.Tests.HandlerSelectorsTestCase
True;VariableInitializer;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;SubDependencyResolverHasHigherPriorityThanHandlerSelector in Castle.Windsor.Tests.HandlerSelectorsTestCase
True;Assignment;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;Init in Castle.Windsor.Tests.InterceptorsTestCase
True;Assignment;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;ClassProxyWithAttributes in Castle.Windsor.Tests.InterceptorsTestCase
True;Assignment;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;Init in Castle.Windsor.Tests.ReportedProblemTestCase
True;Assignment;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;Init in Castle.Windsor.Tests.SmartProxyTestCase
True;Assignment;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;SetUpTests in Castle.Facilities.WcfIntegration.Tests.IssuesTestCase
True;VariableInitializer;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;CanCreateDuplexProxyAndHandleCallback in Castle.Facilities.WcfIntegration.Tests.Duplex.DuplexClientFixture
True;VariableInitializer;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;CanCallDuplexChannelAsynchronously in Castle.Facilities.WcfIntegration.Tests.Duplex.DuplexClientFixture
True;VariableInitializer;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;CanCreateDuplexProxyAndHandleCallbackAsynchronously in Castle.Facilities.WcfIntegration.Tests.Duplex.DuplexClientFixture
True;Parameter;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;WillApplyErrorHandlersToServices in Castle.Facilities.WcfIntegration.Tests.ServiceHostFixture
True;Parameter;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;Will_apply_multiple_error_handlers_to_service in Castle.Facilities.WcfIntegration.Tests.ServiceHostFixture
True;Parameter;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;WillNotApplyErrorHandlersToServicesIfExplicit in Castle.Facilities.WcfIntegration.Tests.ServiceHostFixture
True;Parameter;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;WillApplyErrorHandlersToServicesExplicitly in Castle.Facilities.WcfIntegration.Tests.ServiceHostFixture
True;Parameter;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;Will_apply_multiple_error_handlers_to_service_explicitly in Castle.Facilities.WcfIntegration.Tests.ServiceHostFixture
True;Parameter;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;WillApplyErrorHandlersToEndpointsExplicitly in Castle.Facilities.WcfIntegration.Tests.ServiceHostFixture
True;Parameter;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;CanCaptureRequestsAndResponsesAtEndpointLevel in Castle.Facilities.WcfIntegration.Tests.ServiceHostFixture
True;Parameter;cs+class://Castle/Windsor/WindsorContainer;cs+interface://Castle/Windsor/IWindsorContainer;CanCaptureRequestsAndResponsesAtServiceLevel in Castle.Facilities.WcfIntegration.Tests.ServiceHostFixture
True;Parameter;cs+class://CastleTests/ContainerExtensions/BadDependencyResolver;cs+interface://Castle/MicroKernel/ISubDependencyResolver;Can_detect_dependency_cycle_introduced_by_poorly_implemented_subresolver in CastleTests.CustomSubDependencyResolversTestCase
True;Parameter;cs+class://CastleTests/ContainerExtensions/GoodDependencyResolver;cs+interface://Castle/MicroKernel/ISubDependencyResolver;Can_detect_waiting_dependency_pointed_to_by_sub_resolver in CastleTests.CustomSubDependencyResolversTestCase
False;Parameter;cs+class://CastleTests/Facilities/TypedFactory/Selectors/WithNameSelector;cs+class://Castle/Facilities/TypedFactory/DefaultTypedFactoryComponentSelector;Explicitly_specified_name_fails_if_not_present in CastleTests.Facilities.TypedFactory.TypedFactorySelectorsTestCase
False;Parameter;cs+class://CastleTests/Facilities/TypedFactory/Selectors/WithNameSelector;cs+class://Castle/Facilities/TypedFactory/DefaultTypedFactoryComponentSelector;Implicitly_specified_name_falls_back_if_not_present in CastleTests.Facilities.TypedFactory.TypedFactorySelectorsTestCase
True;Parameter;cs+class://CastleTests/DelegatingServiceStrategy;cs+interface://Castle/MicroKernel/Handlers/IGenericServiceStrategy;NOT_supports_returns_false_for_HasComponent in CastleTests.GenericServiceStrategyTestCase
True;Parameter;cs+class://CastleTests/DelegatingServiceStrategy;cs+interface://Castle/MicroKernel/Handlers/IGenericServiceStrategy;NOT_supports_returns_null_for_GetHandler in CastleTests.GenericServiceStrategyTestCase
True;Parameter;cs+class://CastleTests/DelegatingServiceStrategy;cs+interface://Castle/MicroKernel/Handlers/IGenericServiceStrategy;NOT_supports_returns_zero_for_GetAssignableHandlers in CastleTests.GenericServiceStrategyTestCase
True;Parameter;cs+class://CastleTests/DelegatingServiceStrategy;cs+interface://Castle/MicroKernel/Handlers/IGenericServiceStrategy;NOT_supports_returns_zero_for_GetHandlers in CastleTests.GenericServiceStrategyTestCase
True;Parameter;cs+class://CastleTests/DelegatingServiceStrategy;cs+interface://Castle/MicroKernel/Handlers/IGenericServiceStrategy;NOT_supports_throws_ComponentNotFoundException_when_resolving in CastleTests.GenericServiceStrategyTestCase
True;Assignment;cs+class://CastleTests/ContainerExtensions/MyCustomReleasePolicy;cs+interface://Castle/MicroKernel/IReleasePolicy;custom_ReleasePolicy_is_not_shown_if_not_implement_the_interface in CastleTests.Diagnostics.ReleasePolicyTrackedObjectsTestCase
True;Return;cs+class://CastleTests/ContainerExtensions/MyCustomReleasePolicy;cs+interface://Castle/MicroKernel/IReleasePolicy;CreateSubPolicy in CastleTests.ContainerExtensions.MyCustomReleasePolicy
True;Return;cs+class://CastleTests/Components/FerrariProvider;cs+interface://CastleTests/Components/ICarProvider;Create in CastleTests.Components.AbstractCarProviderFactory
True;Return;cs+class://CastleTests/Components/HondaProvider;cs+interface://CastleTests/Components/ICarProvider;Create in CastleTests.Components.AbstractCarProviderFactory
True;Cast;cs+interface://Castle/Windsor/Tests/Facilities/TypedFactory/Factories/IGenericFactoryClosedDoubly;cs+interface://Castle/Windsor/Tests/Facilities/TypedFactory/Factories/IGenericFactory[1];Can_resolve_via_generic_factory_closed_doubly in CastleTests.Facilities.TypedFactory.TypedFactoryFacilityTake2TestCase
True;Parameter;cs+class://CastleTests/HandlerFilterTestCase/FailIfCalled;cs+interface://Castle/MicroKernel/IHandlersFilter;SelectionMethodIsNeverCalledOnFilterWhenItDoesNotHaveAnOpinionForThatService in CastleTests.HandlerFilterTestCase
True;Parameter;cs+class://CastleTests/HandlerFilterTestCase/ReturnAllHandlersFilter;cs+interface://Castle/MicroKernel/IHandlersFilter;Filter_gets_all_assignable_handlers_not_exiplicitly_registered_for_given_service in CastleTests.HandlerFilterTestCase
True;Parameter;cs+class://CastleTests/HandlerFilterTestCase/DelegatingFilter;cs+interface://Castle/MicroKernel/IHandlersFilter;Filter_gets_open_generic_handlers_when_generic_service_requested in CastleTests.HandlerFilterTestCase
True;Parameter;cs+class://CastleTests/HandlerFilterTestCase/DelegatingFilter;cs+interface://Castle/MicroKernel/IHandlersFilter;Filter_returning_empty_collection_respected in CastleTests.HandlerFilterTestCase
True;Parameter;cs+class://CastleTests/HandlerFilterTestCase/FilterThatRemovedFourthTaskAndOrdersTheRest;cs+interface://Castle/MicroKernel/IHandlersFilter;HandlerFiltersPrioritizationAndOrderingIsRespected in CastleTests.HandlerFilterTestCase
True;Parameter;cs+class://CastleTests/HandlerFilterTestCase/TestHandlersFilter;cs+interface://Castle/MicroKernel/IHandlersFilter;HandlerFilterGetsCalledLikeExpected in CastleTests.HandlerFilterTestCase
True;Parameter;cs+class://Castle/Windsor/Tests/Handlers/EmptyConstructorTestCase/ExplicitRequiredDependencyDescriptor;cs+interface://Castle/MicroKernel/ModelBuilder/IComponentModelDescriptor;Component_With_Explicit_Required_Dependency_Will_Be_Marked_Waiting in Castle.Windsor.Tests.Handlers.EmptyConstructorTestCase
True;Parameter;cs+class://Castle/Windsor/Tests/Handlers/EmptyConstructorTestCase/RequirePropertyDescriptor;cs+interface://Castle/MicroKernel/ModelBuilder/IComponentModelDescriptor;Component_With_Required_Properies_Will_Be_Marked_Waiting in Castle.Windsor.Tests.Handlers.EmptyConstructorTestCase
True;Parameter;cs+class://CastleTests/Installer/FilterAssembliesInstallerFactory;cs+class://Castle/Windsor/Installer/InstallerFactory;Can_install_from_assembly_by_application in CastleTests.Installer.FromAssemblyInstallersTestCase
True;Parameter;cs+class://CastleTests/Components/EmptyServiceA;cs+interface://CastleTests/Components/IEmptyService;List_is_readonly in Castle.MicroKernel.Tests.SpecializedResolvers.CollectionResolverTestCase
True;Parameter;cs+class://CastleTests/Components/EmptyServiceA;cs+interface://CastleTests/Components/IEmptyService;AddComponentInstanceAndChildContainers in CastleTests.ChildContainerSupportTestCase
True;Parameter;cs+class://CastleTests/Components/EmptyServiceB;cs+interface://CastleTests/Components/IEmptyService;AddComponentInstanceAndChildContainers in CastleTests.ChildContainerSupportTestCase
True;Parameter;cs+class://CastleTests/LoggingFacility/Tests/Classes/CustomLog4NetFactory;cs+class://Castle/Services/Logging/Log4netIntegration/Log4netFactory;Create in CastleTests.LoggingFacility.Tests.Classes.CustomLog4NetFactory
True;Parameter;cs+class://Castle/Windsor/Tests/MicroKernel/NotImplementedDependencyResolver;cs+interface://Castle/MicroKernel/IDependencyResolver;Can_use_custom_dependencyResolver in CastleTests.MicroKernelTestCase
False;Parameter;cs+class://Castle/Windsor/Tests/Facilities/TypedFactory/Selectors/Component2Selector;cs+class://Castle/Facilities/TypedFactory/DefaultTypedFactoryComponentSelector;Selector_pick_by_instance in CastleTests.Facilities.TypedFactory.TypedFactoryFacilityTake2TestCase
True;Parameter;cs+class://Castle/Windsor/Tests/Interceptors/AnotherInterceptorSelector;cs+interface://Castle/MicroKernel/Proxy/IModelInterceptorsSelector;InterceptorSelectors_Are_Cumulative in Castle.Windsor.Tests.ModelInterceptorsSelectorTestCase
True;Parameter;cs+class://Castle/Windsor/Tests/Interceptors/ByTypeInterceptorSelector;cs+interface://Castle/MicroKernel/Proxy/IModelInterceptorsSelector;Interceptor_selected_by_selector_gets_released_properly in Castle.Windsor.Tests.ModelInterceptorsSelectorTestCase
True;Parameter;cs+class://Castle/Windsor/Tests/Interceptors/DummyInterceptorSelector;cs+interface://Castle/DynamicProxy/IInterceptorSelector;CanApplyInterceptorsToSelectedMethods in Castle.Windsor.Tests.InterceptorsSelectorTestCase
True;Parameter;cs+class://Castle/Windsor/Tests/Interceptors/InterceptorTypeSelector;cs+interface://Castle/DynamicProxy/IInterceptorSelector;AddComponent_WithInterceptorSelector_ComponentModelShouldHaveInterceptorSelector in Castle.MicroKernel.Tests.Registration.ComponentRegistrationTestCase
True;Parameter;cs+class://Castle/Windsor/Tests/Interceptors/WatcherInterceptorSelector;cs+interface://Castle/MicroKernel/Proxy/IModelInterceptorsSelector;CanAddInterceptor_DirectSelection in Castle.Windsor.Tests.ModelInterceptorsSelectorTestCase
True;Parameter;cs+class://Castle/Windsor/Tests/Interceptors/WatcherInterceptorSelector;cs+interface://Castle/MicroKernel/Proxy/IModelInterceptorsSelector;InterceptorSelectors_Are_Cumulative in Castle.Windsor.Tests.ModelInterceptorsSelectorTestCase
True;Parameter;cs+class://Castle/Windsor/Tests/Interceptors/WatcherInterceptorSelector;cs+interface://Castle/MicroKernel/Proxy/IModelInterceptorsSelector;TurnProxyOnAndOff_DirectSelection in Castle.Windsor.Tests.ModelInterceptorsSelectorTestCase
True;Parameter;cs+class://Castle/Windsor/Tests/Interceptors/WatcherInterceptorSelector;cs+interface://Castle/MicroKernel/Proxy/IModelInterceptorsSelector;TurnProxyOnAndOff_SubDependency in Castle.Windsor.Tests.ModelInterceptorsSelectorTestCase
True;Return;cs+class://CastleTests/Components/ComponentWithDispose;cs+interface://CastleTests/Components/IComponent;Create in CastleTests.Components.DisposableComponentFactory
True;Parameter;cs+class://CastleTests/StubGenericImplementationMatchingStrategy;cs+interface://Castle/MicroKernel/Handlers/IGenericImplementationMatchingStrategy;Throws_helpful_message_when_generic_matching_strategy_returns_null in CastleTests.GenericImplementationWithGreaterArityThanServiceTestCase
True;Parameter;cs+class://CastleTests/StubGenericImplementationMatchingStrategy;cs+interface://Castle/MicroKernel/Handlers/IGenericImplementationMatchingStrategy;Throws_helpful_message_when_generic_matching_strategy_returns_too_few_types in CastleTests.GenericImplementationWithGreaterArityThanServiceTestCase
True;Parameter;cs+class://CastleTests/StubGenericImplementationMatchingStrategy;cs+interface://Castle/MicroKernel/Handlers/IGenericImplementationMatchingStrategy;Throws_helpful_message_when_generic_matching_strategy_returns_types_that_wont_work_with_the_type in CastleTests.GenericImplementationWithGreaterArityThanServiceTestCase
True;Parameter;cs+class://CastleTests/Facilities/Synchronize/Components/DummyForm;cs+class://System/Windows/Forms/Form;Component_depending_on_unregistered_context_via_type_throws_even_if_another_is_available in CastleTests.Facilities.Synchronize.SynchronizeViaAttributeTestCase
True;Parameter;cs+class://CastleTests/Facilities/Synchronize/Components/DummyForm;cs+class://System/Windows/Forms/Form;AddControl_DifferentThreadInContextUsingConfiguration_UsesAmbientContext in CastleTests.Facilities.Synchronize.SynchronizeFacilityTestCase
True;Parameter;cs+class://CastleTests/Facilities/Synchronize/Components/DummyForm;cs+class://System/Windows/Forms/Form;AddControl_DifferentThreadInContextUsingConfiguration_WorksFine in CastleTests.Facilities.Synchronize.SynchronizeFacilityTestCase
True;Parameter;cs+class://CastleTests/Facilities/Synchronize/Components/DummyForm;cs+class://System/Windows/Forms/Form;AddControl_DifferentThreadInContext_WorksFine in CastleTests.Facilities.Synchronize.SynchronizeFacilityTestCase
True;Parameter;cs+class://CastleTests/Facilities/Synchronize/Components/DummyForm;cs+class://System/Windows/Forms/Form;AddControl_DifferentThread_ThrowsException in CastleTests.Facilities.Synchronize.SynchronizeFacilityTestCase
True;ThisChangingType;cs+class://CastleTests/Facilities/Synchronize/Components/DummyFormActivator;cs+class://Castle/MicroKernel/ComponentActivator/DefaultComponentActivator;InternalCreate in Castle.MicroKernel.ComponentActivator.DefaultComponentActivator
True;Parameter;cs+class://CastleTests/TestImplementationsOfExtensionPoints/DuplicateGenerics;cs+interface://Castle/MicroKernel/Handlers/IGenericImplementationMatchingStrategy;Can_create_component_with_simple_double_generic_impl_for_single_generic_service_via_ImplementedBy in CastleTests.GenericImplementationWithGreaterArityThanServiceTestCase
True;Parameter;cs+class://CastleTests/TestImplementationsOfExtensionPoints/DuplicateGenerics;cs+interface://Castle/MicroKernel/Handlers/IGenericImplementationMatchingStrategy;Can_resolve_generic_component_exposing_two_unrelated_implemented_services_each_closed_over_different_generic_argument in CastleTests.GenericMultipleServicesComponentResolutionTestCase
True;Parameter;cs+class://CastleTests/TestImplementationsOfExtensionPoints/UseStringGenericStrategy;cs+interface://Castle/MicroKernel/Handlers/IGenericImplementationMatchingStrategy;Can_create_component_with_generic_impl_for_non_generic_services in CastleTests.GenericImplementationWithGreaterArityThanServiceTestCase
True;Return;cs+class://Castle/MicroKernel/Tests/ClassComponents/CustomerImpl;cs+interface://Castle/MicroKernel/Tests/ClassComponents/ICustomer;Find in CastleTests.ClassComponents.CustomerValidatorAndRepository
True;Return;cs+class://Castle/MicroKernel/Tests/ClassComponents/CustomerImpl;cs+interface://Castle/MicroKernel/Tests/ClassComponents/ICustomer;Find in Castle.MicroKernel.Tests.ClassComponents.CustomerRepository
True;Parameter;cs+class://Castle/MicroKernel/Tests/ClassComponents/CustomerImpl;cs+interface://Castle/MicroKernel/Tests/ClassComponents/ICustomer;NullModelConfigurationBug in CastleTests.Facilities.FactorySupport.FactorySupportTestCase
True;Parameter;cs+class://Castle/MicroKernel/Tests/ClassComponents/CustomerImpl;cs+interface://Castle/MicroKernel/Tests/ClassComponents/ICustomer;AddComponentInstance in CastleTests.MicroKernelTestCase
True;Parameter;cs+class://Castle/MicroKernel/Tests/ClassComponents/CustomerImpl;cs+interface://Castle/MicroKernel/Tests/ClassComponents/ICustomer;AddComponentInstance_ByService in CastleTests.MicroKernelTestCase
True;Parameter;cs+class://Castle/MicroKernel/Tests/ClassComponents/CustomerImpl;cs+interface://Castle/MicroKernel/Tests/ClassComponents/ICustomer;AddComponent_Instance_UsesInstance in Castle.MicroKernel.Tests.Registration.ComponentRegistrationTestCase
False;Parameter;cs+class://Castle/MicroKernel/Tests/ClassComponents/CustomerImpl2;cs+class://Castle/MicroKernel/Tests/ClassComponents/CustomerImpl;AddComponent_Instance_UsesInstanceWithParameters in Castle.MicroKernel.Tests.Registration.ComponentRegistrationTestCase
True;Parameter;cs+class://Castle/MicroKernel/Tests/ClassComponents/HiperFacility;cs+interface://Castle/MicroKernel/IFacility;FacilityConfig_is_not_null in CastleTests.Bugs.IoC_334
True;Parameter;cs+class://Castle/MicroKernel/Tests/ClassComponents/HiperFacility;cs+interface://Castle/MicroKernel/IFacility;Init in CastleTests.Facilities.FacilityTestCase
True;VariableInitializer;cs+class://Castle/Core/Tests/TestGraphNode;cs+class://Castle/Core/Internal/GraphNode;TopologicalSortOneElement in Castle.Core.Tests.GraphTestCase
True;VariableInitializer;cs+class://Castle/Core/Tests/TestGraphNode;cs+class://Castle/Core/Internal/GraphNode;TopologicalSortSimple in Castle.Core.Tests.GraphTestCase
True;VariableInitializer;cs+class://Castle/Core/Tests/TestGraphNode;cs+class://Castle/Core/Internal/GraphNode;TopologicalSortSimple in Castle.Core.Tests.GraphTestCase
True;VariableInitializer;cs+class://Castle/Core/Tests/TestGraphNode;cs+class://Castle/Core/Internal/GraphNode;TopologicalSortSimple in Castle.Core.Tests.GraphTestCase
True;VariableInitializer;cs+class://Castle/Core/Tests/TestGraphNode;cs+class://Castle/Core/Internal/GraphNode;TopologicalSortSimple in Castle.Core.Tests.GraphTestCase
True;VariableInitializer;cs+class://Castle/Core/Tests/TestGraphNode;cs+class://Castle/Core/Internal/GraphNode;ComplexDag in Castle.Core.Tests.GraphTestCase
True;VariableInitializer;cs+class://Castle/Core/Tests/TestGraphNode;cs+class://Castle/Core/Internal/GraphNode;ComplexDag in Castle.Core.Tests.GraphTestCase
True;VariableInitializer;cs+class://Castle/Core/Tests/TestGraphNode;cs+class://Castle/Core/Internal/GraphNode;ComplexDag in Castle.Core.Tests.GraphTestCase
True;VariableInitializer;cs+class://Castle/Core/Tests/TestGraphNode;cs+class://Castle/Core/Internal/GraphNode;ComplexDag in Castle.Core.Tests.GraphTestCase
True;VariableInitializer;cs+class://Castle/Core/Tests/TestGraphNode;cs+class://Castle/Core/Internal/GraphNode;ComplexDag in Castle.Core.Tests.GraphTestCase
True;VariableInitializer;cs+class://Castle/Core/Tests/TestGraphNode;cs+class://Castle/Core/Internal/GraphNode;ComplexDag in Castle.Core.Tests.GraphTestCase
True;VariableInitializer;cs+class://Castle/Core/Tests/TestGraphNode;cs+class://Castle/Core/Internal/GraphNode;ComplexDag in Castle.Core.Tests.GraphTestCase
True;VariableInitializer;cs+class://Castle/Core/Tests/TestGraphNode;cs+class://Castle/Core/Internal/GraphNode;ComplexDag in Castle.Core.Tests.GraphTestCase
True;VariableInitializer;cs+class://Castle/Core/Tests/TestGraphNode;cs+class://Castle/Core/Internal/GraphNode;ComplexDag in Castle.Core.Tests.GraphTestCase
True;Parameter;cs+class://Castle/MicroKernel/Tests/Registration/ReadOnlyDictionary;cs+interface://System/Collections/IDictionary;DynamicParameters_will_not_enforce_passed_IDictionary_to_be_writeable in Castle.MicroKernel.Tests.Registration.DynamicParametersTestCase
True;Parameter;cs+class://Castle/Windsor/Tests/Facilities/Startable/AddDependency;cs+interface://Castle/MicroKernel/ModelBuilder/IComponentModelDescriptor;TestStartableExplicitFakeDependencies in Castle.Windsor.Tests.Facilities.Startable.StartableFacilityTestCase
True;Parameter;cs+class://Castle/MicroKernel/Tests/ABLoaderWithGuardClause;cs+interface://Castle/MicroKernel/Resolvers/ILazyComponentLoader;Loaders_only_triggered_when_resolving in Castle.MicroKernel.Tests.LazyLoadingTestCase
True;Parameter;cs+class://Castle/MicroKernel/Tests/FooBarResolver;cs+interface://Castle/MicroKernel/ISubDependencyResolver;WillAskResolverWhenTryingToResolveDependencyAfterAnotherHandlerWasRegistered in Castle.MicroKernel.Tests.SubResolverTestCase
True;Parameter;cs+class://Castle/Windsor/Tests/Bugs/IoC_169/Chalk;cs+interface://Castle/Windsor/Tests/Bugs/IoC_169/IChalk;BulkRegistrations_WhenRegistrationMatchesNoInstancesOfService_StopsStartableFacilityFromWorking in Castle.Windsor.Tests.Bugs.IoC_169.IoC_169
True;Return;cs+class://CastleTests/Components/CalculatorService;cs+interface://CastleTests/Components/ICalcService;Create in CastleTests.Components.CalulcatorFactory
True;Return;cs+class://CastleTests/Components/Camera;cs+interface://CastleTests/Components/ICamera;Add in CastleTests.Components.CameraService
True;Parameter;cs+class://Castle/Windsor/Tests/Configuration2/CustomEnv;cs+interface://Castle/Windsor/IEnvironmentInfo;AssertDefineIsSetBasedOnEnvironmentInformation in Castle.Windsor.Tests.Configuration2.ConfigurationEnvTestCase
True;Parameter;cs+class://Castle/Windsor/Tests/Configuration2/CustomEnv;cs+interface://Castle/Windsor/IEnvironmentInfo;AssertDefineIsSetBasedOnEnvironmentInformation in Castle.Windsor.Tests.Configuration2.ConfigurationEnvTestCase
True;Parameter;cs+class://Castle/Windsor/Tests/Configuration2/CustomEnv;cs+interface://Castle/Windsor/IEnvironmentInfo;AssertBaseDirectoryIsCorrectlyEvaluated in Castle.Windsor.Tests.Configuration2.EvalSupportTestCase
True;Assignment;cs+class://Castle/Windsor/Tests/BS;cs+interface://Castle/Windsor/Tests/IS;DN in Castle.Windsor.Tests.DN
True;Parameter;cs+class://Castle/Windsor/Tests/HandlerSelectorsTestCase/WatchSubDependencySelector;cs+interface://Castle/MicroKernel/ISubDependencyResolver;SubDependencyResolverHasHigherPriorityThanHandlerSelector in Castle.Windsor.Tests.HandlerSelectorsTestCase
True;Parameter;cs+class://Castle/Windsor/Tests/HandlerSelectorsTestCase/WatcherSelector;cs+interface://Castle/MicroKernel/IHandlerSelector;SelectUsingBusinessLogic_DirectSelection in Castle.Windsor.Tests.HandlerSelectorsTestCase
True;Parameter;cs+class://Castle/Windsor/Tests/HandlerSelectorsTestCase/WatcherSelector;cs+interface://Castle/MicroKernel/IHandlerSelector;SelectUsingBusinessLogic_SubDependency in Castle.Windsor.Tests.HandlerSelectorsTestCase
True;Parameter;cs+class://Castle/Windsor/Tests/HandlerSelectorsTestCase/WatcherSelector;cs+interface://Castle/MicroKernel/IHandlerSelector;SubDependencyResolverHasHigherPriorityThanHandlerSelector in Castle.Windsor.Tests.HandlerSelectorsTestCase
True;Parameter;cs+class://Castle/ProxyInfrastructure/ProxyNothingHook;cs+interface://Castle/DynamicProxy/IProxyGenerationHook;can_atach_hook_as_instance_simple in CastleTests.Proxies.ComponentProxyRegistrationTestCase
True;Parameter;cs+class://Castle/ProxyInfrastructure/ProxyNothingHook;cs+interface://Castle/DynamicProxy/IProxyGenerationHook;can_atach_hook_as_instance_simple_via_nested_closure in CastleTests.Proxies.ComponentProxyRegistrationTestCase
True;Parameter;cs+class://Castle/ProxyInfrastructure/ProxyNothingHook;cs+interface://Castle/DynamicProxy/IProxyGenerationHook;can_proxy_interfaces_with_no_impl_given_just_a_hook in CastleTests.Proxies.ComponentProxyRegistrationTestCase
True;Parameter;cs+class://Castle/Facilities/Logging/LoggerResolver;cs+interface://Castle/MicroKernel/ISubDependencyResolver;RegisterSubResolver in Castle.Facilities.Logging.LoggingFacility
True;Parameter;cs+class://Castle/Facilities/Logging/LoggerResolver;cs+interface://Castle/MicroKernel/ISubDependencyResolver;RegisterSubResolver in Castle.Facilities.Logging.LoggingFacility
False;Parameter;cs+class://Castle/Facilities/Logging/LoggingFacility;cs+class://Castle/MicroKernel/Facilities/AbstractFacility;RegisterLoggingFacility in Castle.Facilities.WcfIntegration.Tests.WcfClientFixture
False;Parameter;cs+class://Castle/Facilities/Logging/LoggingFacility;cs+class://Castle/MicroKernel/Facilities/AbstractFacility;RegisterLoggingFacility in Castle.Facilities.WcfIntegration.Tests.ServiceHostFixture
True;Parameter;cs+class://Castle/Facilities/Synchronize/AbstractAsyncResult;cs+interface://System/IAsyncResult;Complete in Castle.Facilities.Synchronize.AbstractAsyncResult
True;ThisChangingType;cs+class://Castle/Facilities/Synchronize/CreateOnUIThreadActivator;cs+class://Castle/MicroKernel/ComponentActivator/DefaultComponentActivator;InternalCreate in Castle.MicroKernel.ComponentActivator.DefaultComponentActivator
True;Assignment;cs+class://Castle/Facilities/Synchronize/SynchronizeProxyHook;cs+interface://Castle/DynamicProxy/IProxyGenerationHook;ObtainProxyHook in Castle.Facilities.Synchronize.CreateOnUIThreadInspector
True;Parameter;cs+class://Castle/Facilities/Synchronize/CreateOnUIThreadInspector;cs+interface://Castle/MicroKernel/ModelBuilder/IContributeComponentModelConstruction;Init in Castle.Facilities.Synchronize.SynchronizeFacility
True;ThisChangingType;cs+class://Castle/Facilities/Synchronize/Result;cs+class://Castle/Facilities/Synchronize/AbstractAsyncResult;TimeoutAfter in Castle.Facilities.Synchronize.AbstractAsyncResult
True;ThisChangingType;cs+class://Castle/Facilities/Synchronize/Result;cs+class://Castle/Facilities/Synchronize/AbstractAsyncResult;Complete in Castle.Facilities.Synchronize.AbstractAsyncResult
False;Parameter;cs+class://Castle/Facilities/Synchronize/Result;cs+class://Castle/Facilities/Synchronize/AbstractAsyncResult;End in Castle.Facilities.Synchronize.Result
False;Parameter;cs+class://Castle/Facilities/Synchronize/Result;cs+class://Castle/Facilities/Synchronize/AbstractAsyncResult;End in Castle.Facilities.Synchronize.Result
False;Parameter;cs+class://Castle/Facilities/Synchronize/Result;cs+class://Castle/Facilities/Synchronize/AbstractAsyncResult;SetCallbackInfo in Castle.Facilities.Synchronize.Result
False;Parameter;cs+class://Castle/Facilities/Synchronize/SynchronizeComponentInspector;cs+class://Castle/MicroKernel/ModelBuilder/Inspectors/MethodMetaInspector;Init in Castle.Facilities.Synchronize.SynchronizeFacility
False;Parameter;cs+class://Castle/Facilities/Synchronize/SynchronizeFacility;cs+class://Castle/MicroKernel/Facilities/AbstractFacility;RegisterFacility_WithBadControlProxyHook_ThrowsConfigurationException in CastleTests.Facilities.Synchronize.SynchronizeFacilityTestCase
False;Parameter;cs+class://Castle/Facilities/Synchronize/SynchronizeFacility;cs+class://Castle/MicroKernel/Facilities/AbstractFacility;RegisterFacility_WithControlProxyHook_WorksFine in CastleTests.Facilities.Synchronize.SynchronizeFacilityTestCase
False;Parameter;cs+class://Castle/Facilities/Synchronize/SynchronizeFacility;cs+class://Castle/MicroKernel/Facilities/AbstractFacility;RegisterFacility_With_missing_ControlProxyHook_ThrowsConfigurationException in CastleTests.Facilities.Synchronize.SynchronizeFacilityTestCase
True;Parameter;cs+class://Castle/Facilities/Synchronize/SynchronizeInterceptorSelector;cs+interface://Castle/DynamicProxy/IInterceptorSelector;ApplySynchronization in Castle.Facilities.Synchronize.SynchronizeComponentInspector
True;Parameter;cs+class://Castle/Facilities/Synchronize/SynchronizeMetaInfo/MatchByMethodHandle;cs+interface://System/Collections/Generic/IEqualityComparer[1];SynchronizeMetaInfo in Castle.Facilities.Synchronize.SynchronizeMetaInfo
True;ThisChangingType;cs+class://Castle/Facilities/Synchronize/SynchronousResult;cs+class://Castle/Facilities/Synchronize/AbstractAsyncResult;TimeoutAfter in Castle.Facilities.Synchronize.AbstractAsyncResult
True;ThisChangingType;cs+class://Castle/Facilities/Synchronize/SynchronousResult;cs+class://Castle/Facilities/Synchronize/AbstractAsyncResult;Complete in Castle.Facilities.Synchronize.AbstractAsyncResult
True;Parameter;cs+class://Castle/Facilities/EventWiring/EventWiringDescriptor;cs+interface://Castle/MicroKernel/ModelBuilder/IComponentModelDescriptor;PublishEvent in Castle.Facilities.EventWiring.EventWiringRegistrationExtensions
True;Parameter;cs+class://Castle/Facilities/EventWiring/EventWiringDescriptor;cs+interface://Castle/MicroKernel/ModelBuilder/IComponentModelDescriptor;PublishEvent in Castle.Facilities.EventWiring.EventWiringRegistrationExtensions
True;Parameter;cs+class://Castle/Facilities/EventWiring/EventWiringDescriptor;cs+interface://Castle/MicroKernel/ModelBuilder/IComponentModelDescriptor;PublishEvent in Castle.Facilities.EventWiring.EventWiringRegistrationExtensions
True;Parameter;cs+class://Castle/Facilities/EventWiring/EventWiringDescriptor;cs+interface://Castle/MicroKernel/ModelBuilder/IComponentModelDescriptor;PublishEvent in Castle.Facilities.EventWiring.EventWiringRegistrationExtensions
True;ThisChangingType;cs+class://Castle/Facilities/EventWiring/EventWiringException;cs+class://Castle/MicroKernel/Facilities/FacilityException;FacilityException in Castle.MicroKernel.Facilities.FacilityException
True;ThisChangingType;cs+class://Castle/Facilities/EventWiring/EventWiringException;cs+class://Castle/MicroKernel/Facilities/FacilityException;FacilityException in Castle.MicroKernel.Facilities.FacilityException
True;ThisChangingType;cs+class://Castle/Facilities/EventWiring/EventWiringException;cs+class://Castle/MicroKernel/Facilities/FacilityException;FacilityException in Castle.MicroKernel.Facilities.FacilityException
False;Parameter;cs+class://Castle/Facilities/EventWiring/EventWiringFacility;cs+class://Castle/MicroKernel/Facilities/AbstractFacility;Wiring_WhenPublisherHasAProxy_ListenerShouldStillGetTheEvents in CastleTests.Facilities.EventWiring.ProxiedSubscriberTestCase
True;Parameter;cs+class://Castle/Facilities/EventWiring/EventWiringInspector;cs+interface://Castle/MicroKernel/ModelBuilder/IContributeComponentModelConstruction;Init in Castle.Facilities.EventWiring.EventWiringFacility
True;ThisChangingType;cs+class://Castle/Facilities/FactorySupport/AccessorActivator;cs+class://Castle/MicroKernel/ComponentActivator/DefaultComponentActivator;InternalCreate in Castle.MicroKernel.ComponentActivator.DefaultComponentActivator
True;ThisChangingType;cs+class://Castle/Facilities/FactorySupport/FactoryActivator;cs+class://Castle/MicroKernel/ComponentActivator/DefaultComponentActivator;InternalCreate in Castle.MicroKernel.ComponentActivator.DefaultComponentActivator
False;Parameter;cs+class://Castle/Facilities/FactorySupport/FactorySupportFacility;cs+class://Castle/MicroKernel/Facilities/AbstractFacility;AfterContainerCreated in CastleTests.Facilities.FactorySupport.FactorySupportProgrammaticTestCase
True;Parameter;cs+class://Castle/Facilities/WcfIntegration/PreserveObjectReferenceBehavior;cs+interface://Castle/Facilities/WcfIntegration/IPreserveObjectReferences;ApplyClientBehavior in Castle.Facilities.WcfIntegration.PreserveObjectReferenceBehavior
True;Parameter;cs+class://Castle/Facilities/WcfIntegration/PreserveObjectReferenceBehavior;cs+interface://Castle/Facilities/WcfIntegration/IPreserveObjectReferences;ApplyDispatchBehavior in Castle.Facilities.WcfIntegration.PreserveObjectReferenceBehavior
True;Parameter;cs+class://Castle/Facilities/WcfIntegration/PreserveObjectReference;cs+interface://Castle/Facilities/WcfIntegration/IPreserveObjectReferences;ApplyClientBehavior in Castle.Facilities.WcfIntegration.PreserveObjectReference
True;Parameter;cs+class://Castle/Facilities/WcfIntegration/PreserveObjectReference;cs+interface://Castle/Facilities/WcfIntegration/IPreserveObjectReferences;ApplyDispatchBehavior in Castle.Facilities.WcfIntegration.PreserveObjectReference
True;Return;cs+class://Castle/Facilities/WcfIntegration/Behaviors/CertificateCredentials;cs+class://Castle/Facilities/WcfIntegration/Behaviors/AbstractCredentials;(field initializer) in Castle.Facilities.WcfIntegration.Behaviors.FetchCertificate
True;Return;cs+class://Castle/Facilities/WcfIntegration/Behaviors/CertificateCredentials;cs+class://Castle/Facilities/WcfIntegration/Behaviors/AbstractCredentials;(field initializer) in Castle.Facilities.WcfIntegration.Behaviors.FetchCertificateBySubject
True;Parameter;cs+class://Castle/Facilities/WcfIntegration/AbstractChannelBuilder/Scope;cs+interface://Castle/Facilities/WcfIntegration/IChannelBuilderScope;GetChannel in Castle.Facilities.WcfIntegration.AbstractChannelBuilder.Scope
True;Parameter;cs+class://Castle/Facilities/WcfIntegration/AbstractChannelBuilder/Scope;cs+interface://Castle/Facilities/WcfIntegration/IChannelBuilderScope;GetChannel in Castle.Facilities.WcfIntegration.AbstractChannelBuilder.Scope
True;Parameter;cs+class://Castle/Facilities/WcfIntegration/AbstractChannelBuilder/Scope;cs+interface://Castle/Facilities/WcfIntegration/IChannelBuilderScope;GetChannel in Castle.Facilities.WcfIntegration.AbstractChannelBuilder.Scope
True;Parameter;cs+class://Castle/Facilities/WcfIntegration/AbstractChannelBuilder/Scope;cs+interface://Castle/Facilities/WcfIntegration/IChannelBuilderScope;GetChannel in Castle.Facilities.WcfIntegration.AbstractChannelBuilder.Scope
True;Parameter;cs+class://Castle/Facilities/WcfIntegration/AbstractChannelBuilder/Scope;cs+interface://Castle/Facilities/WcfIntegration/IChannelBuilderScope;GetChannel in Castle.Facilities.WcfIntegration.AbstractChannelBuilder.Scope
True;Parameter;cs+class://Castle/Facilities/WcfIntegration/AbstractChannelBuilder/Scope;cs+interface://Castle/Facilities/WcfIntegration/IChannelBuilderScope;VisitBindingDiscoveredEndpoint in Castle.Facilities.WcfIntegration.AbstractChannelBuilder.Scope
True;ThisChangingType;cs+class://Castle/Facilities/WcfIntegration/Internal/WcfBurdenExtension[1];cs+class://Castle/Facilities/WcfIntegration/AbstractExtension[1];ExecuteAt in Castle.Facilities.WcfIntegration.AbstractExtension
False;Parameter;cs+class://Castle/Facilities/WcfIntegration/Internal/WcfBurdenExtension[1];cs+class://Castle/Facilities/WcfIntegration/AbstractExtension[1];GetChannelCreator in Castle.Facilities.WcfIntegration.WcfClientActivator
False;Parameter;cs+class://Castle/Facilities/WcfIntegration/Internal/WcfBurdenExtension[1];cs+class://Castle/Facilities/WcfIntegration/AbstractExtension[1];ConfigureServiceHost in Castle.Facilities.WcfIntegration.AbstractServiceHostBuilder
True;Parameter;cs+class://Castle/Facilities/WcfIntegration/Lifestyles/WcfSessionScopeHolder;cs+interface://System/ServiceModel/IExtension[1];Dispose in Castle.Facilities.WcfIntegration.Lifestyles.WcfSessionScopeAccessor
True;Parameter;cs+class://Castle/Facilities/WcfIntegration/Lifestyles/WcfSessionScopeHolder;cs+interface://System/ServiceModel/IExtension[1];GetScope in Castle.Facilities.WcfIntegration.Lifestyles.WcfSessionScopeAccessor
False;ThisChangingType;cs+class://Castle/Facilities/WcfIntegration/Data/DataServiceHostBuilder;cs+class://Castle/Facilities/WcfIntegration/AbstractServiceHostBuilder[1];ConfigureServiceHost in Castle.Facilities.WcfIntegration.AbstractServiceHostBuilder
False;Parameter;cs+class://Castle/Facilities/WcfIntegration/Data/DataServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];CreateServiceHost in Castle.Facilities.WcfIntegration.Data.DataServiceHostBuilder
True;ThisChangingType;cs+class://Castle/Facilities/WcfIntegration/FirstAvailablePolicy;cs+class://Castle/Facilities/WcfIntegration/ListBasedLoadBalancePolicy;ChooseTarget in Castle.Facilities.WcfIntegration.ListBasedLoadBalancePolicy
True;ThisChangingType;cs+class://Castle/Facilities/WcfIntegration/WcfServiceDiscoveryMetadata;cs+class://Castle/Facilities/WcfIntegration/AbstractExtension[1];ExecuteAt in Castle.Facilities.WcfIntegration.AbstractExtension
True;ThisChangingType;cs+class://Castle/Facilities/WcfIntegration/RoundRobinPolicy;cs+class://Castle/Facilities/WcfIntegration/ListBasedLoadBalancePolicy;ChooseTarget in Castle.Facilities.WcfIntegration.ListBasedLoadBalancePolicy
True;Parameter;cs+class://Castle/Facilities/WcfIntegration/WcfErrorBehavior;cs+interface://System/ServiceModel/Description/IServiceBehavior;AddErrorHandler in Castle.Facilities.WcfIntegration.Internal.WcfUtils
True;Parameter;cs+class://Castle/Facilities/WcfIntegration/WcfErrorBehavior;cs+interface://System/ServiceModel/Description/IEndpointBehavior;RegisterErrorHandler in Castle.Facilities.WcfIntegration.Internal.WcfUtils
True;Parameter;cs+class://Castle/Facilities/WcfIntegration/WcfChannelExtensions;cs+interface://Castle/Facilities/WcfIntegration/IWcfChannelExtension;Accept in Castle.Facilities.WcfIntegration.WcfChannelExtensions
True;ThisChangingType;cs+class://Castle/Facilities/WcfIntegration/Behaviors/AbstractMessageEnvelopeAction[1];cs+class://Castle/Facilities/WcfIntegration/AbstractExtension[1];ExecuteAt in Castle.Facilities.WcfIntegration.AbstractExtension
False;ThisChangingType;cs+class://Castle/Facilities/WcfIntegration/Behaviors/AbstractMessageEnvelopeAction;cs+class://Castle/Facilities/WcfIntegration/Behaviors/AbstractMessageEnvelopeAction[1];ExecuteAt in Castle.Facilities.WcfIntegration.AbstractExtension
True;Parameter;cs+class://Castle/Facilities/WcfIntegration/Behaviors/MessageLifecycleBehavior[1];cs+interface://System/ServiceModel/Dispatcher/IClientMessageInspector;ApplyClientBehavior in Castle.Facilities.WcfIntegration.Behaviors.MessageLifecycleBehavior
True;Parameter;cs+class://Castle/Facilities/WcfIntegration/Behaviors/MessageLifecycleBehavior[1];cs+interface://System/ServiceModel/Dispatcher/IDispatchMessageInspector;ApplyDispatchBehavior in Castle.Facilities.WcfIntegration.Behaviors.MessageLifecycleBehavior
True;ThisChangingType;cs+class://Castle/Facilities/WcfIntegration/Behaviors/MessageLifecycleBehavior;cs+class://Castle/Facilities/WcfIntegration/Behaviors/MessageLifecycleBehavior[1];ApplyClientBehavior in Castle.Facilities.WcfIntegration.Behaviors.MessageLifecycleBehavior
True;ThisChangingType;cs+class://Castle/Facilities/WcfIntegration/Behaviors/MessageLifecycleBehavior;cs+class://Castle/Facilities/WcfIntegration/Behaviors/MessageLifecycleBehavior[1];ApplyDispatchBehavior in Castle.Facilities.WcfIntegration.Behaviors.MessageLifecycleBehavior
True;ThisChangingType;cs+class://Castle/Facilities/WcfIntegration/Behaviors/AbstractMessageAction[1];cs+class://Castle/Facilities/WcfIntegration/AbstractExtension[1];ExecuteAt in Castle.Facilities.WcfIntegration.AbstractExtension
False;ThisChangingType;cs+class://Castle/Facilities/WcfIntegration/Behaviors/AbstractMessageAction;cs+class://Castle/Facilities/WcfIntegration/Behaviors/AbstractMessageAction[1];ExecuteAt in Castle.Facilities.WcfIntegration.AbstractExtension
True;ThisChangingType;cs+class://Castle/Facilities/WcfIntegration/WcfBehaviorActivator;cs+class://Castle/MicroKernel/ComponentActivator/DefaultComponentActivator;InternalCreate in Castle.MicroKernel.ComponentActivator.DefaultComponentActivator
True;ThisChangingType;cs+class://Castle/Facilities/WcfIntegration/Behaviors/LogMessageFormat;cs+class://Castle/Facilities/WcfIntegration/AbstractExtension[1];ExecuteAt in Castle.Facilities.WcfIntegration.AbstractExtension
True;ThisChangingType;cs+class://Castle/Facilities/WcfIntegration/AbstractChannelBuilder[1];cs+class://Castle/Facilities/WcfIntegration/AbstractChannelBuilder;PerformEndpointSearch in Castle.Facilities.WcfIntegration.AbstractChannelBuilder
True;Parameter;cs+class://Castle/Facilities/WcfIntegration/ServiceEndpointExtensions;cs+interface://Castle/Facilities/WcfIntegration/IWcfExtensionVisitor;Install in Castle.Facilities.WcfIntegration.ServiceEndpointExtensions
True;ThisChangingType;cs+class://Castle/Facilities/WcfIntegration/DiscoveredEndpointMetadata;cs+class://Castle/Facilities/WcfIntegration/AbstractExtension[1];ExecuteAt in Castle.Facilities.WcfIntegration.AbstractExtension
False;Parameter;cs+class://Castle/Facilities/WcfIntegration/DiscoveredEndpointMetadata;cs+class://Castle/Facilities/WcfIntegration/AbstractExtension[1];DiscoverChannel in Castle.Facilities.WcfIntegration.AbstractChannelBuilder
False;Assignment;cs+class://Castle/Facilities/WcfIntegration/Async/WcfRemotingAsyncInterceptor;cs+class://Castle/Facilities/WcfIntegration/Proxy/WcfRemotingInterceptor;GetInterceptors in Castle.Facilities.WcfIntegration.Proxy.WcfProxyFactory
False;Parameter;cs+class://Castle/Facilities/WcfIntegration/Async/AsyncWcfCall[2];cs+class://Castle/Facilities/WcfIntegration/Async/AsyncWcfCallBase[1];BeginWcfCall in Castle.Facilities.WcfIntegration.WcfAsync
True;Parameter;cs+class://Castle/Facilities/WcfIntegration/Async/AsyncWcfCall[2];cs+interface://Castle/Facilities/WcfIntegration/IWcfAsyncCall[1];BeginWcfCall in Castle.Facilities.WcfIntegration.WcfAsync
True;Return;cs+class://Castle/Facilities/WcfIntegration/Async/AsyncWcfCall[2];cs+interface://Castle/Facilities/WcfIntegration/IWcfAsyncCall[1];BeginWcfCall in Castle.Facilities.WcfIntegration.WcfAsync
True;Return;cs+class://Castle/Facilities/WcfIntegration/Async/AsyncWcfCall[2];cs+interface://Castle/Facilities/WcfIntegration/IWcfAsyncCall[1];BeginWcfCall in Castle.Facilities.WcfIntegration.WcfAsync
False;Parameter;cs+class://Castle/Facilities/WcfIntegration/Async/AsyncWcfCall[1];cs+class://Castle/Facilities/WcfIntegration/Async/AsyncWcfCallBase[1];BeginWcfCall in Castle.Facilities.WcfIntegration.WcfAsync
True;Parameter;cs+class://Castle/Facilities/WcfIntegration/Async/AsyncWcfCall[1];cs+interface://Castle/Facilities/WcfIntegration/IWcfAsyncCall;BeginWcfCall in Castle.Facilities.WcfIntegration.WcfAsync
True;Return;cs+class://Castle/Facilities/WcfIntegration/Async/AsyncWcfCall[1];cs+interface://Castle/Facilities/WcfIntegration/IWcfAsyncCall;BeginWcfCall in Castle.Facilities.WcfIntegration.WcfAsync
True;Return;cs+class://Castle/Facilities/WcfIntegration/Async/AsyncWcfCall[1];cs+interface://Castle/Facilities/WcfIntegration/IWcfAsyncCall;BeginWcfCall in Castle.Facilities.WcfIntegration.WcfAsync
True;Parameter;cs+class://Castle/Facilities/WcfIntegration/Proxy/WcfProxyGenerationHook;cs+interface://Castle/DynamicProxy/IProxyGenerationHook;CreateProxyGenerationOptions in Castle.Facilities.WcfIntegration.Proxy.WcfProxyFactory
False;Assignment;cs+class://Castle/Facilities/WcfIntegration/Proxy/WcfRemotingInterceptor;cs+interface://Castle/Facilities/WcfIntegration/Proxy/IWcfInterceptor;GetInterceptors in Castle.Facilities.WcfIntegration.Proxy.WcfProxyFactory
True;Parameter;cs+interface://Castle/Facilities/WcfIntegration/Proxy/IWcfInterceptor;cs+interface://Castle/DynamicProxy/IInterceptor;SplitInterceptors in Castle.Facilities.WcfIntegration.Proxy.WcfInterceptorSelector
True;Parameter;cs+class://Castle/Facilities/WcfIntegration/Async/AsyncChannelFactoryProxyHook;cs+interface://Castle/DynamicProxy/IProxyGenerationHook;CreateChannelFactory in Castle.Facilities.WcfIntegration.Async.AsynChannelFactoryBuilder
True;Return;cs+class://Castle/Facilities/WcfIntegration/Async/TypeSystem/AsyncMethod;cs+class://System/Reflection/MethodInfo;GetBaseDefinition in Castle.Facilities.WcfIntegration.Async.TypeSystem.AsyncMethod
True;Assignment;cs+class://Castle/Facilities/WcfIntegration/Async/TypeSystem/AsyncMethodParameter;cs+class://System/Reflection/ParameterInfo;ObtainParameters in Castle.Facilities.WcfIntegration.Async.TypeSystem.BeginMethod
True;Assignment;cs+class://Castle/Facilities/WcfIntegration/Async/TypeSystem/AsyncMethodParameter;cs+class://System/Reflection/ParameterInfo;ObtainParameters in Castle.Facilities.WcfIntegration.Async.TypeSystem.BeginMethod
True;Assignment;cs+class://Castle/Facilities/WcfIntegration/Async/TypeSystem/AsyncMethodParameter;cs+class://System/Reflection/ParameterInfo;ObtainParameters in Castle.Facilities.WcfIntegration.Async.TypeSystem.EndMethod
True;ThisChangingType;cs+class://Castle/Facilities/WcfIntegration/Async/TypeSystem/BeginMethod;cs+class://Castle/Facilities/WcfIntegration/Async/TypeSystem/AsyncMethod;ReturnParameter in Castle.Facilities.WcfIntegration.Async.TypeSystem.AsyncMethod
True;ThisChangingType;cs+class://Castle/Facilities/WcfIntegration/Async/TypeSystem/BeginMethod;cs+class://Castle/Facilities/WcfIntegration/Async/TypeSystem/AsyncMethod;GetBaseDefinition in Castle.Facilities.WcfIntegration.Async.TypeSystem.AsyncMethod
False;Return;cs+class://Castle/Facilities/WcfIntegration/Async/TypeSystem/BeginMethod;cs+class://Castle/Facilities/WcfIntegration/Async/TypeSystem/AsyncMethod;GetBeginMethod in Castle.Facilities.WcfIntegration.Async.TypeSystem.AsyncType
False;Return;cs+class://Castle/Facilities/WcfIntegration/Async/TypeSystem/BeginMethod;cs+class://Castle/Facilities/WcfIntegration/Async/TypeSystem/AsyncMethod;GetBeginMethod in Castle.Facilities.WcfIntegration.Async.TypeSystem.AsyncType
True;Parameter;cs+class://Castle/Facilities/WcfIntegration/Async/TypeSystem/BeginMethod;cs+class://Castle/Facilities/WcfIntegration/Async/TypeSystem/AsyncMethod;ObtainParameters in Castle.Facilities.WcfIntegration.Async.TypeSystem.BeginMethod
True;Parameter;cs+class://Castle/Facilities/WcfIntegration/Async/TypeSystem/BeginMethod;cs+class://Castle/Facilities/WcfIntegration/Async/TypeSystem/AsyncMethod;ObtainParameters in Castle.Facilities.WcfIntegration.Async.TypeSystem.BeginMethod
True;ThisChangingType;cs+class://Castle/Facilities/WcfIntegration/Async/TypeSystem/EndMethod;cs+class://Castle/Facilities/WcfIntegration/Async/TypeSystem/AsyncMethod;ReturnParameter in Castle.Facilities.WcfIntegration.Async.TypeSystem.AsyncMethod
True;ThisChangingType;cs+class://Castle/Facilities/WcfIntegration/Async/TypeSystem/EndMethod;cs+class://Castle/Facilities/WcfIntegration/Async/TypeSystem/AsyncMethod;GetBaseDefinition in Castle.Facilities.WcfIntegration.Async.TypeSystem.AsyncMethod
False;Return;cs+class://Castle/Facilities/WcfIntegration/Async/TypeSystem/EndMethod;cs+class://Castle/Facilities/WcfIntegration/Async/TypeSystem/AsyncMethod;GetEndMethod in Castle.Facilities.WcfIntegration.Async.TypeSystem.AsyncType
False;Return;cs+class://Castle/Facilities/WcfIntegration/Async/TypeSystem/EndMethod;cs+class://Castle/Facilities/WcfIntegration/Async/TypeSystem/AsyncMethod;GetEndMethod in Castle.Facilities.WcfIntegration.Async.TypeSystem.AsyncType
True;Parameter;cs+class://Castle/Facilities/WcfIntegration/Async/TypeSystem/EndMethod;cs+class://Castle/Facilities/WcfIntegration/Async/TypeSystem/AsyncMethod;ObtainParameters in Castle.Facilities.WcfIntegration.Async.TypeSystem.EndMethod
False;Assignment;cs+class://Castle/Facilities/WcfIntegration/DefaultClientModel;cs+class://Castle/Facilities/WcfIntegration/WcfClientModel[1];ResolveClientModel in Castle.Facilities.WcfIntegration.WcfClientExtension
False;Parameter;cs+class://Castle/Facilities/WcfIntegration/DefaultClientModel;cs+class://Castle/Facilities/WcfIntegration/WcfClientModel[1];CanResolveClientAssociatedWithChannelUsingFactoryWithModel in Castle.Facilities.WcfIntegration.Tests.WcfClientFixture
True;Parameter;cs+class://Castle/Facilities/WcfIntegration/Behaviors/LogMessageInspector;cs+interface://System/ServiceModel/Dispatcher/IClientMessageInspector;ApplyClientBehavior in Castle.Facilities.WcfIntegration.Behaviors.LogMessageEndpointBehavior
True;Parameter;cs+class://Castle/Facilities/WcfIntegration/Behaviors/LogMessageInspector;cs+interface://System/ServiceModel/Dispatcher/IDispatchMessageInspector;ApplyDispatchBehavior in Castle.Facilities.WcfIntegration.Behaviors.LogMessageEndpointBehavior
False;ThisChangingType;cs+class://Castle/Facilities/WcfIntegration/DuplexChannelBuilder;cs+class://Castle/Facilities/WcfIntegration/AbstractChannelBuilder[1];PerformEndpointSearch in Castle.Facilities.WcfIntegration.AbstractChannelBuilder
True;ThisChangingType;cs+class://Castle/Facilities/WcfIntegration/DuplexChannelBuilder;cs+class://Castle/Facilities/WcfIntegration/AbstractChannelBuilder[1];GetChannelCreator in Castle.Facilities.WcfIntegration.AbstractChannelBuilder
True;ThisChangingType;cs+class://Castle/Facilities/WcfIntegration/DuplexChannelBuilder;cs+class://Castle/Facilities/WcfIntegration/AbstractChannelBuilder[1];GetChannelCreator in Castle.Facilities.WcfIntegration.AbstractChannelBuilder
True;Parameter;cs+class://Castle/Facilities/WcfIntegration/ChannelFactoryExtensions;cs+interface://Castle/Facilities/WcfIntegration/IWcfExtensionVisitor;Install in Castle.Facilities.WcfIntegration.ChannelFactoryExtensions
True;Parameter;cs+class://Castle/Facilities/WcfIntegration/WcfClientFactorySelector;cs+interface://Castle/Facilities/TypedFactory/ITypedFactoryComponentSelector;Init in Castle.Facilities.WcfIntegration.WcfClientExtension
True;Parameter;cs+class://Castle/Facilities/WcfIntegration/Internal/AsyncResult;cs+interface://System/IAsyncResult;Complete in Castle.Facilities.WcfIntegration.Internal.AsyncResult
False;Return;cs+class://Castle/Facilities/WcfIntegration/Internal/SynchronousResult;cs+class://Castle/Facilities/WcfIntegration/Internal/AsyncResult;BeginFindEndpoints in Castle.Facilities.WcfIntegration.ServiceCatalog
False;Return;cs+class://Castle/Facilities/WcfIntegration/Internal/SynchronousResult;cs+class://Castle/Facilities/WcfIntegration/Internal/AsyncResult;BeginListEndpoints in Castle.Facilities.WcfIntegration.ServiceCatalog
False;Return;cs+class://Castle/Facilities/WcfIntegration/Internal/SynchronousResult;cs+class://Castle/Facilities/WcfIntegration/Internal/AsyncResult;OnBeginFind in Castle.Facilities.WcfIntegration.ServiceCatalog
False;Return;cs+class://Castle/Facilities/WcfIntegration/Internal/SynchronousResult;cs+class://Castle/Facilities/WcfIntegration/Internal/AsyncResult;OnBeginOfflineAnnouncement in Castle.Facilities.WcfIntegration.ServiceCatalog
False;Return;cs+class://Castle/Facilities/WcfIntegration/Internal/SynchronousResult;cs+class://Castle/Facilities/WcfIntegration/Internal/AsyncResult;OnBeginOnlineAnnouncement in Castle.Facilities.WcfIntegration.ServiceCatalog
False;Return;cs+class://Castle/Facilities/WcfIntegration/Internal/SynchronousResult;cs+class://Castle/Facilities/WcfIntegration/Internal/AsyncResult;OnBeginResolve in Castle.Facilities.WcfIntegration.ServiceCatalog
True;ThisChangingType;cs+class://Castle/Facilities/WcfIntegration/Internal/SynchronousResult;cs+class://Castle/Facilities/WcfIntegration/Internal/AsyncResult;TimeoutAfter in Castle.Facilities.WcfIntegration.Internal.AsyncResult
True;ThisChangingType;cs+class://Castle/Facilities/WcfIntegration/Internal/SynchronousResult;cs+class://Castle/Facilities/WcfIntegration/Internal/AsyncResult;Complete in Castle.Facilities.WcfIntegration.Internal.AsyncResult
True;Parameter;cs+class://Castle/Facilities/WcfIntegration/Lifestyles/WcfOperationScopeHolder;cs+interface://System/ServiceModel/IExtension[1];Dispose in Castle.Facilities.WcfIntegration.Lifestyles.WcfOperationScopeAccessor
True;Parameter;cs+class://Castle/Facilities/WcfIntegration/Lifestyles/WcfOperationScopeHolder;cs+interface://System/ServiceModel/IExtension[1];GetScope in Castle.Facilities.WcfIntegration.Lifestyles.WcfOperationScopeAccessor
True;Parameter;cs+class://Castle/Facilities/WcfIntegration/Internal/WcfBehaviorInspector;cs+interface://Castle/MicroKernel/ModelBuilder/IContributeComponentModelConstruction;Init in Castle.Facilities.WcfIntegration.WcfFacility
True;Parameter;cs+class://Castle/Facilities/WcfIntegration/WcfEndpointExtensions;cs+interface://Castle/Facilities/WcfIntegration/IWcfEndpointExtension;Accept in Castle.Facilities.WcfIntegration.WcfEndpointExtensions
False;ThisChangingType;cs+class://Castle/Facilities/WcfIntegration/RestChannelBuilder;cs+class://Castle/Facilities/WcfIntegration/AbstractChannelBuilder[1];PerformEndpointSearch in Castle.Facilities.WcfIntegration.AbstractChannelBuilder
True;ThisChangingType;cs+class://Castle/Facilities/WcfIntegration/RestChannelBuilder;cs+class://Castle/Facilities/WcfIntegration/AbstractChannelBuilder[1];GetChannelCreator in Castle.Facilities.WcfIntegration.AbstractChannelBuilder
True;ThisChangingType;cs+class://Castle/Facilities/WcfIntegration/RestChannelBuilder;cs+class://Castle/Facilities/WcfIntegration/AbstractChannelBuilder[1];GetChannelCreator in Castle.Facilities.WcfIntegration.AbstractChannelBuilder
False;ThisChangingType;cs+class://Castle/Facilities/WcfIntegration/DefaultChannelBuilder;cs+class://Castle/Facilities/WcfIntegration/AbstractChannelBuilder[1];PerformEndpointSearch in Castle.Facilities.WcfIntegration.AbstractChannelBuilder
True;ThisChangingType;cs+class://Castle/Facilities/WcfIntegration/DefaultChannelBuilder;cs+class://Castle/Facilities/WcfIntegration/AbstractChannelBuilder[1];GetChannelCreator in Castle.Facilities.WcfIntegration.AbstractChannelBuilder
True;ThisChangingType;cs+class://Castle/Facilities/WcfIntegration/DefaultChannelBuilder;cs+class://Castle/Facilities/WcfIntegration/AbstractChannelBuilder[1];GetChannelCreator in Castle.Facilities.WcfIntegration.AbstractChannelBuilder
True;ThisChangingType;cs+class://Castle/Facilities/WcfIntegration/WcfClientActivator;cs+class://Castle/MicroKernel/ComponentActivator/DefaultComponentActivator;InternalCreate in Castle.MicroKernel.ComponentActivator.DefaultComponentActivator
True;Return;cs+class://Castle/Facilities/WcfIntegration/WcfClientModelBase;cs+interface://Castle/Facilities/WcfIntegration/IWcfClientModel;ForEndpoint in Castle.Facilities.WcfIntegration.WcfClientModelBase
True;Parameter;cs+class://Castle/Facilities/WcfIntegration/AbstractServiceHostBuilder/ServiceEndpointBuilder;cs+interface://Castle/Facilities/WcfIntegration/IWcfEndpointVisitor;AddServiceEndpoint in Castle.Facilities.WcfIntegration.AbstractServiceHostBuilder.ServiceEndpointBuilder
True;ThisChangingType;cs+class://Castle/Facilities/WcfIntegration/AbstractServiceHostBuilder[1];cs+class://Castle/Facilities/WcfIntegration/AbstractServiceHostBuilder;ConfigureServiceHost in Castle.Facilities.WcfIntegration.AbstractServiceHostBuilder
True;Return;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceHost;cs+class://System/ServiceModel/ServiceHost;CreateServiceHost in Castle.Facilities.WcfIntegration.DefaultServiceHostBuilder
True;Return;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceHost;cs+class://System/ServiceModel/ServiceHost;CreateServiceHost in Castle.Facilities.WcfIntegration.DefaultServiceHostBuilder
False;ThisChangingType;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceHostBuilder;cs+class://Castle/Facilities/WcfIntegration/AbstractServiceHostBuilder[1];ConfigureServiceHost in Castle.Facilities.WcfIntegration.AbstractServiceHostBuilder
False;Parameter;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];CreateServiceHost in Castle.Facilities.WcfIntegration.DefaultServiceHostBuilder
False;ThisChangingType;cs+class://Castle/Facilities/WcfIntegration/Rest/RestServiceHostBuilder;cs+class://Castle/Facilities/WcfIntegration/AbstractServiceHostBuilder[1];ConfigureServiceHost in Castle.Facilities.WcfIntegration.AbstractServiceHostBuilder
False;Parameter;cs+class://Castle/Facilities/WcfIntegration/Rest/RestServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];CreateServiceHost in Castle.Facilities.WcfIntegration.Rest.RestServiceHostBuilder
True;Assignment;cs+class://Castle/Facilities/WcfIntegration/Internal/WcfBurden;cs+interface://Castle/Facilities/WcfIntegration/IWcfBurden;GetChannelCreator in Castle.Facilities.WcfIntegration.AbstractChannelBuilder
True;Assignment;cs+class://Castle/Facilities/WcfIntegration/Internal/WcfBurden;cs+interface://Castle/Facilities/WcfIntegration/IWcfBurden;GetChannelCreator in Castle.Facilities.WcfIntegration.AbstractChannelBuilder
True;Parameter;cs+class://Castle/Facilities/WcfIntegration/Internal/WcfBurden;cs+interface://Castle/Facilities/WcfIntegration/IWcfBurden;ConfigureServiceHost in Castle.Facilities.WcfIntegration.AbstractServiceHostBuilder
True;Parameter;cs+class://Castle/Facilities/WcfIntegration/Internal/WcfBurden;cs+interface://Castle/Facilities/WcfIntegration/IWcfBurden;ConfigureServiceHost in Castle.Facilities.WcfIntegration.AbstractServiceHostBuilder
True;Parameter;cs+class://Castle/Facilities/WcfIntegration/Internal/WcfBurden;cs+interface://Castle/Facilities/WcfIntegration/IWcfBurden;ConfigureServiceHost in Castle.Facilities.WcfIntegration.AbstractServiceHostBuilder
True;Parameter;cs+class://Castle/Facilities/WcfIntegration/Internal/WcfBurden;cs+interface://Castle/Facilities/WcfIntegration/IWcfBurden;ConfigureServiceHost in Castle.Facilities.WcfIntegration.AbstractServiceHostBuilder
True;Parameter;cs+class://Castle/Facilities/WcfIntegration/Internal/WcfBurden;cs+interface://Castle/Facilities/WcfIntegration/IWcfBurden;ConfigureServiceHost in Castle.Facilities.WcfIntegration.AbstractServiceHostBuilder
True;Parameter;cs+class://Castle/Facilities/WcfIntegration/Internal/WcfBurden;cs+interface://Castle/Facilities/WcfIntegration/IWcfBurden;ConfigureServiceHost in Castle.Facilities.WcfIntegration.AbstractServiceHostBuilder
True;Parameter;cs+class://Castle/Facilities/WcfIntegration/Internal/WcfBurden;cs+interface://Castle/Facilities/WcfIntegration/IWcfBurden;ConfigureServiceHost in Castle.Facilities.WcfIntegration.AbstractServiceHostBuilder
True;Parameter;cs+class://Castle/Facilities/WcfIntegration/ServiceHostExtensions;cs+interface://Castle/Facilities/WcfIntegration/IWcfExtensionVisitor;Install in Castle.Facilities.WcfIntegration.ServiceHostExtensions
True;Parameter;cs+class://Castle/Facilities/WcfIntegration/WcfExplicitExtension;cs+interface://Castle/Facilities/WcfIntegration/IWcfServiceExtension;Accept in Castle.Facilities.WcfIntegration.WcfExplicitExtension
True;Parameter;cs+class://Castle/Facilities/WcfIntegration/WcfExplicitExtension;cs+interface://Castle/Facilities/WcfIntegration/IWcfChannelExtension;Accept in Castle.Facilities.WcfIntegration.WcfExplicitExtension
True;Parameter;cs+class://Castle/Facilities/WcfIntegration/WcfExplicitExtension;cs+interface://Castle/Facilities/WcfIntegration/IWcfEndpointExtension;Accept in Castle.Facilities.WcfIntegration.WcfExplicitExtension
False;Return;cs+class://Castle/Facilities/WcfIntegration/WcfServiceKeyExtension;cs+class://Castle/Facilities/WcfIntegration/WcfExplicitExtension;CreateFrom in Castle.Facilities.WcfIntegration.WcfExplicitExtension
True;ThisChangingType;cs+class://Castle/Facilities/WcfIntegration/WcfServiceKeyExtension;cs+class://Castle/Facilities/WcfIntegration/WcfExplicitExtension;Accept in Castle.Facilities.WcfIntegration.WcfExplicitExtension
True;ThisChangingType;cs+class://Castle/Facilities/WcfIntegration/WcfServiceKeyExtension;cs+class://Castle/Facilities/WcfIntegration/WcfExplicitExtension;Accept in Castle.Facilities.WcfIntegration.WcfExplicitExtension
True;ThisChangingType;cs+class://Castle/Facilities/WcfIntegration/WcfServiceKeyExtension;cs+class://Castle/Facilities/WcfIntegration/WcfExplicitExtension;Accept in Castle.Facilities.WcfIntegration.WcfExplicitExtension
False;Return;cs+class://Castle/Facilities/WcfIntegration/WcfServiceTypeExtension;cs+class://Castle/Facilities/WcfIntegration/WcfExplicitExtension;CreateFrom in Castle.Facilities.WcfIntegration.WcfExplicitExtension
True;ThisChangingType;cs+class://Castle/Facilities/WcfIntegration/WcfServiceTypeExtension;cs+class://Castle/Facilities/WcfIntegration/WcfExplicitExtension;Accept in Castle.Facilities.WcfIntegration.WcfExplicitExtension
True;ThisChangingType;cs+class://Castle/Facilities/WcfIntegration/WcfServiceTypeExtension;cs+class://Castle/Facilities/WcfIntegration/WcfExplicitExtension;Accept in Castle.Facilities.WcfIntegration.WcfExplicitExtension
True;ThisChangingType;cs+class://Castle/Facilities/WcfIntegration/WcfServiceTypeExtension;cs+class://Castle/Facilities/WcfIntegration/WcfExplicitExtension;Accept in Castle.Facilities.WcfIntegration.WcfExplicitExtension
False;Return;cs+class://Castle/Facilities/WcfIntegration/WcfInstanceExtension;cs+class://Castle/Facilities/WcfIntegration/WcfExplicitExtension;CreateFrom in Castle.Facilities.WcfIntegration.WcfExplicitExtension
True;ThisChangingType;cs+class://Castle/Facilities/WcfIntegration/WcfInstanceExtension;cs+class://Castle/Facilities/WcfIntegration/WcfExplicitExtension;Accept in Castle.Facilities.WcfIntegration.WcfExplicitExtension
True;ThisChangingType;cs+class://Castle/Facilities/WcfIntegration/WcfInstanceExtension;cs+class://Castle/Facilities/WcfIntegration/WcfExplicitExtension;Accept in Castle.Facilities.WcfIntegration.WcfExplicitExtension
True;ThisChangingType;cs+class://Castle/Facilities/WcfIntegration/WcfInstanceExtension;cs+class://Castle/Facilities/WcfIntegration/WcfExplicitExtension;Accept in Castle.Facilities.WcfIntegration.WcfExplicitExtension
False;Parameter;cs+class://Castle/Facilities/WcfIntegration/ConfigurationEndpointModel;cs+class://Castle/Facilities/WcfIntegration/WcfEndpointBase[1];Load in Castle.Facilities.WcfIntegration.WcfClientComponentLoader
False;Parameter;cs+class://Castle/Facilities/WcfIntegration/ConfigurationEndpointModel;cs+class://Castle/Facilities/WcfIntegration/WcfEndpointBase[1];ResolveClientModel in Castle.Facilities.WcfIntegration.WcfClientExtension
False;Parameter;cs+class://Castle/Facilities/WcfIntegration/BindingAddressEndpointModel;cs+class://Castle/Facilities/WcfIntegration/WcfEndpointBase[1];CanResolveClientAssociatedWithChannelUsingFactoryWithEndpoint in Castle.Facilities.WcfIntegration.Tests.WcfClientFixture
True;Parameter;cs+class://Castle/Facilities/WcfIntegration/WindsorDependencyInjectionServiceBehavior;cs+interface://System/ServiceModel/Description/IServiceBehavior;ConfigureServiceHost in Castle.Facilities.WcfIntegration.AbstractServiceHostBuilder
True;Assignment;cs+class://Castle/Facilities/WcfIntegration/WindsorInstanceProvider;cs+interface://System/ServiceModel/Dispatcher/IInstanceProvider;ApplyDispatchBehavior in Castle.Facilities.WcfIntegration.WindsorDependencyInjectionServiceBehavior
True;Parameter;cs+class://Castle/Facilities/WcfIntegration/WcfServiceExtensions;cs+interface://Castle/Facilities/WcfIntegration/IWcfServiceExtension;Accept in Castle.Facilities.WcfIntegration.WcfServiceExtensions
True;Parameter;cs+class://Castle/Facilities/WcfIntegration/Tests/Behaviors/CallCountServiceBehavior/CallCountMessageInspector;cs+interface://System/ServiceModel/Dispatcher/IDispatchMessageInspector;ApplyDispatchBehavior in Castle.Facilities.WcfIntegration.Tests.Behaviors.CallCountServiceBehavior
False;ThisChangingType;cs+class://Castle/Facilities/WcfIntegration/Tests/Behaviors/AddOperationsHeader;cs+class://Castle/Facilities/WcfIntegration/Behaviors/AbstractMessageAction;ExecuteAt in Castle.Facilities.WcfIntegration.AbstractExtension
False;ThisChangingType;cs+class://Castle/Facilities/WcfIntegration/Tests/Behaviors/StoreMessageBody;cs+class://Castle/Facilities/WcfIntegration/Behaviors/AbstractMessageEnvelopeAction;ExecuteAt in Castle.Facilities.WcfIntegration.AbstractExtension
True;Parameter;cs+class://Castle/Facilities/WcfIntegration/Tests/Behaviors/CallCountEndpointBehavior/CallCountMessageInspector;cs+interface://System/ServiceModel/Dispatcher/IClientMessageInspector;ApplyClientBehavior in Castle.Facilities.WcfIntegration.Tests.Behaviors.CallCountEndpointBehavior
False;ThisChangingType;cs+class://Castle/Facilities/WcfIntegration/Tests/Behaviors/ReplaceOperationsResult;cs+class://Castle/Facilities/WcfIntegration/Behaviors/AbstractMessageEnvelopeAction;ExecuteAt in Castle.Facilities.WcfIntegration.AbstractExtension
True;Parameter;cs+class://Castle/Facilities/WcfIntegration/Tests/Behaviors/UnitOfWorkCallContextInitializer;cs+interface://System/ServiceModel/Dispatcher/ICallContextInitializer;ApplyDispatchBehavior in Castle.Facilities.WcfIntegration.Tests.Behaviors.UnitOfworkEndPointBehavior
False;ThisChangingType;cs+class://Castle/Facilities/WcfIntegration/Tests/HelloMessageFormat;cs+class://Castle/Facilities/WcfIntegration/Behaviors/LogMessageFormat;ExecuteAt in Castle.Facilities.WcfIntegration.AbstractExtension
