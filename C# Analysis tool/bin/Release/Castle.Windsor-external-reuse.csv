direct?;source;from;to;from declaration;to declaration
True;MethodCall;cs+class://Castle/Core/ConstructorDependencyModel;cs+class://Castle/Core/DependencyModel;HasDefaultValue;cs+class://Castle/MicroKernel/ComponentActivator/DefaultComponentActivator/CheckCtorCandidate
True;MethodCall;cs+class://Castle/Core/ConstructorDependencyModel;cs+class://Castle/Core/DependencyModel;TargetItemType;cs+class://Castle/Core/ConstructorCandidate/CompareTo
True;MethodCall;cs+class://Castle/Core/ConstructorDependencyModel;cs+class://Castle/Core/DependencyModel;TargetItemType;cs+class://Castle/Core/ConstructorCandidate/CompareTo
False;MethodCall;cs+class://Castle/MicroKernel/ComponentActivator/ComponentActivatorException;cs+class://Castle/MicroKernel/ComponentResolutionException;Message;cs+class://CastleTests/HelpfulExceptionsOnResolveTestCase/ReleasePolicy_tracking_the_same_instance_twice_with_transient_lifestyle_and_factory_method_suggests_different_lifestyle
False;MethodCall;cs+class://Castle/MicroKernel/ComponentActivator/ComponentActivatorException;cs+class://Castle/MicroKernel/ComponentResolutionException;Message;cs+class://CastleTests/HelpfulExceptionsOnResolveTestCase/When_property_setter_throws_at_resolution_time_exception_suggests_disabling_setting_the_property
False;MethodCall;cs+class://Castle/MicroKernel/Handlers/GenericHandlerTypeMismatchException;cs+class://Castle/MicroKernel/Handlers/HandlerException;Message;cs+class://CastleTests/GenericImplementationWithGreaterArityThanServiceTestCase/Throws_helpful_message_when_generic_matching_strategy_returns_types_that_wont_work_with_the_type
False;MethodCall;cs+class://Castle/MicroKernel/CircularDependencyException;cs+class://Castle/MicroKernel/ComponentResolutionException;Message;cs+class://CastleTests/DependencyCyclesTestCase/Can_detect_and_report_cycle_via_factory_method
False;MethodCall;cs+class://Castle/MicroKernel/CircularDependencyException;cs+class://Castle/MicroKernel/ComponentResolutionException;Message;cs+class://CastleTests/DependencyCyclesTestCase/Can_detect_and_report_cycle_where_container_has_lazy_loaders
False;MethodCall;cs+class://Castle/MicroKernel/CircularDependencyException;cs+class://Castle/MicroKernel/ComponentResolutionException;Message;cs+class://CastleTests/DependencyGraphTestCase/CycleComponentGraphs
False;MethodCall;cs+class://Castle/MicroKernel/CircularDependencyException;cs+class://Castle/MicroKernel/ComponentResolutionException;Message;cs+class://Castle/Windsor/Tests/CircularDependencyTestCase/ThrowsACircularDependencyException2
False;MethodCall;cs+class://Castle/MicroKernel/ComponentNotFoundException;cs+class://Castle/MicroKernel/ComponentResolutionException;Data;cs+class://Castle/Facilities/TypedFactory/TypedFactoryComponentResolver/Resolve
False;MethodCall;cs+class://Castle/MicroKernel/ComponentNotFoundException;cs+class://Castle/MicroKernel/ComponentResolutionException;Data;cs+class://Castle/Facilities/TypedFactory/TypedFactoryComponentResolver/Resolve
False;MethodCall;cs+class://Castle/MicroKernel/ComponentNotFoundException;cs+class://Castle/MicroKernel/ComponentResolutionException;Message;cs+class://CastleTests/HelpfulExceptionsOnResolveTestCase/Resolving_by_name_not_found_prints_helpful_message_many_other_options_present
False;MethodCall;cs+class://Castle/MicroKernel/ComponentNotFoundException;cs+class://Castle/MicroKernel/ComponentResolutionException;Message;cs+class://CastleTests/HelpfulExceptionsOnResolveTestCase/Resolving_by_name_not_found_prints_helpful_message_one_other_option_present
False;MethodCall;cs+class://Castle/MicroKernel/ComponentNotFoundException;cs+class://Castle/MicroKernel/ComponentResolutionException;Message;cs+class://CastleTests/HelpfulExceptionsOnResolveTestCase/Resolving_by_name_not_found_prints_helpful_message_zero_other_options_present
True;MethodCall;cs+class://Castle/MicroKernel/ComponentRegistrationException;cs+class://System/Exception;Message;cs+class://Castle/MicroKernel/Tests/Configuration/ConfigurationTestCase/Type_not_implementing_service_should_throw
True;MethodCall;cs+class://Castle/MicroKernel/ComponentRegistrationException;cs+class://System/Exception;Message;cs+class://CastleTests/MicroKernelTestCase/ShouldNotRegisterAbstractClass_With_LifestyleType_And_Override_Signature
True;MethodCall;cs+class://Castle/MicroKernel/Handlers/DefaultGenericHandler;cs+class://Castle/MicroKernel/Handlers/AbstractHandler;ComponentModel;cs+class://Castle/MicroKernel/Handlers/GenericHandlerTypeMismatchException/BuildMessage
True;MethodCall;cs+class://Castle/MicroKernel/Handlers/HandlerException;cs+class://System/Exception;Message;cs+class://CastleTests/HelpfulExceptionsOnResolveTestCase/No_resolvable_constructor_no_inline_arguments
True;MethodCall;cs+class://Castle/MicroKernel/Handlers/HandlerException;cs+class://System/Exception;Message;cs+class://CastleTests/HelpfulExceptionsOnResolveTestCase/No_resolvable_constructor_open_generic_component
True;MethodCall;cs+class://Castle/MicroKernel/Handlers/HandlerException;cs+class://System/Exception;Message;cs+class://CastleTests/HelpfulExceptionsOnResolveTestCase/No_resolvable_constructor_with_inline_arguments
True;MethodCall;cs+class://Castle/MicroKernel/Handlers/HandlerException;cs+class://System/Exception;Message;cs+class://CastleTests/Facilities/EventWiring/SomethingWentWrongTestCase/Helpful_exception_is_thrown_when_publishing_to_non_existing_subscribers
True;MethodCall;cs+class://Castle/MicroKernel/Handlers/HandlerException;cs+class://System/Exception;Message;cs+class://CastleTests/Facilities/Synchronize/SynchronizeViaAttributeTestCase/Component_depending_on_named_and_typed_context_works_corrently_if_both_available
True;MethodCall;cs+class://Castle/MicroKernel/Handlers/HandlerException;cs+class://System/Exception;Message;cs+class://CastleTests/Facilities/Synchronize/SynchronizeViaAttributeTestCase/Component_depending_on_unregistered_context_via_name_throws
True;MethodCall;cs+class://Castle/MicroKernel/Handlers/HandlerException;cs+class://System/Exception;Message;cs+class://CastleTests/Facilities/Synchronize/SynchronizeViaAttributeTestCase/Component_depending_on_unregistered_context_via_type_throws
True;MethodCall;cs+class://Castle/MicroKernel/Handlers/HandlerException;cs+class://System/Exception;Message;cs+class://CastleTests/GenericImplementationWithGreaterArityThanServiceTestCase/Null_strategy_is_ignored
True;MethodCall;cs+class://Castle/MicroKernel/Handlers/HandlerException;cs+class://System/Exception;Message;cs+class://CastleTests/GenericImplementationWithGreaterArityThanServiceTestCase/Throws_helpful_message_when_generic_matching_strategy_returns_null
True;MethodCall;cs+class://Castle/MicroKernel/Handlers/HandlerException;cs+class://System/Exception;Message;cs+class://CastleTests/GenericImplementationWithGreaterArityThanServiceTestCase/Throws_helpful_message_when_generic_matching_strategy_returns_too_few_types
True;MethodCall;cs+class://Castle/MicroKernel/Handlers/HandlerException;cs+class://System/Exception;Message;cs+class://CastleTests/Proxies/InterceptorDependenciesTestCase/Missing_interceptor_by_name_throws_corrent_exception
True;MethodCall;cs+class://Castle/MicroKernel/Handlers/HandlerException;cs+class://System/Exception;Message;cs+class://CastleTests/Proxies/InterceptorDependenciesTestCase/Missing_interceptor_by_type_throws_corrent_exception
True;MethodCall;cs+class://Castle/MicroKernel/Handlers/HandlerException;cs+class://System/Exception;Message;cs+class://CastleTests/Proxies/ComponentProxyRegistrationTestCase/Missing_dependency_on_hook_statically_detected
True;MethodCall;cs+class://Castle/MicroKernel/Handlers/HandlerException;cs+class://System/Exception;Message;cs+class://CastleTests/Proxies/ComponentProxyRegistrationTestCase/Missing_dependency_on_mixin_statically_detected
True;MethodCall;cs+class://Castle/MicroKernel/Handlers/HandlerException;cs+class://System/Exception;Message;cs+class://CastleTests/Proxies/ComponentProxyRegistrationTestCase/Missing_dependency_on_selector_statically_detected
True;MethodCall;cs+class://Castle/MicroKernel/Handlers/HandlerException;cs+class://System/Exception;Message;cs+class://CastleTests/Facilities/Synchronize/SynchronizeFacilityTestCase/RegisterFacility_With_missing_ControlProxyHook_ThrowsConfigurationException
True;MethodCall;cs+class://Castle/MicroKernel/Handlers/HandlerException;cs+class://System/Exception;Message;cs+class://Castle/MicroKernel/Tests/DecoratorsTestCase/Will_give_good_error_message_if_cannot_resolve_service_that_is_likely_decorated
True;MethodCall;cs+class://Castle/MicroKernel/Handlers/HandlerException;cs+class://System/Exception;Message;cs+class://CastleTests/SpecializedResolvers/ArrayResolverTestCase/ArrayResolution_UnresolvableDependencyCausesResolutionFailure
True;MethodCall;cs+class://Castle/MicroKernel/Handlers/HandlerException;cs+class://System/Exception;Message;cs+class://CastleTests/SpecializedResolvers/ArrayResolverTestCase/ArrayResolution_UnresolvableDependencyCausesResolutionFailure_ServiceConstructor
True;MethodCall;cs+class://Castle/MicroKernel/Handlers/HandlerException;cs+class://System/Exception;Message;cs+class://CastleTests/SpecializedResolvers/ArrayResolverTestCase/ArrayResolution_UnresolvableDependencyIsNotIncluded
True;MethodCall;cs+class://Castle/MicroKernel/Handlers/HandlerException;cs+class://System/Exception;Message;cs+class://Castle/MicroKernel/Tests/UnsatisfiedDependenciesTestCase/UnsatisfiedConfigValues
True;MethodCall;cs+class://Castle/MicroKernel/Handlers/HandlerException;cs+class://System/Exception;Message;cs+class://CastleTests/ResolveAllTestCase/Exception_on_generic_constraint_violation_of_dependency_is_propagated_not_ignored
True;MethodCall;cs+class://Castle/MicroKernel/Handlers/HandlerException;cs+class://System/Exception;Message;cs+class://CastleTests/Windsor/Tests/MultiServiceGenericComponentsTestCase/Open_generic_component_with_generic_and_non_generic_service__generic_first_resolve_by_key_Object_throws_friendly_message
True;MethodCall;cs+class://Castle/MicroKernel/Handlers/HandlerException;cs+class://System/Exception;Message;cs+class://CastleTests/Windsor/Tests/MultiServiceGenericComponentsTestCase/Open_generic_component_with_generic_and_non_generic_service__generic_first_resolve_by_key_non_generic_throws_friendly_message
True;MethodCall;cs+class://Castle/MicroKernel/LifecycleConcerns/LateBoundCommissionConcerns;cs+class://Castle/MicroKernel/LifecycleConcerns/LateBoundConcerns[1];AddConcern;cs+class://Castle/MicroKernel/ModelBuilder/Inspectors/LifecycleModelInspector/ProcessLateBoundModel
True;MethodCall;cs+class://Castle/MicroKernel/LifecycleConcerns/LateBoundCommissionConcerns;cs+class://Castle/MicroKernel/LifecycleConcerns/LateBoundConcerns[1];AddConcern;cs+class://Castle/MicroKernel/ModelBuilder/Inspectors/LifecycleModelInspector/ProcessLateBoundModel
True;MethodCall;cs+class://Castle/MicroKernel/LifecycleConcerns/LateBoundCommissionConcerns;cs+class://Castle/MicroKernel/LifecycleConcerns/LateBoundConcerns[1];HasConcerns;cs+class://Castle/MicroKernel/ModelBuilder/Inspectors/LifecycleModelInspector/ProcessLateBoundModel
True;MethodCall;cs+class://Castle/MicroKernel/LifecycleConcerns/LateBoundDecommissionConcerns;cs+class://Castle/MicroKernel/LifecycleConcerns/LateBoundConcerns[1];AddConcern;cs+class://Castle/MicroKernel/ModelBuilder/Inspectors/LifecycleModelInspector/ProcessLateBoundModel
True;MethodCall;cs+class://Castle/Core/ComponentModel;cs+class://Castle/Core/Internal/GraphNode;Dependents;cs+class://Castle/MicroKernel/Burden/AddChild
True;MethodCall;cs+class://Castle/Core/ComponentModel;cs+class://Castle/Core/Internal/GraphNode;AddDependent;cs+class://Castle/MicroKernel/Handlers/AbstractHandler/AddGraphDependency
True;MethodCall;cs+class://Castle/Core/ComponentModel;cs+class://Castle/Core/Internal/GraphNode;Dependents;cs+class://Castle/Windsor/Diagnostics/PotentialLifestyleMismatchesDiagnostic/GetMismatch
True;MethodCall;cs+class://Castle/Core/ComponentModel;cs+class://Castle/Core/Internal/GraphNode;Dependents;cs+class://Castle/Windsor/Diagnostics/PotentialLifestyleMismatchesDiagnostic/GetMismatches
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://Castle/Facilities/TypedFactory/Internal/DelegateFactory/Load
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://Castle/Facilities/TypedFactory/TypedFactoryFacility/RegisterFactory
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Forward;cs+class://Castle/MicroKernel/Registration/Component/For
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Implementation;cs+class://Castle/MicroKernel/Registration/BasedOnDescriptor/ConfigureFor
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];LifestyleCustom;cs+class://Castle/MicroKernel/Registration/BasedOnDescriptor/LifestyleCustom
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];LifestyleCustom;cs+class://Castle/MicroKernel/Registration/BasedOnDescriptor/LifestyleCustom
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];LifestylePerThread;cs+class://Castle/MicroKernel/Registration/BasedOnDescriptor/LifestylePerThread
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];LifestyleScoped;cs+class://Castle/MicroKernel/Registration/BasedOnDescriptor/LifestyleScoped
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];LifestyleScoped;cs+class://Castle/MicroKernel/Registration/BasedOnDescriptor/LifestyleScoped
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];LifestyleScoped;cs+class://Castle/MicroKernel/Registration/BasedOnDescriptor/LifestyleScoped
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];LifestyleBoundTo;cs+class://Castle/MicroKernel/Registration/BasedOnDescriptor/LifestyleBoundTo
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];LifestyleBoundToNearest;cs+class://Castle/MicroKernel/Registration/BasedOnDescriptor/LifestyleBoundToNearest
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];LifestylePerWebRequest;cs+class://Castle/MicroKernel/Registration/BasedOnDescriptor/LifestylePerWebRequest
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];LifestylePooled;cs+class://Castle/MicroKernel/Registration/BasedOnDescriptor/LifestylePooled
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];LifestyleSingleton;cs+class://Castle/MicroKernel/Registration/BasedOnDescriptor/LifestyleSingleton
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];LifestyleTransient;cs+class://Castle/MicroKernel/Registration/BasedOnDescriptor/LifestyleTransient
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://Castle/MicroKernel/Registration/BasedOnDescriptor/TryRegister
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Name;cs+class://Castle/MicroKernel/Registration/BasedOnDescriptor/TryRegister
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://Castle/MicroKernel/Registration/BasedOnDescriptor/TryRegister
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];RegisterOptionally;cs+class://Castle/MicroKernel/Registration/BasedOnDescriptor/TryRegister
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://Castle/MicroKernel/Resolvers/LazyOfTComponentLoader/Load
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://Castle/Windsor/Installer/DefaultComponentInstaller/SetUpComponents
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];LifestyleTransient;cs+class://Castle/CompositePatternTestCase/Can_resolve_composite_based_solely_on_conventions
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Implementation;cs+class://CastleTests/ConventionRegistrationConfigureTestCase/ConfigureIf_can_be_applied_multiple_times
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://CastleTests/ConventionRegistrationConfigureTestCase/ConfigureIf_can_be_applied_multiple_times
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Implementation;cs+class://CastleTests/ConventionRegistrationConfigureTestCase/ConfigureIf_can_be_applied_multiple_times
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://CastleTests/ConventionRegistrationConfigureTestCase/ConfigureIf_can_be_applied_multiple_times
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Implementation;cs+class://CastleTests/ConventionRegistrationConfigureTestCase/ConfigureIf_configures_all_matching_components
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Implementation;cs+class://CastleTests/ConventionRegistrationConfigureTestCase/ConfigureIf_configures_all_matching_components
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://CastleTests/ConventionRegistrationConfigureTestCase/ConfigureIf_configures_all_matching_components
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Implementation;cs+class://CastleTests/ConventionRegistrationConfigureTestCase/ConfigureIf_configures_matching_components
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://CastleTests/ConventionRegistrationConfigureTestCase/ConfigureIf_configures_matching_components
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Implementation;cs+class://CastleTests/ConventionRegistrationConfigureTestCase/ConfigureIf_configures_matching_components_and_alternative_configuration_configures_the_rest
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://CastleTests/ConventionRegistrationConfigureTestCase/ConfigureIf_configures_matching_components_and_alternative_configuration_configures_the_rest
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://CastleTests/ConventionRegistrationConfigureTestCase/ConfigureIf_configures_matching_components_and_alternative_configuration_configures_the_rest
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://CastleTests/GenericResolutionDeadlockTestCase/No_deadlock_upon_resolving_complex_generic_types_on_multiple_threads
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://CastleTests/HelpfulExceptionsOnResolveTestCase/No_resolvable_constructor_open_generic_component
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://CastleTests/GenericServiceStrategyTestCase/NOT_supports_returns_false_for_HasComponent
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://CastleTests/GenericServiceStrategyTestCase/NOT_supports_returns_null_for_GetHandler
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://CastleTests/GenericServiceStrategyTestCase/NOT_supports_returns_zero_for_GetAssignableHandlers
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://CastleTests/GenericServiceStrategyTestCase/NOT_supports_returns_zero_for_GetHandlers
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://CastleTests/GenericServiceStrategyTestCase/NOT_supports_throws_ComponentNotFoundException_when_resolving
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://CastleTests/Diagnostics/AllComponentsDiagnosticTestCase/Shows_also_components_from_parent_container
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://CastleTests/Diagnostics/AllComponentsDiagnosticTestCase/Shows_also_components_from_parent_container
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://CastleTests/Diagnostics/AllComponentsDiagnosticTestCase/Works_with_multiple_handlers_for_given_type
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://CastleTests/Diagnostics/AllComponentsDiagnosticTestCase/Works_with_multiple_handlers_for_given_type
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ExtendedProperties;cs+class://CastleTests/GenericImplementationWithGreaterArityThanServiceTestCase/Can_create_component_with_simple_double_generic_impl_for_multi_class_registration
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://CastleTests/GenericImplementationWithGreaterArityThanServiceTestCase/Can_create_component_with_simple_double_generic_impl_for_single_generic_service
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://CastleTests/GenericImplementationWithGreaterArityThanServiceTestCase/Can_create_component_with_simple_double_generic_impl_for_single_generic_service_via_ImplementedBy
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://CastleTests/GenericImplementationWithGreaterArityThanServiceTestCase/Null_strategy_is_ignored
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://CastleTests/GenericImplementationWithGreaterArityThanServiceTestCase/Throws_helpful_message_when_generic_matching_strategy_returns_null
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://CastleTests/GenericImplementationWithGreaterArityThanServiceTestCase/Throws_helpful_message_when_generic_matching_strategy_returns_too_few_types
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://CastleTests/GenericImplementationWithGreaterArityThanServiceTestCase/Throws_helpful_message_when_generic_matching_strategy_returns_types_that_wont_work_with_the_type
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];IsFallback;cs+class://CastleTests/IsFallbackTestCase/Can_make_a_component_fallback_via_AllTypes_1
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];IsFallback;cs+class://CastleTests/IsFallbackTestCase/Can_make_a_component_fallback_via_AllTypes_2
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];LifeStyle;cs+class://CastleTests/LazyComponentsTestCase/Can_provide_lazy_as_dependency
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];LifeStyle;cs+class://Castle/Windsor/Tests/Lifecycle/DisposeTestCase/Disposable_singleton_dependency_of_transient_open_generic_is_disposed
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];LifeStyle;cs+class://Castle/Windsor/Tests/Lifecycle/DisposeTestCase/Disposable_transient_generic_open_disposed
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];OnCreate;cs+class://CastleTests/Lifecycle/LifecycleActionTestCase/Can_apply_OnCreate_to_open_generic_components
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];LifestyleTransient;cs+class://CastleTests/Lifecycle/LifecycleActionTestCase/Can_apply_OnDestroy_to_open_generic_components
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://CastleTests/LifestyleTests/TestForTypedFactories
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://Castle/Facilities/Logging/Tests/ConsoleFacilityTestCase/SimpleTest
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://Castle/Facilities/Logging/Tests/ExtendedLog4NetFacilityTestCase/SimpleTest
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://Castle/Facilities/Logging/Tests/ExtendedLog4NetFacilityTestCase/SimpleTest
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://Castle/Facilities/Logging/Tests/ExtendedNLogFacilityTests/SimpleTest
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://Castle/Facilities/Logging/Tests/ExtendedNLogFacilityTests/SimpleTest
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://Castle/Facilities/Logging/Tests/ExtendedNLogFacilityTests/ContextTest
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://Castle/Facilities/Logging/Tests/Log4NetFacilityLognameOverrideTests/OverrideTest
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://Castle/Facilities/Logging/Tests/Log4NetFacilityTests/SimpleTest
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://Castle/Facilities/Logging/Tests/NLogFacilityTests/SimpleTest
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://Castle/Facilities/Logging/Tests/NullFacilityTest/SimpleTest
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://Castle/Facilities/Logging/Tests/TraceFacilityTest/SimpleTest
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];IsDefault;cs+class://CastleTests/IsDefaultTestCase/Can_make_a_component_default_via_AllTypes_1
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];IsDefault;cs+class://CastleTests/IsDefaultTestCase/Can_make_a_component_default_via_AllTypes_2
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];DependsOn;cs+class://CastleTests/PropertyDependenciesTestCase/Can_opt_out_of_setting_properties_open_generic_via_enum
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];DependsOn;cs+class://CastleTests/PropertyDependenciesTestCase/Can_opt_out_of_setting_properties_open_generic_via_predicate
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Properties;cs+class://CastleTests/PropertyDependenciesTestCase/Can_require_setting_properties_open_generic_via_enum
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];PropertiesRequire;cs+class://CastleTests/PropertyDependenciesTestCase/Can_require_setting_properties_open_generic_via_predicate
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://CastleTests/RegistrationWithAttributeTestCase/Attribute_key_can_be_overwritten
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://Castle/MicroKernel/Tests/Configuration/ConfigurationTestCase/ComplexConfigurationParameter
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://Castle/MicroKernel/Tests/Configuration/ConfigurationTestCase/ConstructorWithArrayParameter
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://Castle/MicroKernel/Tests/Configuration/ConfigurationTestCase/ConstructorWithListParameterAndCustomType
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://Castle/MicroKernel/Tests/Configuration/ConfigurationTestCase/ConstructorWithListParameterAndCustomType
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://Castle/MicroKernel/Tests/Configuration/ConfigurationTestCase/ConstructorWithListParameterAndCustomType
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://Castle/MicroKernel/Tests/Configuration/ConfigurationTestCase/CustomLifestyleManager
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://Castle/MicroKernel/Tests/Configuration/ConfigurationTestCase/ServiceOverride
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://Castle/MicroKernel/Tests/Configuration/ConfigurationTestCase/ServiceOverride
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://Castle/MicroKernel/Tests/Configuration/ConfigurationTestCase/ServiceOverride
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://Castle/MicroKernel/Tests/Configuration/ConfigurationTestCase/ServiceOverrideUsingProperties
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://Castle/MicroKernel/Tests/Configuration/ConfigurationTestCase/ServiceOverrideUsingProperties
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://Castle/MicroKernel/Tests/Configuration/ConfigurationTestCase/ServiceOverrideUsingProperties
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];LifeStyle;cs+class://CastleTests/Facilities/TypedFactory/TypedFactoryDelegatesTestCase/Can_resolve_delegate_of_generic
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];LifeStyle;cs+class://CastleTests/Facilities/TypedFactory/TypedFactoryDelegatesTestCase/Can_resolve_generic_component_depending_on_delegate_of_generic
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];LifeStyle;cs+class://CastleTests/Facilities/TypedFactory/TypedFactoryDelegatesTestCase/Can_resolve_generic_component_depending_on_delegate_of_generic
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://CastleTests/Facilities/TypedFactory/TypedFactoryDelegatesTestCase/Does_not_duplicate_arguments_matching_delegate_parameters
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://CastleTests/Facilities/TypedFactory/TypedFactoryDelegatesTestCase/Factory_parameters_are_used_in_order_first_ctor_then_properties
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://CastleTests/Facilities/TypedFactory/TypedFactoryDelegatesTestCase/Factory_parameters_are_used_in_order_first_ctor_then_properties
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://CastleTests/Facilities/TypedFactory/TypedFactoryDelegatesTestCase/Factory_parameters_are_used_in_order_first_ctor_then_properties
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://CastleTests/Facilities/TypedFactory/TypedFactoryDelegatesTestCase/Factory_pulls_unspecified_dependencies_from_container
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://CastleTests/Facilities/TypedFactory/TypedFactoryDelegatesTestCase/Factory_pulls_unspecified_dependencies_from_container
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://CastleTests/Facilities/TypedFactory/TypedFactoryDelegatesTestCase/Factory_pulls_unspecified_dependencies_from_container
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://CastleTests/Registration/ServiceOverridesTestCase/ServiceOverrides_works_via_DependsOn_typed_key_Named_value_on_open_generic_type
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Interceptors;cs+class://CastleTests/Registration/TypesTestCase/Interface_registered_with_no_implementation_with_interceptor_can_be_used
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Forward;cs+class://Castle/MicroKernel/Tests/SpecializedResolvers/CollectionResolverTestCase/Composite_service_can_be_resolved_without_triggering_circular_dependency_detection_fuse
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://CastleTests/Facilities/Synchronize/DispatcherObjectTestCase/SetUp
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://CastleTests/Facilities/Synchronize/SynchronizeFacilityTestCase/BuildContainer
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://CastleTests/TypedParametersTestCase/Typed_arguments_work_for_open_generic_ServiceOverrides_closed_service
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://CastleTests/TypedParametersTestCase/Typed_arguments_work_for_open_generic_ServiceOverrides_closed_service
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];DependsOn;cs+class://CastleTests/TypedParametersTestCase/Typed_arguments_work_for_open_generic_ServiceOverrides_closed_service
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://CastleTests/TypedParametersTestCase/Typed_arguments_work_for_open_generic_ServiceOverrides_closed_service_preferred_over_open_service
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://CastleTests/TypedParametersTestCase/Typed_arguments_work_for_open_generic_ServiceOverrides_closed_service_preferred_over_open_service
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://CastleTests/TypedParametersTestCase/Typed_arguments_work_for_open_generic_ServiceOverrides_closed_service_preferred_over_open_service
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];DependsOn;cs+class://CastleTests/TypedParametersTestCase/Typed_arguments_work_for_open_generic_ServiceOverrides_closed_service_preferred_over_open_service
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://CastleTests/TypedParametersTestCase/Typed_arguments_work_for_open_generic_ServiceOverrides_open_service
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://CastleTests/TypedParametersTestCase/Typed_arguments_work_for_open_generic_ServiceOverrides_open_service
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];DependsOn;cs+class://CastleTests/TypedParametersTestCase/Typed_arguments_work_for_open_generic_ServiceOverrides_open_service
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://Castle/MicroKernel/Tests/Bugs/IoC_95/AddingComponentToRootKernelWhenChildKernelHasStartableFacility
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://Castle/MicroKernel/Tests/Bugs/IoC_141/Can_resolve_open_generic_service_with_closed_generic_parameter
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://Castle/MicroKernel/Tests/Bugs/IoC_141/Can_resolve_open_generic_service_with_closed_generic_parameter
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://Castle/MicroKernel/Tests/Bugs/IoC_141/Can_resolve_service_with_open_generic_parameter_with_closed_generic_parameter
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://Castle/MicroKernel/Tests/Bugs/IoC_141/Can_resolve_service_with_open_generic_parameter_with_closed_generic_parameter
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://Castle/MicroKernel/Tests/Bugs/IoC_141/Can_resolve_service_with_open_generic_parameter_with_closed_generic_parameter
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Instance;cs+class://CastleTests/DependencyResolvingTestCase/ValueType_can_NOT_be_a_service
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://CastleTests/KernelEvents_DependencyResolving_TestCase/ResolvingConcreteClassThroughConstructor
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://CastleTests/KernelEvents_DependencyResolving_TestCase/ResolvingConcreteClassThroughConstructor
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://CastleTests/KernelEvents_DependencyResolving_TestCase/ResolvingConcreteClassThroughConstructor
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://CastleTests/KernelEvents_DependencyResolving_TestCase/ResolvingPrimitivesThroughProperties
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://CastleTests/Facilities/FactorySupport/FactorySupportTestCase/KernelDoesNotTryToWireComponentsPropertiesWithFactoryConfiguration
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://CastleTests/Facilities/FactorySupport/FactorySupportTestCase/Late_bound_factory_properly_applies_lifetime_concerns
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://CastleTests/Facilities/FactorySupport/FactorySupportTestCase/AddComponent
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://Castle/MicroKernel/Tests/Registration/DynamicParametersTestCase/Can_release_generics_with_dynamic_parameters
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];DependsOn;cs+class://CastleTests/TypedServiceOverridesAndDependenciesTestCase/Picks_component_implemented_by_that_type_open_generic
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://CastleTests/TypedServiceOverridesAndDependenciesTestCase/Picks_component_implemented_by_that_type_open_generic
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://CastleTests/TypedServiceOverridesAndDependenciesTestCase/Picks_component_implemented_by_that_type_open_generic
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];DependsOn;cs+class://CastleTests/TypedServiceOverridesAndDependenciesTestCase/Picks_component_implemented_by_that_type_open_generic_if_matching_closed_registered
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://CastleTests/TypedServiceOverridesAndDependenciesTestCase/Picks_component_implemented_by_that_type_open_generic_if_matching_closed_registered
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://CastleTests/TypedServiceOverridesAndDependenciesTestCase/Picks_component_implemented_by_that_type_open_generic_if_matching_closed_registered
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://CastleTests/GenericMultipleServicesComponentResolutionTestCase/AfterContainerCreated
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://CastleTests/GenericMultipleServicesComponentResolutionTestCase/Can_resolve_generic_component_exposing_interface_and_class_service
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Forward;cs+class://CastleTests/GenericMultipleServicesComponentResolutionTestCase/Can_resolve_generic_component_exposing_interface_and_class_service_with_non_generic_base
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://CastleTests/GenericMultipleServicesComponentResolutionTestCase/Can_resolve_generic_component_exposing_two_unrelated_implemented_services
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://CastleTests/GenericMultipleServicesComponentResolutionTestCase/Can_resolve_generic_component_exposing_two_unrelated_implemented_services_each_closed_over_different_generic_argument
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://Castle/Windsor/Tests/Facilities/Startable/StartableFacilityTestCase/TestInterfaceBasedStartable
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://Castle/Windsor/Tests/Facilities/Startable/StartableFacilityTestCase/TestStartableChainWithGenerics
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://Castle/Windsor/Tests/Facilities/Startable/StartableFacilityTestCase/TestStartableChainWithGenerics
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://Castle/Windsor/Tests/Facilities/Startable/StartableFacilityTestCase/TestStartableChainWithGenerics
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://Castle/MicroKernel/Tests/GraphTestCase/TopologicalSortOnComponents
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://Castle/MicroKernel/Tests/GraphTestCase/TopologicalSortOnComponents
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://Castle/MicroKernel/Tests/GraphTestCase/TopologicalSortOnComponents
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://Castle/MicroKernel/Tests/SlowLoader/Load
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://Castle/MicroKernel/Tests/LoaderForDefaultImplementations/Load
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];DependsOn;cs+class://Castle/MicroKernel/Tests/LoaderUsingDependency/Load
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];LifeStyle;cs+class://CastleTests/Lifecycle/DecomissioningResponsibilitiesTestCase/GenericTransientComponentsAreReleasedInChain
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];LifeStyle;cs+class://CastleTests/Lifecycle/DecomissioningResponsibilitiesTestCase/GenericTransientComponentsAreReleasedInChain
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://CastleTests/Lifecycle/DecomissioningResponsibilitiesTestCase/SingletonReferencedComponentIsNotDisposed
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://CastleTests/Lifecycle/DecomissioningResponsibilitiesTestCase/SingletonReferencedComponentIsNotDisposed
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://CastleTests/Lifecycle/DecomissioningResponsibilitiesTestCase/SingletonReferencedComponentIsNotDisposed
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://CastleTests/Lifecycle/DecomissioningResponsibilitiesTestCase/WhenRootComponentIsNotDisposableButDependenciesAre_DependenciesShouldBeDisposed
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://CastleTests/Lifecycle/DecomissioningResponsibilitiesTestCase/WhenRootComponentIsNotDisposableButDependenciesAre_DependenciesShouldBeDisposed
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://CastleTests/Lifecycle/DecomissioningResponsibilitiesTestCase/WhenRootComponentIsNotDisposableButDependenciesAre_DependenciesShouldBeDisposed
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://CastleTests/Lifecycle/DecomissioningResponsibilitiesTestCase/WhenRootComponentIsNotDisposableButThirdLevelDependenciesAre_DependenciesShouldBeDisposed
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://CastleTests/Lifecycle/DecomissioningResponsibilitiesTestCase/WhenRootComponentIsNotDisposableButThirdLevelDependenciesAre_DependenciesShouldBeDisposed
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://CastleTests/Lifecycle/DecomissioningResponsibilitiesTestCase/WhenRootComponentIsNotDisposableButThirdLevelDependenciesAre_DependenciesShouldBeDisposed
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://CastleTests/Lifecycle/DecomissioningResponsibilitiesTestCase/WhenRootComponentIsNotDisposableButThirdLevelDependenciesAre_DependenciesShouldBeDisposed
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://CastleTests/Lifestyle/LifestyleManagerTestCase/TestHandlersLifestyle
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://CastleTests/Lifestyle/LifestyleManagerTestCase/LifestyleSetThroughAttribute
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://CastleTests/Lifestyle/LifestyleManagerTestCase/LifestyleSetThroughAttribute
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://CastleTests/Lifestyle/LifestyleManagerTestCase/LifestyleSetThroughAttribute
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://CastleTests/Lifestyle/LifestyleManagerTestCase/LifestyleSetThroughAttribute
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://CastleTests/Lifestyle/LifestyleManagerTestCase/LifestyleSetThroughExternalConfig
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://CastleTests/Lifestyle/LifestyleManagerTestCase/LifestyleSetThroughExternalConfig
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://CastleTests/Lifestyle/LifestyleManagerTestCase/LifestyleSetThroughExternalConfig
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://CastleTests/Lifestyle/LifestyleManagerTestCase/LifestyleSetThroughExternalConfig
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://CastleTests/Lifestyle/LifestyleManagerTestCase/Lifestyle_from_configuration_overwrites_attribute
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://CastleTests/MicroKernelTestCase/AddClassComponentWithNoInterface
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://CastleTests/MicroKernelTestCase/AddClassThatHasTwoParametersOfSameTypeAndNoOverloads
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://Castle/MicroKernel/Tests/Pools/MultithreadedPooledTestCase/Multithreaded
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://Castle/MicroKernel/Tests/Registration/ComponentRegistrationTestCase/AddGenericComponent_WithParameters
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];LifeStyle;cs+class://CastleTests/Registration/AllTypesTestCase/RegisterAssemblyTypes_WithConfiguration_RegisteredInContainer
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Implementation;cs+class://CastleTests/Registration/AllTypesTestCase/RegisterAssemblyTypes_WithConfiguration_RegisteredInContainer
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];LifeStyle;cs+class://CastleTests/Registration/AllTypesTestCase/RegisterAssemblyTypes_WithConfigurationBasedOnImplementation_RegisteredInContainer
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Implementation;cs+class://CastleTests/Registration/AllTypesTestCase/RegisterAssemblyTypes_WithConfigurationBasedOnImplementation_RegisteredInContainer
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];DependsOn;cs+class://CastleTests/Registration/AllTypesTestCase/RegisterAssemblyTypes_WithConfigurationBasedOnImplementation_RegisteredInContainer
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];DependsOn;cs+class://CastleTests/Registration/AllTypesTestCase/RegisterAssemblyTypes_WithConfigurationBasedOnImplementation_RegisteredInContainer
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];LifeStyle;cs+class://CastleTests/Registration/AllTypesTestCase/RegisterAssemblyTypes_WithLinqConfiguration_RegisteredInContainer
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Implementation;cs+class://CastleTests/Registration/AllTypesTestCase/RegisterAssemblyTypes_WithLinqConfiguration_RegisteredInContainer
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];LifestyleTransient;cs+class://CastleTests/Registration/AllTypesTestCase/RegisterAssemblyTypes_WithLinqConfigurationReturningValue_RegisteredInContainer
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://Castle/MicroKernel/Tests/SerializationTestCase/KernelSerialization
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://Castle/MicroKernel/Tests/SerializationTestCase/RemoteAccess
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://Castle/MicroKernel/Tests/SerializationTestCase/RemoteAccessToComponentGraph
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Forward;cs+class://CastleTests/SpecializedResolvers/ArrayResolverTestCase/Composite_service_can_be_resolved_without_triggering_circular_dependency_detection_fuse
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://CastleTests/SubContainers/SubContainersTestCase/ChildDependenciesIsSatisfiedEvenWhenComponentTakesLongToBeAddedToParentContainer
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://CastleTests/SubContainers/SubContainersTestCase/ChildDependenciesIsSatisfiedEvenWhenComponentTakesLongToBeAddedToParentContainer
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://CastleTests/SubContainers/SubContainersTestCase/ChildDependenciesSatisfiedAmongContainers
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://CastleTests/SubContainers/SubContainersTestCase/ChildDependenciesSatisfiedAmongContainers
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://CastleTests/SubContainers/SubContainersTestCase/ChildDependenciesSatisfiedAmongContainers
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://CastleTests/SubContainers/SubContainersTestCase/ChildKernelFindsAndCreateParentComponent
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://CastleTests/SubContainers/SubContainersTestCase/DependenciesSatisfiedAmongContainers
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://CastleTests/SubContainers/SubContainersTestCase/DependenciesSatisfiedAmongContainers
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://CastleTests/SubContainers/SubContainersTestCase/DependenciesSatisfiedAmongContainers
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://CastleTests/SubContainers/SubContainersTestCase/DependenciesSatisfiedAmongContainersUsingEvents
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://CastleTests/SubContainers/SubContainersTestCase/DependenciesSatisfiedAmongContainersUsingEvents
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://CastleTests/SubContainers/SubContainersTestCase/DependenciesSatisfiedAmongContainersUsingEvents
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://CastleTests/SubContainers/SubContainersTestCase/ParentKernelFindsAndCreateChildComponent
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://CastleTests/SubContainers/SubContainersTestCase/Singleton_withNonSingletonDependencies_doesNotReResolveDependencies
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://CastleTests/SubContainers/SubContainersTestCase/Singleton_withNonSingletonDependencies_doesNotReResolveDependencies
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://CastleTests/SubContainers/SubContainersTestCase/Singleton_withNonSingletonDependencies_doesNotReResolveDependencies
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://CastleTests/SubContainers/SubContainersTestCase/Singleton_withNonSingletonDependencies_doesNotReResolveDependencies
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://CastleTests/SubContainers/SubContainersTestCase/Do_NOT_UseChildComponentsForParentDependenciesWhenRequestedFromChild
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://CastleTests/SubContainers/SubContainersTestCase/Do_NOT_UseChildComponentsForParentDependenciesWhenRequestedFromChild
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://CastleTests/SubContainers/SubContainersTestCase/Do_NOT_UseChildComponentsForParentDependenciesWhenRequestedFromChild
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://CastleTests/SubContainers/SubContainersTestCase/Do_NOT_UseChildComponentsForParentDependenciesWhenRequestedFromChild
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://Castle/MicroKernel/Tests/TransientMultiConstructorTestCase/TransientMultiConstructorTest
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://Castle/MicroKernel/Tests/TransientMultiConstructorTestCase/TransientMultipleConstructorNonValueTypeTest
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://Castle/MicroKernel/Tests/UnsatisfiedDependenciesTestCase/OverrideIsForcedDependency
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://Castle/MicroKernel/Tests/UnsatisfiedDependenciesTestCase/OverrideIsForcedDependency
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://Castle/MicroKernel/Tests/UnsatisfiedDependenciesTestCase/SatisfiedOverride
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://Castle/MicroKernel/Tests/UnsatisfiedDependenciesTestCase/SatisfiedOverride
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://Castle/MicroKernel/Tests/UnsatisfiedDependenciesTestCase/SatisfiedOverride
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://Castle/MicroKernel/Tests/UnsatisfiedDependenciesTestCase/SatisfiedOverrideRecursive
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://Castle/MicroKernel/Tests/UnsatisfiedDependenciesTestCase/SatisfiedOverrideRecursive
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://Castle/MicroKernel/Tests/UnsatisfiedDependenciesTestCase/SatisfiedOverrideRecursive
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://Castle/MicroKernel/Tests/UnsatisfiedDependenciesTestCase/SatisfiedOverrideRecursive
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://Castle/MicroKernel/Tests/UnsatisfiedDependenciesTestCase/UnsatisfiedConfigValues
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://Castle/MicroKernel/Tests/UnsatisfiedDependenciesTestCase/UnsatisfiedOverride
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://Castle/MicroKernel/Tests/UnsatisfiedDependenciesTestCase/UnsatisfiedOverride
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://Castle/MicroKernel/Tests/UnsatisfiedDependenciesTestCase/UnsatisfiedService
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://Castle/Windsor/Tests/Bugs/IoC_169/IoC_169/BulkRegistrations_WhenRegistrationMatchesNoInstancesOfService_StopsStartableFacilityFromWorking
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://CastleTests/ChildContainerSupportTestCase/AfterContainerCreated
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://CastleTests/ChildContainerSupportTestCase/ResolveAgainstParentContainer
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://CastleTests/ChildContainerSupportTestCase/ResolveAgainstParentContainerWithProperty
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://CastleTests/ChildContainerSupportTestCase/StartWithParentContainer
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://Castle/Windsor/Tests/ConfigureDecoratorsTestCase/ShouldResolveDecoratedComponentFromGrandParent
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://Castle/Windsor/Tests/ConfigureDecoratorsTestCase/ShouldResolveDecoratedComponentFromGrandParent
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://Castle/Windsor/Tests/ConfigureDecoratorsTestCase/ShouldResolveDecoratedComponentFromParent
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://Castle/Windsor/Tests/ConfigureDecoratorsTestCase/ShouldResolveDecoratedComponentFromParent
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://Castle/Windsor/Tests/ConfigureDecoratorsTestCase/ShouldResolveDecoratedComponentFromParent
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://Castle/Windsor/Tests/ContainerProblem2/CausesStackOverflow
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://Castle/Windsor/Tests/ContainerProblem2/CausesStackOverflow
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://Castle/Windsor/Tests/ContainerProblem2/CausesStackOverflow
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://Castle/Windsor/Tests/ContainerProblem2/CausesStackOverflow
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://Castle/Windsor/Tests/ContainerProblem2/CausesStackOverflow
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://CastleTests/Facilities/TypedFactory/TypedFactoryObsoleteApiTestCase/Factory1
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://CastleTests/Facilities/TypedFactory/TypedFactoryObsoleteApiTestCase/Factory1
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://CastleTests/Facilities/TypedFactory/TypedFactoryObsoleteApiTestCase/Factory2
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://CastleTests/Facilities/TypedFactory/TypedFactoryObsoleteApiTestCase/Factory2
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://CastleTests/Facilities/TypedFactory/TypedFactoryObsoleteApiTestCase/Factory3
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://CastleTests/Facilities/TypedFactory/TypedFactoryObsoleteApiTestCase/Factory3
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://CastleTests/Facilities/TypedFactory/TypedFactoryObsoleteApiTestCase/Factory4
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://CastleTests/Facilities/TypedFactory/TypedFactoryObsoleteApiTestCase/Factory4
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];LifestyleTransient;cs+class://CastleTests/Facilities/TypedFactory/TypedFactoryFacilityTake2TestCase/Can_Resolve_by_closed_generic_closed_on_arguments_type_with_custom_selector
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];LifestyleSingleton;cs+class://CastleTests/Facilities/TypedFactory/TypedFactoryFacilityTake2TestCase/Can_resolve_open_generic_components
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];LifestyleSingleton;cs+class://CastleTests/Facilities/TypedFactory/TypedFactoryFacilityTake2TestCase/Can_resolve_open_generic_components
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://CastleTests/Facilities/TypedFactory/TypedFactoryFacilityTake2TestCase/Can_resolve_via_generic_factory_with_generic_method
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Proxy;cs+class://CastleTests/OpenGenericsTestCase/ExtendedProperties_incl_ProxyOptions_are_honored_for_open_generic_types
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://CastleTests/OpenGenericsTestCase/Open_generic_handlers_get_included_when_generic_service_requested
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://CastleTests/OpenGenericsTestCase/Open_generic_multiple_services_favor_closed_service
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://CastleTests/OpenGenericsTestCase/ResolveAll_properly_skips_open_generic_service_with_generic_constraints_that_dont_match
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://CastleTests/OpenGenericsTestCase/ResolveAll_returns_matching_open_generic_service_with_generic_constraints
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://CastleTests/OpenGenericsTestCase/Can_use_open_generic_with_LateBoundComponent_implementing_partial_closure
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];UsingFactoryMethod;cs+class://CastleTests/OpenGenericsTestCase/Can_use_open_generic_with_LateBoundComponent_implementing_partial_closure
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://Castle/Windsor/Tests/ModelInterceptorsSelectorTestCase/TurnProxyOnAndOff_DirectSelection
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://Castle/Windsor/Tests/ModelInterceptorsSelectorTestCase/TurnProxyOnAndOff_SubDependency
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];LifeStyle;cs+class://Castle/Windsor/Tests/ModelInterceptorsSelectorTestCase/TurnProxyOnAndOff_SubDependency
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];LifeStyle;cs+class://Castle/Windsor/Tests/HandlerSelectorsTestCase/SelectUsingBusinessLogic_SubDependency
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];LifeStyle;cs+class://Castle/Windsor/Tests/HandlerSelectorsTestCase/SubDependencyResolverHasHigherPriorityThanHandlerSelector
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://Castle/Windsor/Tests/InterceptorsTestCase/InterfaceProxy
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://Castle/Windsor/Tests/InterceptorsTestCase/InterfaceProxy
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://Castle/Windsor/Tests/InterceptorsTestCase/InterfaceProxyWithLifecycle
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://Castle/Windsor/Tests/InterceptorsTestCase/InterfaceProxyWithLifecycle
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://Castle/Windsor/Tests/InterceptorsTestCase/ClassProxy
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://Castle/Windsor/Tests/InterceptorsTestCase/ClassProxy
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://Castle/Windsor/Tests/InterceptorsTestCase/OnBehalfOfTest
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://Castle/Windsor/Tests/InterceptorsTestCase/OnBehalfOfTest
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Interceptors;cs+class://Castle/Windsor/Tests/InterceptorsTestCase/OpenGenericInterceporIsUsedAsClosedGenericInterceptor
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Interceptors;cs+class://Castle/Windsor/Tests/InterceptorsTestCase/ClosedGenericInterceptor
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://Castle/Windsor/Tests/InterceptorsTestCase/Multithreaded
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://Castle/Windsor/Tests/InterceptorsTestCase/Multithreaded
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://CastleTests/ResolveAllTestCase/Can_use_mutliResolve_with_generic_Specialization
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://CastleTests/ResolveAllTestCase/Can_use_mutliResolve_with_generic_Specialization
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://CastleTests/ResolveAllTestCase/Exception_on_generic_constraint_violation_of_dependency_is_propagated_not_ignored
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://CastleTests/ResolveAllTestCase/Exception_on_generic_constraint_violation_of_dependency_is_propagated_not_ignored
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://Castle/Proxies/FactorySupportTestCase/AddComponent
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://Castle/Windsor/Tests/SmartProxyTestCase/ConcreteClassProxy
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://Castle/Windsor/Tests/SmartProxyTestCase/ConcreteClassProxy
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://Castle/Windsor/Tests/SmartProxyTestCase/InterfaceProxy
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://Castle/Windsor/Tests/SmartProxyTestCase/InterfaceProxy
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://CastleTests/ContainerAndGenericsInCodeTestCase/Can_create_generic_with_ctor_dependency_on_array_of_generics
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://CastleTests/ContainerAndGenericsInCodeTestCase/Can_create_nonGeneric_with_ctor_dependency_on_generic
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://CastleTests/ContainerAndGenericsInCodeTestCase/Can_intercept_open_generic_components
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://CastleTests/ContainerAndGenericsInCodeTestCase/Can_proxy_open_generic_components
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://CastleTests/ContainerAndGenericsInCodeTestCase/Open_generic_as_dependency_does_not_block_resolvability_of_parent
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://CastleTests/ContainerAndGenericsInCodeTestCase/Open_generic_singleton_produces_unique_instances_per_closed_type
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://CastleTests/ContainerAndGenericsInCodeTestCase/Open_generic_trasient_via_attribute_produces_unique_instances
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://CastleTests/ContainerAndGenericsInCodeTestCase/Open_generic_trasient_via_registration_produces_unique_instances
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://CastleTests/ContainerAndGenericsInCodeTestCase/Proxy_for_generic_component_does_not_affect_lifestyle
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://CastleTests/ContainerAndGenericsInCodeTestCase/Proxy_parent_does_not_make_generic_child_a_proxy
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Forward;cs+class://CastleTests/Windsor/Tests/MultiServiceGenericComponentsTestCase/Open_generic_component_with_generic_and_non_generic_service__generic_first_resolve_by_key
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Forward;cs+class://CastleTests/Windsor/Tests/MultiServiceGenericComponentsTestCase/Open_generic_component_with_generic_and_non_generic_service__generic_first_resolve_by_key_Object_throws_friendly_message
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Forward;cs+class://CastleTests/Windsor/Tests/MultiServiceGenericComponentsTestCase/Open_generic_component_with_generic_and_non_generic_service__generic_first_resolve_by_key_non_generic_throws_friendly_message
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Forward;cs+class://CastleTests/Windsor/Tests/MultiServiceGenericComponentsTestCase/Open_generic_component_with_generic_and_non_generic_service__generic_first_resolve_by_type
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];AddDescriptor;cs+class://Castle/Facilities/EventWiring/EventWiringRegistrationExtensions/PublishEvent
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];AddDescriptor;cs+class://Castle/Facilities/EventWiring/EventWiringRegistrationExtensions/PublishEvent
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://Castle/Facilities/FactorySupport/FactorySupportFacility/EnsureFactoryIsRegistered
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://Castle/Facilities/WcfIntegration/WcfClientComponentLoader/Load
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];DependsOn;cs+class://Castle/Facilities/WcfIntegration/WcfClientDescriptor/Register
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Name;cs+class://Castle/Facilities/WcfIntegration/WcfClientDescriptor/Register
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Named;cs+class://Castle/Facilities/WcfIntegration/WcfClientDescriptor/Register
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];Name;cs+class://Castle/Facilities/WcfIntegration/WcfClientDescriptor/Register
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://Castle/Facilities/WcfIntegration/WcfClientExtension/Init
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://Castle/Facilities/WcfIntegration/WcfClientExtension/RegisterChannelBuilder
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://Castle/Facilities/WcfIntegration/WcfServiceExtension/RegisterServiceHostBuilder
True;MethodCall;cs+class://Castle/MicroKernel/Registration/ComponentRegistration;cs+class://Castle/MicroKernel/Registration/ComponentRegistration[1];ImplementedBy;cs+class://Castle/Facilities/WcfIntegration/Tests/ServiceHostFixture/CanOpenServiceHostsWithServicesDependingOnOpenGenerics
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;BasedOn;cs+class://Castle/MicroKernel/Registration/AllTypesOf/FromAssembly
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;BasedOn;cs+class://Castle/MicroKernel/Registration/AllTypesOf/FromAssemblyNamed
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;BasedOn;cs+class://Castle/CompositePatternTestCase/Can_resolve_composite_based_solely_on_conventions
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;BasedOn;cs+class://CastleTests/ConventionRegistrationConfigureTestCase/ConfigureIf_can_be_applied_multiple_times
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;BasedOn;cs+class://CastleTests/ConventionRegistrationConfigureTestCase/ConfigureIf_configures_all_matching_components
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;BasedOn;cs+class://CastleTests/ConventionRegistrationConfigureTestCase/ConfigureIf_configures_matching_components
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;BasedOn;cs+class://CastleTests/ConventionRegistrationConfigureTestCase/ConfigureIf_configures_matching_components_and_alternative_configuration_configures_the_rest
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;BasedOn;cs+class://CastleTests/GenericImplementationWithGreaterArityThanServiceTestCase/Can_create_component_with_simple_double_generic_impl_for_multi_class_registration
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;BasedOn;cs+class://CastleTests/Lifestyle/LifestyleApiTestCase/LifestyleMany
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;Where;cs+class://CastleTests/Lifestyle/ScopedLifetyleCustomScopesTestCase/Can_use_custom_scope_accessor_with_scoped_lifestyle_multiple
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;BasedOn;cs+class://CastleTests/IsDefaultTestCase/Can_make_a_component_default_via_AllTypes_1
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;BasedOn;cs+class://CastleTests/IsDefaultTestCase/Can_make_a_component_default_via_AllTypes_2
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;Where;cs+class://CastleTests/RegistrationWithAttributeTestCase/Attribute_key_can_be_overwritten
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;Where;cs+class://CastleTests/RegistrationWithAttributeTestCase/Attribute_lifestyle_can_be_overwritten
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;Where;cs+class://CastleTests/RegistrationWithAttributeTestCase/Attribute_registers_key_properly
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;Where;cs+class://CastleTests/RegistrationWithAttributeTestCase/Attribute_registers_type_and_name
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;Where;cs+class://CastleTests/RegistrationWithAttributeTestCase/Attribute_registers_type_properly
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;Where;cs+class://CastleTests/RegistrationWithAttributeTestCase/Attribute_sets_lifestyle
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;Where;cs+class://CastleTests/RegistrationWithAttributeTestCase/Attribute_type_can_be_overwritten
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;Where;cs+class://CastleTests/RegistrationWithAttributeTestCase/Can_filter_types_based_on_attribute
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;Where;cs+class://CastleTests/RegistrationWithAttributeTestCase/Can_filter_types_based_on_custom_attribute
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;Where;cs+class://CastleTests/RegistrationWithAttributeTestCase/Can_filter_types_based_on_custom_attribute_properties
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;Pick;cs+class://Castle/MicroKernel/Tests/Configuration/ConfigurationTestCase/Can_properly_populate_array_dependency_from_xml_config_when_registering_by_convention
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;BasedOn;cs+class://CastleTests/Facilities/EventWiring/FluentRegistrationTestCase/Can_publish_events_via_AllTypes
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;BasedOn;cs+class://CastleTests/Facilities/EventWiring/FluentRegistrationTestCase/Can_publish_events_via_AllTypes_weakly_typed
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;Where;cs+class://CastleTests/Registration/ComponentRegistrationByNamespaceTestCase/Registreting_by_namespace_no_subnamespaces
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;InSameNamespaceAs;cs+class://CastleTests/Registration/ComponentRegistrationByNamespaceTestCase/Registreting_by_namespace_no_subnamespaces_by_type_generic_short
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;InSameNamespaceAs;cs+class://CastleTests/Registration/ComponentRegistrationByNamespaceTestCase/Registreting_by_namespace_no_subnamespaces_by_type_short
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;InNamespace;cs+class://CastleTests/Registration/ComponentRegistrationByNamespaceTestCase/Registreting_by_namespace_no_subnamespaces_short
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;Where;cs+class://CastleTests/Registration/ComponentRegistrationByNamespaceTestCase/Registreting_by_namespace_with_subnamespaces
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;InSameNamespaceAs;cs+class://CastleTests/Registration/ComponentRegistrationByNamespaceTestCase/Registreting_by_namespace_with_subnamespaces_by_type_generic_short
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;InSameNamespaceAs;cs+class://CastleTests/Registration/ComponentRegistrationByNamespaceTestCase/Registreting_by_namespace_with_subnamespaces_by_type_short
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;Where;cs+class://CastleTests/Registration/ComponentRegistrationByNamespaceTestCase/Registreting_by_namespace_with_subnamespaces_properly_filters_out_namespaces_that_have_common_prefix
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;InNamespace;cs+class://CastleTests/Registration/ComponentRegistrationByNamespaceTestCase/Registreting_by_namespace_with_subnamespaces_short
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;BasedOn;cs+class://CastleTests/Registration/TypesTestCase/Based_on_interface_types_registered
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;BasedOn;cs+class://CastleTests/Registration/TypesTestCase/Interface_registered_with_no_implementation_with_interceptor_can_be_used
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;Where;cs+class://CastleTests/Registration/WithServiceTestCase/AllInterfaces_uses_all_implemented_interfaces
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;Where;cs+class://CastleTests/Registration/WithServiceTestCase/AllInterfaces_uses_single_interface
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;Where;cs+class://CastleTests/Registration/WithServiceTestCase/AllTypes_not_specified_uses_service_itself
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;BasedOn;cs+class://CastleTests/Registration/WithServiceTestCase/Base_uses_both_types_from_BasedOn_if_implemented_generically_twice
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;BasedOn;cs+class://CastleTests/Registration/WithServiceTestCase/Base_uses_type_from_BasedOn
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;Where;cs+class://CastleTests/Registration/WithServiceTestCase/Can_cumulate_services
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;Where;cs+class://CastleTests/Registration/WithServiceTestCase/Can_cumulate_services_without_duplication
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;Where;cs+class://CastleTests/Registration/WithServiceTestCase/DefaultInterface_can_match_multiple_types
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;Where;cs+class://CastleTests/Registration/WithServiceTestCase/DefaultInterface_ignores_not_matched_interfaces
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;Where;cs+class://CastleTests/Registration/WithServiceTestCase/DefaultInterface_ignores_on_no_interface_matched
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;Where;cs+class://CastleTests/Registration/WithServiceTestCase/DefaultInterface_matches_by_type_name
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;Where;cs+class://CastleTests/Registration/WithServiceTestCase/FirstInterface_uses_single_interface
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;BasedOn;cs+class://CastleTests/Registration/WithServiceTestCase/FromInterface_uses_subtypes_of_type_from_BasedOn_but_not_the_type_itself
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;Where;cs+class://CastleTests/Registration/WithServiceTestCase/Self_uses_service_itself
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;BasedOn;cs+class://Castle/MicroKernel/Tests/SpecializedResolvers/CollectionResolverTestCase/Composite_service_can_be_resolved_without_triggering_circular_dependency_detection_fuse
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;Where;cs+class://Castle/Windsor/Tests/Facilities/Startable/StartableFacilityTestCase/Starts_component_without_start_method_AllTypes
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;BasedOn;cs+class://CastleTests/Registration/AllTypesTestCase/RegisterAssemblyTypes_BasedOn_RegisteredInContainer
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;BasedOn;cs+class://CastleTests/Registration/AllTypesTestCase/RegisterAssemblyTypesFromThisAssembly_BasedOn_RegisteredInContainer
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;BasedOn;cs+class://CastleTests/Registration/AllTypesTestCase/RegisterDirectoryAssemblyTypes_BasedOn_RegisteredInContainer
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;BasedOn;cs+class://CastleTests/Registration/AllTypesTestCase/RegisterAssemblyTypes_NoService_RegisteredInContainer
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;BasedOn;cs+class://CastleTests/Registration/AllTypesTestCase/RegisterAssemblyTypes_FirstInterfaceService_RegisteredInContainer
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;BasedOn;cs+class://CastleTests/Registration/AllTypesTestCase/RegisterAssemblyTypes_LookupInterfaceService_RegisteredInContainer
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;BasedOn;cs+class://CastleTests/Registration/AllTypesTestCase/RegisterAssemblyTypes_DefaultService_RegisteredInContainer
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;BasedOn;cs+class://CastleTests/Registration/AllTypesTestCase/RegisterAssemblyTypes_WithConfiguration_RegisteredInContainer
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;BasedOn;cs+class://CastleTests/Registration/AllTypesTestCase/RegisterAssemblyTypes_WithConfigurationBasedOnImplementation_RegisteredInContainer
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;BasedOn;cs+class://CastleTests/Registration/AllTypesTestCase/RegisterGenericTypes_WithGenericDefinition_RegisteredInContainer
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;BasedOn;cs+class://CastleTests/Registration/AllTypesTestCase/RegisterAssemblyTypes_ClosedGenericTypes_RegisteredInContainer
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;BasedOn;cs+class://CastleTests/Registration/AllTypesTestCase/RegisterAssemblyTypes_IfCondition_RegisteredInContainer
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;BasedOn;cs+class://CastleTests/Registration/AllTypesTestCase/RegisterAssemblyTypes_MultipleIfCondition_RegisteredInContainer
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;BasedOn;cs+class://CastleTests/Registration/AllTypesTestCase/RegisterAssemblyTypes_UnlessCondition_RegisteredInContainer
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;BasedOn;cs+class://CastleTests/Registration/AllTypesTestCase/RegisterAssemblyTypes_MultipleUnlessCondition_RegisteredInContainer
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;BasedOn;cs+class://CastleTests/Registration/AllTypesTestCase/RegisterAssemblyTypes_WithLinqConfiguration_RegisteredInContainer
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;BasedOn;cs+class://CastleTests/Registration/AllTypesTestCase/RegisterAssemblyTypes_WithLinqConfigurationReturningValue_RegisteredInContainer
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;BasedOn;cs+class://CastleTests/Registration/AllTypesTestCase/RegisterMultipleAssemblyTypes_BasedOn_RegisteredInContainer
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;Where;cs+class://CastleTests/Registration/AllTypesTestCase/RegisterAssemblyTypes_WhereConditionSatisifed_RegisteredInContainer
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;BasedOn;cs+class://CastleTests/Registration/AllTypesTestCase/RegisterAssemblyTypes_OnlyPublicTypes_WillNotRegisterNonPublicTypes
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;BasedOn;cs+class://CastleTests/Registration/AllTypesTestCase/RegisterAssemblyTypes_IncludeNonPublicTypes_WillNRegisterNonPublicTypes
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;Where;cs+class://CastleTests/Registration/AllTypesTestCase/RegisterAssemblyTypes_WhenTypeInNamespace_RegisteredInContainer
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;Where;cs+class://CastleTests/Registration/AllTypesTestCase/RegisterAssemblyTypes_WhenTypeInMissingNamespace_NotRegisteredInContainer
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;Where;cs+class://CastleTests/Registration/AllTypesTestCase/RegisterAssemblyTypes_WhenTypeInSameNamespaceAsComponent_RegisteredInContainer
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;BasedOn;cs+class://CastleTests/Registration/AllTypesTestCase/RegisterGenericTypes_BasedOnGenericDefinitionUsingSelect_RegisteredInContainer
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;BasedOn;cs+class://CastleTests/Registration/AllTypesTestCase/RegisterAssemblyTypes_MultipleBasedOn_RegisteredInContainer
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;BasedOn;cs+class://CastleTests/Registration/AllTypesTestCase/RegisterAssemblyTypes_MultipleBasedOnWithServiceBase_RegisteredInContainer
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;BasedOn;cs+class://CastleTests/Registration/AllTypesTestCase/RegisterAssemblyTypes_MultipleBasedOnWithThreeBases_RegisteredInContainer
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;BasedOn;cs+class://CastleTests/Registration/AllTypesTestCase/RegisterGenericTypes_MultipleBasedOnWithGenericDefinition_RegisteredInContainer
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;BasedOn;cs+class://CastleTests/Registration/AllTypesTestCase/RegisterGenericTypes_MultipleBasedOnImplementingBothInterfaces_RegisteredWithBothAsServices
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;BasedOn;cs+class://CastleTests/Registration/AllTypesTestCase/RegisterGenericTypes_MultipleBasedOnImplementingOneInterface_RegisteredWithOneService
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;BasedOn;cs+class://CastleTests/Registration/AllTypesTestCase/RegisterGenericTypes_MultipleBasedOnWithTheSameTypesTwice_SelectedAsOneBase
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;BasedOn;cs+class://CastleTests/SpecializedResolvers/ArrayResolverTestCase/Composite_service_can_be_resolved_without_triggering_circular_dependency_detection_fuse
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;BasedOn;cs+class://Castle/Windsor/Tests/Bugs/IoC_169/IoC_169/BulkRegistrations_WhenRegistrationMatchesNoInstancesOfService_StopsStartableFacilityFromWorking
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromAssemblyDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;BasedOn;cs+class://CastleTests/Facilities/TypedFactory/TypedFactoryFacilityTake2TestCase/Can_Resolve_by_closed_generic_closed_on_arguments_type_with_custom_selector
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromTypesDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;BasedOn;cs+class://Castle/MicroKernel/Registration/AllTypesOf/From
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromTypesDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;BasedOn;cs+class://Castle/MicroKernel/Registration/AllTypesOf/From
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromTypesDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;BasedOn;cs+class://Castle/MicroKernel/Registration/AllTypesOf/Pick
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromTypesDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;BasedOn;cs+class://CastleTests/IsFallbackTestCase/Can_make_a_component_fallback_via_AllTypes_1
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromTypesDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;BasedOn;cs+class://CastleTests/IsFallbackTestCase/Can_make_a_component_fallback_via_AllTypes_2
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromTypesDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;Pick;cs+class://CastleTests/Registration/AllTypesTestCase/RegisterGenericTypes_BasedOnGenericDefinition_RegisteredInContainer
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromTypesDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;BasedOn;cs+class://CastleTests/Registration/AllTypesTestCase/RegisterTypes_WithLinq_RegisteredInContainer
True;MethodCall;cs+class://Castle/MicroKernel/Registration/FromTypesDescriptor;cs+class://Castle/MicroKernel/Registration/FromDescriptor;Pick;cs+class://CastleTests/Registration/AllTypesTestCase/RegisterSpecificTypes_WithGenericDefinition_RegisteredInContainer
True;MethodCall;cs+class://Castle/MicroKernel/Resolvers/DependencyResolverException;cs+class://System/Exception;Message;cs+class://CastleTests/DependencyResolvingTestCase/Service_override_and_parameter_for_the_same_dependency_not_legal_via_type
True;MethodCall;cs+class://Castle/MicroKernel/Resolvers/DependencyResolverException;cs+class://System/Exception;Message;cs+class://Castle/MicroKernel/Tests/RuntimeParametersTestCase/Missing_service_is_correctly_detected
True;MethodCall;cs+class://Castle/MicroKernel/SubSystems/Conversion/ConverterException;cs+class://System/Exception;Message;cs+class://CastleTests/TypeNameConverterTestCase/Throws_helpful_exception_when_assembly_found_but_not_type
True;MethodCall;cs+class://Castle/MicroKernel/SubSystems/Conversion/ConverterException;cs+class://System/Exception;Message;cs+class://CastleTests/TypeNameConverterTestCase/Throws_helpful_exception_when_assembly_specified_but_not_found
True;MethodCall;cs+class://Castle/MicroKernel/SubSystems/Conversion/ConverterException;cs+class://System/Exception;Message;cs+class://CastleTests/TypeNameConverterTestCase/Throws_helpful_exception_when_only_type_specified_but_not_found
True;MethodCall;cs+class://Castle/MicroKernel/SubSystems/Conversion/GenericDictionaryConverter;cs+class://Castle/MicroKernel/SubSystems/Conversion/AbstractTypeConverter;Context;cs+class://Castle/MicroKernel/SubSystems/Conversion/GenericDictionaryConverter/DictionaryHelper[2]/ConvertConfigurationToCollection
True;MethodCall;cs+class://Castle/MicroKernel/SubSystems/Conversion/GenericDictionaryConverter;cs+class://Castle/MicroKernel/SubSystems/Conversion/AbstractTypeConverter;Context;cs+class://Castle/MicroKernel/SubSystems/Conversion/GenericDictionaryConverter/DictionaryHelper[2]/ConvertConfigurationToCollection
True;MethodCall;cs+class://Castle/MicroKernel/SubSystems/Conversion/GenericDictionaryConverter;cs+class://Castle/MicroKernel/SubSystems/Conversion/AbstractTypeConverter;Context;cs+class://Castle/MicroKernel/SubSystems/Conversion/GenericDictionaryConverter/DictionaryHelper[2]/ConvertConfigurationToCollection
True;MethodCall;cs+class://Castle/MicroKernel/SubSystems/Conversion/GenericDictionaryConverter;cs+class://Castle/MicroKernel/SubSystems/Conversion/AbstractTypeConverter;Context;cs+class://Castle/MicroKernel/SubSystems/Conversion/GenericDictionaryConverter/DictionaryHelper[2]/ConvertConfigurationToCollection
True;MethodCall;cs+class://Castle/MicroKernel/SubSystems/Conversion/GenericDictionaryConverter;cs+class://Castle/MicroKernel/SubSystems/Conversion/AbstractTypeConverter;Context;cs+class://Castle/MicroKernel/SubSystems/Conversion/GenericDictionaryConverter/DictionaryHelper[2]/ConvertConfigurationToCollection
True;MethodCall;cs+class://Castle/MicroKernel/SubSystems/Conversion/GenericListConverter;cs+class://Castle/MicroKernel/SubSystems/Conversion/AbstractTypeConverter;Context;cs+class://Castle/MicroKernel/SubSystems/Conversion/GenericListConverter/ListHelper[1]/ConvertConfigurationToCollection
True;MethodCall;cs+class://Castle/Windsor/Configuration/Interpreters/XmlInterpreter;cs+class://Castle/Windsor/Configuration/Interpreters/AbstractInterpreter;Source;cs+class://Castle/Windsor/WindsorContainer/(field initializer)
True;MethodCall;cs+class://Castle/Windsor/Configuration/Interpreters/XmlInterpreter;cs+class://Castle/Windsor/Configuration/Interpreters/AbstractInterpreter;Source;cs+class://Castle/Windsor/Tests/Config/AppDomainConfigSourceTestCase/ProperDeserialization
True;MethodCall;cs+class://Castle/Windsor/Configuration/Interpreters/XmlInterpreter;cs+class://Castle/Windsor/Configuration/Interpreters/AbstractInterpreter;Source;cs+class://Castle/Windsor/Tests/ConfigXmlInterpreterTestCase/ComponentIdGetsLoadedFromTheParsedConfiguration
True;MethodCall;cs+class://Castle/Windsor/Configuration/Interpreters/XmlInterpreter;cs+class://Castle/Windsor/Configuration/Interpreters/AbstractInterpreter;Source;cs+class://Castle/Windsor/Tests/ConfigXmlInterpreterTestCase/CorrectConfigurationMapping
True;MethodCall;cs+class://Castle/Windsor/Configuration/Interpreters/XmlInterpreter;cs+class://Castle/Windsor/Configuration/Interpreters/AbstractInterpreter;Source;cs+class://Castle/Windsor/Tests/ConfigXmlInterpreterTestCase/ProperDeserialization
True;MethodCall;cs+class://Castle/Windsor/Configuration/Interpreters/XmlInterpreter;cs+class://Castle/Windsor/Configuration/Interpreters/AbstractInterpreter;Source;cs+class://Castle/Windsor/Tests/ConfigXmlInterpreterTestCase/ProperManifestDeserialization
True;MethodCall;cs+class://Castle/Windsor/Configuration/Interpreters/ConfigurationProcessingException;cs+class://System/Exception;Message;cs+class://Castle/Windsor/Tests/XmlConfigStructureTestCase/Invalid_nodes_are_reported_via_exception
True;MethodCall;cs+class://CastleTests/Components/AbPropChild;cs+class://CastleTests/Components/AProp;Prop;cs+class://CastleTests/PropertyDependenciesTestCase/Can_opt_out_of_setting_base_properties_via_enum
True;MethodCall;cs+class://CastleTests/Components/BDisposable;cs+class://CastleTests/Components/B;A;cs+class://CastleTests/Lifestyle/BoundLifestyleImplicitGraphScopingTestCase/Scoped_component_not_released_prematurely
True;MethodCall;cs+class://CastleTests/Components/BDisposable;cs+class://CastleTests/Components/B;A;cs+class://CastleTests/Lifestyle/BoundLifestyleImplicitGraphScopingTestCase/Scoped_component_not_released_prematurely_interdependencies
True;MethodCall;cs+class://CastleTests/Components/DisposableGenericA;cs+class://CastleTests/Components/DisposableGeneric[1];Disposed;cs+class://Castle/Windsor/Tests/Lifecycle/DisposeTestCase/Disposable_singleton_generic_closed_inherited_disposed
True;MethodCall;cs+class://CastleTests/Components/DisposableGenericA;cs+class://CastleTests/Components/DisposableGeneric[1];Disposed;cs+class://Castle/Windsor/Tests/Lifecycle/DisposeTestCase/Disposable_transient_generic_closed_inherited_disposed
True;MethodCall;cs+class://CastleTests/Components/ExtendedComponentWithProperties;cs+class://CastleTests/Components/ComponentWithProperties;Prop1;cs+class://CastleTests/PropertiesInspectionBehaviorTestCase/PropertiesInspectionTestCase
True;MethodCall;cs+class://CastleTests/Components/ExtendedComponentWithProperties;cs+class://CastleTests/Components/ComponentWithProperties;Prop2;cs+class://CastleTests/PropertiesInspectionBehaviorTestCase/PropertiesInspectionTestCase
True;MethodCall;cs+class://CastleTests/Components/ExtendedComponentWithProperties;cs+class://CastleTests/Components/ComponentWithProperties;Prop1;cs+class://CastleTests/PropertiesInspectionBehaviorTestCase/PropertiesInspectionTestCase
True;MethodCall;cs+class://CastleTests/Components/ExtendedComponentWithProperties;cs+class://CastleTests/Components/ComponentWithProperties;Prop2;cs+class://CastleTests/PropertiesInspectionBehaviorTestCase/PropertiesInspectionTestCase
True;MethodCall;cs+class://CastleTests/Components/ExtendedComponentWithProperties;cs+class://CastleTests/Components/ComponentWithProperties;Prop1;cs+class://CastleTests/PropertiesInspectionBehaviorTestCase/PropertiesInspectionTestCase
True;MethodCall;cs+class://CastleTests/Components/ExtendedComponentWithProperties;cs+class://CastleTests/Components/ComponentWithProperties;Prop2;cs+class://CastleTests/PropertiesInspectionBehaviorTestCase/PropertiesInspectionTestCase
True;MethodCall;cs+class://CastleTests/Facilities/Synchronize/Components/AsynchronousWorker;cs+class://CastleTests/Facilities/Synchronize/Components/SimpleWorker;DoWork;cs+class://CastleTests/Facilities/Synchronize/DispatcherObjectTestCase/GetResultOf_NotWithAnySynchronizationContext_ThrowsInvalidOperationException
True;MethodCall;cs+class://CastleTests/Facilities/Synchronize/Components/AsynchronousWorker;cs+class://CastleTests/Facilities/Synchronize/Components/SimpleWorker;DoWork;cs+class://CastleTests/Facilities/Synchronize/SynchronizeFacilityTestCase/GetResultOf_NotWithAnySynchronizationContext_ThrowsInvalidOperationException
True;MethodCall;cs+class://CastleTests/Facilities/Synchronize/Components/ClassUsingFormInWindowsContext;cs+class://CastleTests/Facilities/Synchronize/Components/ClassUsingForm;DoWork;cs+class://CastleTests/Facilities/Synchronize/SynchronizeFacilityTestCase/AddControl_DifferentThreadInContext_WorksFine
True;MethodCall;cs+class://CastleTests/Facilities/Synchronize/Components/ClassUsingFormInWindowsContext;cs+class://CastleTests/Facilities/Synchronize/Components/ClassUsingForm;DoWork;cs+class://CastleTests/Facilities/Synchronize/SynchronizeFacilityTestCase/AddControl_DifferentThread_ThrowsException
True;MethodCall;cs+class://CastleTests/Facilities/Synchronize/Components/ClassUsingWindowInWindowsContext;cs+class://CastleTests/Facilities/Synchronize/Components/ClassUsingWindow;DoWork;cs+class://CastleTests/Facilities/Synchronize/DispatcherObjectTestCase/AddControl_DifferentThread_Using_Context_ThrowsException
True;MethodCall;cs+class://CastleTests/Facilities/Synchronize/Components/ClassUsingWindowInWindowsContext;cs+class://CastleTests/Facilities/Synchronize/Components/ClassUsingWindow;DoWork;cs+class://CastleTests/Facilities/Synchronize/DispatcherObjectTestCase/AddControl_DifferentThreadInContext_WorksFine
True;MethodCall;cs+class://CastleTests/Facilities/Synchronize/Components/ManualWorker;cs+class://CastleTests/Facilities/Synchronize/Components/AsynchronousWorker;DoWork;cs+class://CastleTests/Facilities/Synchronize/DispatcherObjectTestCase/GetResultOf_UsingAsyncSynchronousContextWithOuts_CallsCallback
True;MethodCall;cs+class://CastleTests/Facilities/Synchronize/Components/ManualWorker;cs+class://CastleTests/Facilities/Synchronize/Components/AsynchronousWorker;DoWork;cs+class://CastleTests/Facilities/Synchronize/DispatcherObjectTestCase/GetResultOf_UsingAsyncSynchronousContextWithOuts_CanAccessOuts
True;MethodCall;cs+class://CastleTests/Facilities/Synchronize/Components/ManualWorker;cs+class://CastleTests/Facilities/Synchronize/Components/AsynchronousWorker;DoWork;cs+class://CastleTests/Facilities/Synchronize/SynchronizeFacilityTestCase/GetResultOf_UsingAsyncSynchronousContextWithOuts_CallsCallback
True;MethodCall;cs+class://CastleTests/Facilities/Synchronize/Components/ManualWorker;cs+class://CastleTests/Facilities/Synchronize/Components/AsynchronousWorker;DoWork;cs+class://CastleTests/Facilities/Synchronize/SynchronizeFacilityTestCase/GetResultOf_UsingAsyncSynchronousContextWithOuts_CanAccessOuts
True;MethodCall;cs+class://CastleTests/Facilities/Synchronize/Components/SyncClassOverrideContext;cs+class://CastleTests/Facilities/Synchronize/Components/SyncClassWithoutContext;DoWork;cs+class://CastleTests/Facilities/Synchronize/SynchronizeFacilityTestCase/GetResultOf_NotWithAnySynchronizationContext_ThrowsInvalidOperationException
True;MethodCall;cs+class://CastleTests/Facilities/Synchronize/Components/SyncClassOverrideContext;cs+class://CastleTests/Facilities/Synchronize/Components/SyncClassWithoutContext;DoWork;cs+class://CastleTests/Facilities/Synchronize/SynchronizeFacilityTestCase/Synchronize_OverrideContext_UsesContext
True;MethodCall;cs+class://Castle/MicroKernel/Tests/ClassComponents/ServiceUser2;cs+class://Castle/MicroKernel/Tests/ClassComponents/ServiceUser;AComponent;cs+class://CastleTests/Activators/BestConstructorTestCase/ParametersAndServicesBestCase
True;MethodCall;cs+class://Castle/MicroKernel/Tests/ClassComponents/ServiceUser2;cs+class://Castle/MicroKernel/Tests/ClassComponents/ServiceUser;BComponent;cs+class://CastleTests/Activators/BestConstructorTestCase/ParametersAndServicesBestCase
True;MethodCall;cs+class://Castle/MicroKernel/Tests/ClassComponents/ServiceUser2;cs+class://Castle/MicroKernel/Tests/ClassComponents/ServiceUser;CComponent;cs+class://CastleTests/Activators/BestConstructorTestCase/ParametersAndServicesBestCase
True;MethodCall;cs+class://Castle/MicroKernel/Tests/ClassComponents/ServiceUser2;cs+class://Castle/MicroKernel/Tests/ClassComponents/ServiceUser;AComponent;cs+class://CastleTests/Activators/BestConstructorTestCase/ParametersAndServicesBestCase2
True;MethodCall;cs+class://Castle/MicroKernel/Tests/ClassComponents/ServiceUser2;cs+class://Castle/MicroKernel/Tests/ClassComponents/ServiceUser;BComponent;cs+class://CastleTests/Activators/BestConstructorTestCase/ParametersAndServicesBestCase2
True;MethodCall;cs+class://Castle/MicroKernel/Tests/ClassComponents/ServiceUser2;cs+class://Castle/MicroKernel/Tests/ClassComponents/ServiceUser;CComponent;cs+class://CastleTests/Activators/BestConstructorTestCase/ParametersAndServicesBestCase2
True;MethodCall;cs+class://Castle/Windsor/Tests/Facilities/Startable/Components/StartableComponentCustomDependencies;cs+class://Castle/Windsor/Tests/Facilities/Startable/Components/StartableComponent;Started;cs+class://Castle/Windsor/Tests/Facilities/Startable/StartableFacilityTestCase/TestStartableCustomDependencies
True;MethodCall;cs+class://Castle/Windsor/Tests/Facilities/Startable/Components/StartableComponentCustomDependencies;cs+class://Castle/Windsor/Tests/Facilities/Startable/Components/StartableComponent;Stopped;cs+class://Castle/Windsor/Tests/Facilities/Startable/StartableFacilityTestCase/TestStartableCustomDependencies
True;MethodCall;cs+class://Castle/Windsor/Tests/Facilities/Startable/Components/StartableComponentCustomDependencies;cs+class://Castle/Windsor/Tests/Facilities/Startable/Components/StartableComponent;Stopped;cs+class://Castle/Windsor/Tests/Facilities/Startable/StartableFacilityTestCase/TestStartableCustomDependencies
True;MethodCall;cs+class://Castle/Windsor/Tests/Facilities/Startable/Components/StartableComponentCustomDependencies;cs+class://Castle/Windsor/Tests/Facilities/Startable/Components/StartableComponent;Started;cs+class://Castle/Windsor/Tests/Facilities/Startable/StartableFacilityTestCase/TestStartableWithRegisteredCustomDependencies
True;MethodCall;cs+class://Castle/Windsor/Tests/Facilities/Startable/Components/StartableComponentCustomDependencies;cs+class://Castle/Windsor/Tests/Facilities/Startable/Components/StartableComponent;Stopped;cs+class://Castle/Windsor/Tests/Facilities/Startable/StartableFacilityTestCase/TestStartableWithRegisteredCustomDependencies
True;MethodCall;cs+class://Castle/Windsor/Tests/Facilities/Startable/Components/StartableComponentCustomDependencies;cs+class://Castle/Windsor/Tests/Facilities/Startable/Components/StartableComponent;Stopped;cs+class://Castle/Windsor/Tests/Facilities/Startable/StartableFacilityTestCase/TestStartableWithRegisteredCustomDependencies
True;MethodCall;cs+class://CastleTests/Lifecycle/DecomissioningResponsibilitiesTestCase/A;cs+class://CastleTests/Components/DisposableBase;IsDisposed;cs+class://CastleTests/Lifecycle/DecomissioningResponsibilitiesTestCase/WhenRootComponentIsNotDisposableButDependenciesAre_DependenciesShouldBeDisposed
True;MethodCall;cs+class://CastleTests/Lifecycle/DecomissioningResponsibilitiesTestCase/A;cs+class://CastleTests/Components/DisposableBase;IsDisposed;cs+class://CastleTests/Lifecycle/DecomissioningResponsibilitiesTestCase/WhenRootComponentIsNotDisposableButDependenciesAre_DependenciesShouldBeDisposed
True;MethodCall;cs+class://CastleTests/Lifecycle/DecomissioningResponsibilitiesTestCase/A;cs+class://CastleTests/Components/DisposableBase;IsDisposed;cs+class://CastleTests/Lifecycle/DecomissioningResponsibilitiesTestCase/WhenRootComponentIsNotDisposableButThirdLevelDependenciesAre_DependenciesShouldBeDisposed
True;MethodCall;cs+class://CastleTests/Lifecycle/DecomissioningResponsibilitiesTestCase/A;cs+class://CastleTests/Components/DisposableBase;IsDisposed;cs+class://CastleTests/Lifecycle/DecomissioningResponsibilitiesTestCase/WhenRootComponentIsNotDisposableButThirdLevelDependenciesAre_DependenciesShouldBeDisposed
True;MethodCall;cs+class://CastleTests/Lifecycle/DecomissioningResponsibilitiesTestCase/B;cs+class://CastleTests/Components/DisposableBase;IsDisposed;cs+class://CastleTests/Lifecycle/DecomissioningResponsibilitiesTestCase/WhenRootComponentIsNotDisposableButDependenciesAre_DependenciesShouldBeDisposed
True;MethodCall;cs+class://CastleTests/Lifecycle/DecomissioningResponsibilitiesTestCase/B;cs+class://CastleTests/Components/DisposableBase;IsDisposed;cs+class://CastleTests/Lifecycle/DecomissioningResponsibilitiesTestCase/WhenRootComponentIsNotDisposableButDependenciesAre_DependenciesShouldBeDisposed
True;MethodCall;cs+class://CastleTests/Lifecycle/DecomissioningResponsibilitiesTestCase/B;cs+class://CastleTests/Components/DisposableBase;IsDisposed;cs+class://CastleTests/Lifecycle/DecomissioningResponsibilitiesTestCase/WhenRootComponentIsNotDisposableButThirdLevelDependenciesAre_DependenciesShouldBeDisposed
True;MethodCall;cs+class://CastleTests/Lifecycle/DecomissioningResponsibilitiesTestCase/B;cs+class://CastleTests/Components/DisposableBase;IsDisposed;cs+class://CastleTests/Lifecycle/DecomissioningResponsibilitiesTestCase/WhenRootComponentIsNotDisposableButThirdLevelDependenciesAre_DependenciesShouldBeDisposed
True;MethodCall;cs+class://CastleTests/Lifecycle/DecomissioningResponsibilitiesTestCase/GenA[1];cs+class://CastleTests/Components/DisposableBase;IsDisposed;cs+class://CastleTests/Lifecycle/DecomissioningResponsibilitiesTestCase/GenericTransientComponentsAreReleasedInChain
True;MethodCall;cs+class://CastleTests/Lifecycle/DecomissioningResponsibilitiesTestCase/GenA[1];cs+class://CastleTests/Components/DisposableBase;IsDisposed;cs+class://CastleTests/Lifecycle/DecomissioningResponsibilitiesTestCase/GenericTransientComponentsAreReleasedInChain
True;MethodCall;cs+class://CastleTests/Lifecycle/DecomissioningResponsibilitiesTestCase/GenB[1];cs+class://CastleTests/Components/DisposableBase;IsDisposed;cs+class://CastleTests/Lifecycle/DecomissioningResponsibilitiesTestCase/GenericTransientComponentsAreReleasedInChain
True;MethodCall;cs+class://CastleTests/Lifecycle/DecomissioningResponsibilitiesTestCase/GenB[1];cs+class://CastleTests/Components/DisposableBase;IsDisposed;cs+class://CastleTests/Lifecycle/DecomissioningResponsibilitiesTestCase/GenericTransientComponentsAreReleasedInChain
True;MethodCall;cs+class://CastleTests/Lifecycle/DecomissioningResponsibilitiesTestCase/DisposableSpamService;cs+class://CastleTests/Components/DisposableBase;IsDisposed;cs+class://CastleTests/Lifecycle/DecomissioningResponsibilitiesTestCase/ComponentsAreOnlyDisposedOnce
True;MethodCall;cs+class://CastleTests/Lifecycle/DecomissioningResponsibilitiesTestCase/DisposableSpamService;cs+class://CastleTests/Components/DisposableBase;IsDisposed;cs+class://CastleTests/Lifecycle/DecomissioningResponsibilitiesTestCase/DisposingSubLevelBurdenWontDisposeComponentAsTheyAreDisposedAlready
True;MethodCall;cs+class://CastleTests/Lifecycle/DecomissioningResponsibilitiesTestCase/DisposableSpamService;cs+class://CastleTests/Components/DisposableBase;IsDisposed;cs+class://CastleTests/Lifecycle/DecomissioningResponsibilitiesTestCase/SingletonReferencedComponentIsNotDisposed
True;MethodCall;cs+class://CastleTests/Lifecycle/DecomissioningResponsibilitiesTestCase/DisposableSpamService;cs+class://CastleTests/Components/DisposableBase;IsDisposed;cs+class://CastleTests/Lifecycle/DecomissioningResponsibilitiesTestCase/SingletonReferencedComponentIsNotDisposed
True;MethodCall;cs+class://CastleTests/Lifecycle/DecomissioningResponsibilitiesTestCase/DisposableSpamService;cs+class://CastleTests/Components/DisposableBase;IsDisposed;cs+class://CastleTests/Lifecycle/DecomissioningResponsibilitiesTestCase/TransientReferencedComponentsAreReleasedInChain
True;MethodCall;cs+class://CastleTests/Lifecycle/DecomissioningResponsibilitiesTestCase/DisposableSpamService;cs+class://CastleTests/Components/DisposableBase;IsDisposed;cs+class://CastleTests/Lifecycle/DecomissioningResponsibilitiesTestCase/TransientReferencedComponentsAreReleasedInChain
True;MethodCall;cs+class://CastleTests/Lifecycle/DecomissioningResponsibilitiesTestCase/DisposableTemplateEngine;cs+class://CastleTests/Components/DisposableBase;IsDisposed;cs+class://CastleTests/Lifecycle/DecomissioningResponsibilitiesTestCase/ComponentsAreOnlyDisposedOnce
True;MethodCall;cs+class://CastleTests/Lifecycle/DecomissioningResponsibilitiesTestCase/DisposableTemplateEngine;cs+class://CastleTests/Components/DisposableBase;IsDisposed;cs+class://CastleTests/Lifecycle/DecomissioningResponsibilitiesTestCase/DisposingSubLevelBurdenWontDisposeComponentAsTheyAreDisposedAlready
True;MethodCall;cs+class://CastleTests/Lifecycle/DecomissioningResponsibilitiesTestCase/DisposableTemplateEngine;cs+class://CastleTests/Components/DisposableBase;IsDisposed;cs+class://CastleTests/Lifecycle/DecomissioningResponsibilitiesTestCase/SingletonReferencedComponentIsNotDisposed
True;MethodCall;cs+class://CastleTests/Lifecycle/DecomissioningResponsibilitiesTestCase/DisposableTemplateEngine;cs+class://CastleTests/Components/DisposableBase;IsDisposed;cs+class://CastleTests/Lifecycle/DecomissioningResponsibilitiesTestCase/SingletonReferencedComponentIsNotDisposed
True;MethodCall;cs+class://CastleTests/Lifecycle/DecomissioningResponsibilitiesTestCase/DisposableTemplateEngine;cs+class://CastleTests/Components/DisposableBase;IsDisposed;cs+class://CastleTests/Lifecycle/DecomissioningResponsibilitiesTestCase/TransientReferencedComponentsAreReleasedInChain
True;MethodCall;cs+class://CastleTests/Lifecycle/DecomissioningResponsibilitiesTestCase/DisposableTemplateEngine;cs+class://CastleTests/Components/DisposableBase;IsDisposed;cs+class://CastleTests/Lifecycle/DecomissioningResponsibilitiesTestCase/TransientReferencedComponentsAreReleasedInChain
True;MethodCall;cs+class://Castle/Windsor/Tests/Facilities/TypedFactory/Components/GenericIntComponent;cs+class://Castle/Windsor/Tests/Facilities/TypedFactory/Components/GenericComponent[1];Value;cs+class://CastleTests/Facilities/TypedFactory/TypedFactoryFacilityTake2TestCase/Can_Resolve_by_closed_generic_closed_on_arguments_type_with_custom_selector
True;MethodCall;cs+class://Castle/Windsor/Tests/Facilities/TypedFactory/Components/GenericStringComponent;cs+class://Castle/Windsor/Tests/Facilities/TypedFactory/Components/GenericComponent[1];Value;cs+class://CastleTests/Facilities/TypedFactory/TypedFactoryFacilityTake2TestCase/Can_Resolve_by_closed_generic_closed_on_arguments_type_with_custom_selector
True;MethodCall;cs+class://Castle/Facilities/Synchronize/CreateOnUIThreadInspector/MarshalingControl;cs+class://System/Windows/Forms/Control;InvokeRequired;cs+class://Castle/Facilities/Synchronize/CreateOnUIThreadInspector/CreateOnWinformsUIThread
True;MethodCall;cs+class://Castle/Facilities/Synchronize/CreateOnUIThreadInspector/MarshalingControl;cs+class://System/Windows/Forms/Control;Invoke;cs+class://Castle/Facilities/Synchronize/CreateOnUIThreadInspector/CreateOnWinformsUIThread
False;MethodCall;cs+class://Castle/Facilities/Synchronize/CreateOnUIThreadInspector/MarshalingControl;cs+class://System/Windows/Forms/Control;Dispose;cs+class://Castle/Facilities/Synchronize/CreateOnUIThreadInspector/Dispose
True;MethodCall;cs+class://Castle/Facilities/Synchronize/Result;cs+class://Castle/Facilities/Synchronize/AbstractAsyncResult;AsyncState;cs+class://Castle/Facilities/Synchronize/Result[1]/(field initializer)
True;MethodCall;cs+class://Castle/Facilities/Synchronize/Result;cs+class://Castle/Facilities/Synchronize/AbstractAsyncResult;AsyncWaitHandle;cs+class://Castle/Facilities/Synchronize/Result[1]/(field initializer)
True;MethodCall;cs+class://Castle/Facilities/Synchronize/Result;cs+class://Castle/Facilities/Synchronize/AbstractAsyncResult;CompletedSynchronously;cs+class://Castle/Facilities/Synchronize/Result[1]/(field initializer)
True;MethodCall;cs+class://Castle/Facilities/Synchronize/Result;cs+class://Castle/Facilities/Synchronize/AbstractAsyncResult;IsCompleted;cs+class://Castle/Facilities/Synchronize/Result[1]/(field initializer)
True;MethodCall;cs+class://Castle/Facilities/Synchronize/SynchronizeContextReference;cs+class://Castle/MicroKernel/ComponentReference[1];Resolve;cs+class://Castle/Facilities/Synchronize/SynchronizeInterceptor/InvokeInSynchronizationContext
False;MethodCall;cs+class://Castle/Facilities/EventWiring/EventWiringException;cs+class://Castle/MicroKernel/Facilities/FacilityException;Message;cs+class://CastleTests/Facilities/EventWiring/SomethingWentWrongTestCase/Helpful_exception_is_thrown_when_susbcribing_to_a_non_existing_event
False;MethodCall;cs+class://Castle/Facilities/EventWiring/EventWiringException;cs+class://Castle/MicroKernel/Facilities/FacilityException;Message;cs+class://CastleTests/Facilities/EventWiring/SomethingWentWrongTestCase/Helpful_exception_is_thrown_when_susbcribing_with_a_non_existing_method
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DataServiceHostFactory;cs+class://Castle/Facilities/WcfIntegration/WindsorServiceHostFactory[1];CreateServiceHost;cs+class://Castle/Facilities/WcfIntegration/Tests/DataServiceHostFactoryFixture/CreatesDataServiceHostFromServiceName
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/ContractLoadBalancePolicyFactory[1];cs+class://Castle/Facilities/WcfIntegration/AbstractLoadBalancePolicyFactory[1];CreatePolicies;cs+class://Castle/Facilities/WcfIntegration/Tests/ContractLoadBalancePolicyFactoryTestCase/CanCreatePolicyFactory
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/ContractLoadBalancePolicyFactory[1];cs+class://Castle/Facilities/WcfIntegration/AbstractLoadBalancePolicyFactory[1];CreatePolicies;cs+class://Castle/Facilities/WcfIntegration/Tests/ContractLoadBalancePolicyFactoryTestCase/CanCreatePolicyWithPrivateConstructor
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/ContractLoadBalancePolicyFactory[1];cs+class://Castle/Facilities/WcfIntegration/AbstractLoadBalancePolicyFactory[1];CreatePolicies;cs+class://Castle/Facilities/WcfIntegration/Tests/ContractLoadBalancePolicyFactoryTestCase/WillAcceptEndpointsSupportingContract
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/ContractLoadBalancePolicyFactory[1];cs+class://Castle/Facilities/WcfIntegration/AbstractLoadBalancePolicyFactory[1];CreatePolicies;cs+class://Castle/Facilities/WcfIntegration/Tests/ContractLoadBalancePolicyFactoryTestCase/WillCreatePolicyPerContract
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/ContractLoadBalancePolicyFactory[1];cs+class://Castle/Facilities/WcfIntegration/AbstractLoadBalancePolicyFactory[1];CreatePolicies;cs+class://Castle/Facilities/WcfIntegration/Tests/ContractLoadBalancePolicyFactoryTestCase/WillRejectEndpointsNotSupportingContract
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/AbstractChannelBuilder[1];cs+class://Castle/Facilities/WcfIntegration/AbstractChannelBuilder;GetEffectiveBinding;cs+class://Castle/Facilities/WcfIntegration/AbstractChannelBuilder/Scope/VisitBindingEndpoint
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/AbstractChannelBuilder[1];cs+class://Castle/Facilities/WcfIntegration/AbstractChannelBuilder;GetEffectiveBinding;cs+class://Castle/Facilities/WcfIntegration/AbstractChannelBuilder/Scope/VisitBindingAddressEndpoint
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/AbstractChannelBuilder[1];cs+class://Castle/Facilities/WcfIntegration/AbstractChannelBuilder;GetEffectiveBinding;cs+class://Castle/Facilities/WcfIntegration/AbstractChannelBuilder/Scope/VisitBindingAddressEndpoint
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/AbstractChannelBuilder[1];cs+class://Castle/Facilities/WcfIntegration/AbstractChannelBuilder;GetEffectiveBinding;cs+class://Castle/Facilities/WcfIntegration/AbstractChannelBuilder/Scope/VisitBindingAddressEndpoint
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/AbstractChannelBuilder[1];cs+class://Castle/Facilities/WcfIntegration/AbstractChannelBuilder;DiscoverChannel;cs+class://Castle/Facilities/WcfIntegration/AbstractChannelBuilder/Scope/VisitBindingDiscoveredEndpoint
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/WcfDiscoveryDomain;cs+class://Castle/Facilities/WcfIntegration/WcfEndpointDiscoveryMetadata;Scopes;cs+class://Castle/Facilities/WcfIntegration/AdHocServiceCatalogProbe/RestrictDomain
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/WcfDiscoveryDomain;cs+class://Castle/Facilities/WcfIntegration/WcfEndpointDiscoveryMetadata;Scopes;cs+class://Castle/Facilities/WcfIntegration/DiscoveryProxyLocator/RestrictDomain
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/WcfDiscoveryDomain;cs+class://Castle/Facilities/WcfIntegration/WcfEndpointDiscoveryMetadata;Extensions;cs+class://Castle/Facilities/WcfIntegration/DiscoveryProxyLocator/RestrictDomain
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/WcfDiscoveryDomain;cs+class://Castle/Facilities/WcfIntegration/WcfEndpointDiscoveryMetadata;Scopes;cs+class://Castle/Facilities/WcfIntegration/Tests/ServiceHostFixture/WillRegisterServiceWithServiceCatalogInDomain
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/Async/AsyncWcfCall[2];cs+class://Castle/Facilities/WcfIntegration/Async/AsyncWcfCallBase[1];Begin;cs+class://Castle/Facilities/WcfIntegration/WcfAsync/BeginWcfCall
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/Async/AsyncWcfCall[2];cs+class://Castle/Facilities/WcfIntegration/Async/AsyncWcfCallBase[1];Begin;cs+class://Castle/Facilities/WcfIntegration/WcfAsync/BeginWcfCall
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/Async/AsyncWcfCall[1];cs+class://Castle/Facilities/WcfIntegration/Async/AsyncWcfCallBase[1];Begin;cs+class://Castle/Facilities/WcfIntegration/WcfAsync/BeginWcfCall
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/Async/AsyncWcfCall[1];cs+class://Castle/Facilities/WcfIntegration/Async/AsyncWcfCallBase[1];Begin;cs+class://Castle/Facilities/WcfIntegration/WcfAsync/BeginWcfCall
False;MethodCall;cs+class://Castle/Facilities/WcfIntegration/Async/AsynChannelFactoryBuilder[1];cs+class://Castle/Facilities/WcfIntegration/DefaultChannelFactoryBuilder[1];CreateChannelFactory;cs+class://Castle/Facilities/WcfIntegration/Tests/AsyncChannelFactoryFixture/Should_cache_channelFactory_proxy_types
False;MethodCall;cs+class://Castle/Facilities/WcfIntegration/Async/AsynChannelFactoryBuilder[1];cs+class://Castle/Facilities/WcfIntegration/DefaultChannelFactoryBuilder[1];CreateChannelFactory;cs+class://Castle/Facilities/WcfIntegration/Tests/AsyncChannelFactoryFixture/Should_cache_channelFactory_proxy_types
False;MethodCall;cs+class://Castle/Facilities/WcfIntegration/Async/AsynChannelFactoryBuilder[1];cs+class://Castle/Facilities/WcfIntegration/DefaultChannelFactoryBuilder[1];CreateChannelFactory;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/CanProxyChannelFactoriesForAsyncSupport
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/Async/TypeSystem/BeginMethod;cs+class://Castle/Facilities/WcfIntegration/Async/TypeSystem/AsyncMethod;SyncMethod;cs+class://Castle/Facilities/WcfIntegration/Async/TypeSystem/AsyncType/GetMember
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/Async/TypeSystem/BeginMethod;cs+class://Castle/Facilities/WcfIntegration/Async/TypeSystem/AsyncMethod;SyncMethod;cs+class://Castle/Facilities/WcfIntegration/Async/TypeSystem/AsyncType/IsMatchingEndMethodForLastAccessedBeginMethod
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/Async/TypeSystem/EndMethod;cs+class://Castle/Facilities/WcfIntegration/Async/TypeSystem/AsyncMethod;SyncMethod;cs+class://Castle/Facilities/WcfIntegration/Async/TypeSystem/AsyncType/GetMember
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultClientModel;cs+class://Castle/Facilities/WcfIntegration/WcfClientModel[1];AddExtensions;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/WillApplyChannelFactoryAwareExtensionsOnModel
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/Duplex/DuplexClientFixture/TestInitialize
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/PerWcfOperationLifestyleTestCase/SetUp
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/PerWcfSessionLifestyleTestCase/SetUp
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/TestInitialize
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/CanResolveClientAssociatedWithChannelUsingDefaultBinding
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/CanResolveClientAssociatedWithChannelUsingSuppliedModel
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/CanResolveClientAssociatedWithChannelUsingSuppliedEndpoint
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/CanLazilyResolveClientAssociatedWithChannelUsingSuppliedModel
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/CanLazilyResolveClientAssociatedWithChannelUsingSuppliedEndpoint
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/CanResolveClientAssociatedWithChannelUsingFactoryWithModel
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/CanResolveClientAssociatedWithChannelUsingFactoryWithEndpoint
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/CanResolveClientAssociatedWithChannelUsingFactoryWithUri
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/WillRecoverFromAnUnhandledExceptionWithChannelUsingSuppliedModel
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddBaseAddresses;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/CanResolveClientAssociatedWithChannelUsingRelativeAddress
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/CanResolveClientAssociatedWithChannelUsingRelativeAddress
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/CanResolveClientAssociatedWithChannelUsingViaAddress
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/CanRecoverFromCommunicationException
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/CanRecoverFromCommunicationExceptionOnEndpoint
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/CanRecoverFromCommunicationExceptionAsynchronously
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/WillCallBackResultWhenAsynchronousOperationCompletes
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/CanCallChannelOperationsAsynchronouslyOnAsyncService
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/ThrowsEndPointNotFoundException
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/CanDiscoverServiceEndpointAndInferBinding
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];Discoverable;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/CanDiscoverServiceEndpointAndInferBinding
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/CanDiscoverServiceEndpointFromMetadata
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];Discoverable;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/CanDiscoverServiceEndpointFromMetadata
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/CanDiscoverServiceEndpointFromMetadataWithPreference
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/CanDiscoverServiceEndpointFromMetadataWithPreference
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];Discoverable;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/CanDiscoverServiceEndpointFromMetadataWithPreference
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/WillNotDiscoverServiceEndpointIfScopesDontMatch
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];Discoverable;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/WillNotDiscoverServiceEndpointIfScopesDontMatch
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/CanDiscoverServiceEndpointAndInferBindingWithScope
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];Discoverable;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/CanDiscoverServiceEndpointAndInferBindingWithScope
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/CanDiscoverServiceEndpointAndInferBindingWithEndpointScope
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];Discoverable;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/CanDiscoverServiceEndpointAndInferBindingWithEndpointScope
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/CanDiscoverServiceEndpointAndInferBindingWithCombindedScopes
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];Discoverable;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/CanDiscoverServiceEndpointAndInferBindingWithCombindedScopes
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/CanDiscoverServiceEndpointFromMetadataWithScope
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];Discoverable;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/CanDiscoverServiceEndpointFromMetadataWithScope
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/CanAddAdditionalDiscoveryMetadata
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];Discoverable;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/CanAddAdditionalDiscoveryMetadata
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/CanAccessDiscoverServiceEndpointMetadata
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];Discoverable;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/CanAccessDiscoverServiceEndpointMetadata
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddBaseAddresses;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/CanDiscoverServiceEndpointInManagedMode
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/CanDiscoverServiceEndpointInManagedMode
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddExtensions;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/CanDiscoverServiceEndpointInManagedMode
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/CanDiscoverServiceEndpointInManagedMode
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];Discoverable;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/CanDiscoverServiceEndpointInManagedMode
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/ServiceHostFixture/CanCreateServiceHostAndOpenHost
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/ServiceHostFixture/CanCreateServiceHostPerCallAndOpenHost
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/ServiceHostFixture/CanCreateServiceHostAndOpenHostUsingDefaultBinding
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/ServiceHostFixture/CanCreateServiceHostAndOpenHostWithMultipleEndpoints
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddBaseAddresses;cs+class://Castle/Facilities/WcfIntegration/Tests/ServiceHostFixture/CanCreateServiceHostAndOpenHostWithRelativeEndpoints
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/ServiceHostFixture/CanCreateServiceHostAndOpenHostWithRelativeEndpoints
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/ServiceHostFixture/CanCreateServiceHostAndOpenHostWithListenAddress
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/ServiceHostFixture/CanCreateServiceHostAndOpenHostWithMultipleServiceModels
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddBaseAddresses;cs+class://Castle/Facilities/WcfIntegration/Tests/ServiceHostFixture/CanCreateServiceHostAndOpenHostWithMultipleServiceModels
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/ServiceHostFixture/CanCreateServiceHostAndOpenHostWithMultipleServiceModels
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/ServiceHostFixture/WillApplyServiceScopedBehaviors
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddBaseAddresses;cs+class://Castle/Facilities/WcfIntegration/Tests/ServiceHostFixture/WillApplyServiceScopedBehaviorsToDefaultEndpoint
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/ServiceHostFixture/WillApplyServiceScopedBehaviorsToMultipleEndpoints
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/ServiceHostFixture/WillApplyExplcitScopedKeyBehaviors
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/ServiceHostFixture/WillApplyExplcitScopedKeyBehaviors
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddExtensions;cs+class://Castle/Facilities/WcfIntegration/Tests/ServiceHostFixture/WillApplyExplcitScopedKeyBehaviors
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/ServiceHostFixture/WillApplyExplcitScopedServiceBehaviors
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddExtensions;cs+class://Castle/Facilities/WcfIntegration/Tests/ServiceHostFixture/WillApplyExplcitScopedServiceBehaviors
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/ServiceHostFixture/WillApplyInstanceBehaviors
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddExtensions;cs+class://Castle/Facilities/WcfIntegration/Tests/ServiceHostFixture/WillApplyInstanceBehaviors
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/ServiceHostFixture/WillApplyErrorHandlersToServices
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/ServiceHostFixture/Will_apply_multiple_error_handlers_to_service
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/ServiceHostFixture/WillNotApplyErrorHandlersToServicesIfExplicit
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/ServiceHostFixture/WillApplyErrorHandlersToServicesExplicitly
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddExtensions;cs+class://Castle/Facilities/WcfIntegration/Tests/ServiceHostFixture/WillApplyErrorHandlersToServicesExplicitly
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/ServiceHostFixture/Will_apply_multiple_error_handlers_to_service_explicitly
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddExtensions;cs+class://Castle/Facilities/WcfIntegration/Tests/ServiceHostFixture/Will_apply_multiple_error_handlers_to_service_explicitly
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/ServiceHostFixture/WillApplyErrorHandlersToEndpointsExplicitly
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/ServiceHostFixture/CanCaptureRequestsAndResponsesAtEndpointLevel
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/ServiceHostFixture/CanCaptureRequestsAndResponsesAtServiceLevel
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];LogMessages;cs+class://Castle/Facilities/WcfIntegration/Tests/ServiceHostFixture/CanCaptureRequestsAndResponsesAtServiceLevel
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/ServiceHostFixture/CanModifyRequestsAndResponses
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];OpenEagerly;cs+class://Castle/Facilities/WcfIntegration/Tests/ServiceHostFixture/CanGiveFriendlyErrorMessageForUunresolvedServiceDependenciesIfOpenEagerly
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/ServiceHostFixture/CanGiveFriendlyErrorMessageForUunresolvedServiceDependenciesIfOpenEagerly
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/ServiceHostFixture/CanCreateServiceHostWithAspNetCompatibility
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddBaseAddresses;cs+class://Castle/Facilities/WcfIntegration/Tests/ServiceHostFixture/CanPubishMEXEndpointsUsingDefaults
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/ServiceHostFixture/CanPubishMEXEndpointsUsingDefaults
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];PublishMetadata;cs+class://Castle/Facilities/WcfIntegration/Tests/ServiceHostFixture/CanPubishMEXEndpointsUsingDefaults
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddBaseAddresses;cs+class://Castle/Facilities/WcfIntegration/Tests/ServiceHostFixture/CanPubishMEXEndpointsUsingCustomAddress
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/ServiceHostFixture/CanPubishMEXEndpointsUsingCustomAddress
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];PublishMetadata;cs+class://Castle/Facilities/WcfIntegration/Tests/ServiceHostFixture/CanPubishMEXEndpointsUsingCustomAddress
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/ServiceHostFixture/CanPubishMEXEndpointsWithoutBaseAddresses
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];PublishMetadata;cs+class://Castle/Facilities/WcfIntegration/Tests/ServiceHostFixture/CanPubishMEXEndpointsWithoutBaseAddresses
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/ServiceHostFixture/CanPubishMEXEndpointsWithoutBaseAddressesUsingCustomAddress
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];PublishMetadata;cs+class://Castle/Facilities/WcfIntegration/Tests/ServiceHostFixture/CanPubishMEXEndpointsWithoutBaseAddressesUsingCustomAddress
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/ServiceHostFixture/CanOpenServiceHostsWithServicesDependingOnOpenGenerics
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddBaseAddresses;cs+class://Castle/Facilities/WcfIntegration/Tests/ServiceHostFixture/WillRegisterServiceWithServiceCatalog
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/ServiceHostFixture/WillRegisterServiceWithServiceCatalog
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/ServiceHostFixture/WillRegisterServiceWithServiceCatalog
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];Discoverable;cs+class://Castle/Facilities/WcfIntegration/Tests/ServiceHostFixture/WillRegisterServiceWithServiceCatalog
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddBaseAddresses;cs+class://Castle/Facilities/WcfIntegration/Tests/ServiceHostFixture/WillRegisterServiceWithServiceCatalogInDomain
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/ServiceHostFixture/WillRegisterServiceWithServiceCatalogInDomain
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/ServiceHostFixture/WillRegisterServiceWithServiceCatalogInDomain
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];Discoverable;cs+class://Castle/Facilities/WcfIntegration/Tests/ServiceHostFixture/WillRegisterServiceWithServiceCatalogInDomain
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfServiceFixture/TestInitialize
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceModel;cs+class://Castle/Facilities/WcfIntegration/WcfServiceModel[1];AddEndpoints;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfServiceFixture/WillApplyServiceAwareExtensions
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DefaultServiceHostFactory;cs+class://Castle/Facilities/WcfIntegration/WindsorServiceHostFactory[1];CreateServiceHost;cs+class://Castle/Facilities/WcfIntegration/Tests/ServiceHostFactoryFixture/CanCreateServiceByName
False;MethodCall;cs+class://Castle/Facilities/WcfIntegration/ContractEndpointModel;cs+class://Castle/Facilities/WcfIntegration/WcfEndpointBase[1];Contract;cs+class://Castle/Facilities/WcfIntegration/AbstractServiceHostBuilder/AddServiceEndpoint
False;MethodCall;cs+class://Castle/Facilities/WcfIntegration/BindingEndpointModel;cs+class://Castle/Facilities/WcfIntegration/WcfEndpointBase[1];Contract;cs+class://Castle/Facilities/WcfIntegration/AbstractServiceHostBuilder/AddServiceEndpoint
False;MethodCall;cs+class://Castle/Facilities/WcfIntegration/BindingAddressEndpointModel;cs+class://Castle/Facilities/WcfIntegration/WcfEndpointBase[1];Contract;cs+class://Castle/Facilities/WcfIntegration/AbstractServiceHostBuilder/AddServiceEndpoint
False;MethodCall;cs+class://Castle/Facilities/WcfIntegration/BindingAddressEndpointModel;cs+class://Castle/Facilities/WcfIntegration/WcfEndpointBase[1];Contract;cs+class://Castle/Facilities/WcfIntegration/AbstractServiceHostBuilder/AddServiceEndpoint
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/BindingAddressEndpointModel;cs+class://Castle/Facilities/WcfIntegration/WcfEndpointBase[1];AddExtensions;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/WillApplyOperationBehaviors
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/BindingAddressEndpointModel;cs+class://Castle/Facilities/WcfIntegration/WcfEndpointBase[1];AddExtensions;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/WillApplyExlpicitScopedKeyEndpointBehaviors
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/BindingAddressEndpointModel;cs+class://Castle/Facilities/WcfIntegration/WcfEndpointBase[1];AddExtensions;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/WillApplyExlpicitScopedServiceEndpointExtensions
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/BindingAddressEndpointModel;cs+class://Castle/Facilities/WcfIntegration/WcfEndpointBase[1];AddExtensions;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/CanRecoverFromCommunicationExceptionOnEndpoint
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/BindingAddressEndpointModel;cs+class://Castle/Facilities/WcfIntegration/WcfEndpointBase[1];LogMessages;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/CanCaptureRequestsAndResponses
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/BindingAddressEndpointModel;cs+class://Castle/Facilities/WcfIntegration/WcfEndpointBase[1];LogMessages;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/CanCaptureRequestsAndResponsesUsingCustomFormat
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/BindingAddressEndpointModel;cs+class://Castle/Facilities/WcfIntegration/WcfEndpointBase[1];LogMessages;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/CanCaptureRequestsAndResponsesUsingGlobalFormatter
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/BindingAddressEndpointModel;cs+class://Castle/Facilities/WcfIntegration/WcfEndpointBase[1];LogMessages;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/CanCaptureRequestsAndResponsesUsingExplicitFormatter
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/BindingAddressEndpointModel;cs+class://Castle/Facilities/WcfIntegration/WcfEndpointBase[1];AddExtensions;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/CanAddMessageHeader
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/BindingAddressEndpointModel;cs+class://Castle/Facilities/WcfIntegration/WcfEndpointBase[1];LogMessages;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/CanAddMessageHeader
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/BindingAddressEndpointModel;cs+class://Castle/Facilities/WcfIntegration/WcfEndpointBase[1];AddExtensions;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/CanModifyRequestAndResponseBody
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/BindingAddressEndpointModel;cs+class://Castle/Facilities/WcfIntegration/WcfEndpointBase[1];AddExtensions;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/WillUseSameXmlDocumentForConsecutiveModifications
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/BindingAddressEndpointModel;cs+class://Castle/Facilities/WcfIntegration/WcfEndpointBase[1];AddExtensions;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/CanModifyRequestAndResponseBodyAndAddHeaders
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/BindingAddressEndpointModel;cs+class://Castle/Facilities/WcfIntegration/WcfEndpointBase[1];AddExtensions;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/WillCreateNewXmlDocumentForNormalActions
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/BindingAddressEndpointModel;cs+class://Castle/Facilities/WcfIntegration/WcfEndpointBase[1];InScope;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/CanDiscoverServiceEndpointAndInferBindingWithEndpointScope
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/BindingAddressEndpointModel;cs+class://Castle/Facilities/WcfIntegration/WcfEndpointBase[1];InScope;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/CanDiscoverServiceEndpointAndInferBindingWithCombindedScopes
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/BindingAddressEndpointModel;cs+class://Castle/Facilities/WcfIntegration/WcfEndpointBase[1];AddExtensions;cs+class://Castle/Facilities/WcfIntegration/Tests/ServiceHostFixture/WillApplyErrorHandlersToEndpointsExplicitly
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/BindingAddressEndpointModel;cs+class://Castle/Facilities/WcfIntegration/WcfEndpointBase[1];LogMessages;cs+class://Castle/Facilities/WcfIntegration/Tests/ServiceHostFixture/CanCaptureRequestsAndResponsesAtEndpointLevel
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/BindingAddressEndpointModel;cs+class://Castle/Facilities/WcfIntegration/WcfEndpointBase[1];AddExtensions;cs+class://Castle/Facilities/WcfIntegration/Tests/ServiceHostFixture/CanModifyRequestsAndResponses
False;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DiscoveredEndpointModel;cs+class://Castle/Facilities/WcfIntegration/WcfEndpointBase[1];Extensions;cs+class://Castle/Facilities/WcfIntegration/AbstractChannelBuilder/CreateSearchCriteria
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DiscoveredEndpointModel;cs+class://Castle/Facilities/WcfIntegration/WcfEndpointBase[1];InScope;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/WillNotDiscoverServiceEndpointIfScopesDontMatch
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DiscoveredEndpointModel;cs+class://Castle/Facilities/WcfIntegration/WcfEndpointBase[1];InScope;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/CanDiscoverServiceEndpointAndInferBindingWithScope
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DiscoveredEndpointModel;cs+class://Castle/Facilities/WcfIntegration/WcfEndpointBase[1];InScope;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/CanDiscoverServiceEndpointAndInferBindingWithEndpointScope
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DiscoveredEndpointModel;cs+class://Castle/Facilities/WcfIntegration/WcfEndpointBase[1];InScope;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/CanDiscoverServiceEndpointAndInferBindingWithCombindedScopes
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DiscoveredEndpointModel;cs+class://Castle/Facilities/WcfIntegration/WcfEndpointBase[1];InScope;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/CanDiscoverServiceEndpointFromMetadataWithScope
True;MethodCall;cs+class://Castle/Facilities/WcfIntegration/DiscoveredEndpointModel;cs+class://Castle/Facilities/WcfIntegration/WcfEndpointBase[1];InScope;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/CanAddAdditionalDiscoveryMetadata
False;MethodCall;cs+class://Castle/Facilities/WcfIntegration/Tests/Behaviors/ReplaceOperationsResult;cs+class://Castle/Facilities/WcfIntegration/Behaviors/AbstractMessageEnvelopeAction;ExecuteAt;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/WillUseSameXmlDocumentForConsecutiveModifications
False;MethodCall;cs+class://Castle/Facilities/WcfIntegration/Tests/Behaviors/ReplaceOperationsResult;cs+class://Castle/Facilities/WcfIntegration/Behaviors/AbstractMessageEnvelopeAction;ExecuteAt;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/WillUseSameXmlDocumentForConsecutiveModifications
False;MethodCall;cs+class://Castle/Facilities/WcfIntegration/Tests/Behaviors/ReplaceOperationsResult;cs+class://Castle/Facilities/WcfIntegration/Behaviors/AbstractMessageEnvelopeAction;ExecuteAt;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/WillCreateNewXmlDocumentForNormalActions
False;MethodCall;cs+class://Castle/Facilities/WcfIntegration/Tests/Behaviors/ReplaceOperationsResult;cs+class://Castle/Facilities/WcfIntegration/Behaviors/AbstractMessageEnvelopeAction;ExecuteAt;cs+class://Castle/Facilities/WcfIntegration/Tests/WcfClientFixture/WillCreateNewXmlDocumentForNormalActions
